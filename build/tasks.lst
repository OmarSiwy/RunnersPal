ARM GAS  /tmp/ccB9thnJ.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"tasks.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c"
  20              		.section	.text.prvTaskIsTaskSuspended,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	prvTaskIsTaskSuspended:
  27              	.LVL0:
  28              	.LFB15:
   1:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * FreeRTOS Kernel V10.3.1
   3:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Standard includes. */
  29:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include <stdlib.h>
  30:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include <string.h>
ARM GAS  /tmp/ccB9thnJ.s 			page 2


  31:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  33:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** all the API functions to use the MPU wrappers.  That should only be done when
  34:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** task.h is included from an application file. */
  35:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  37:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* FreeRTOS includes. */
  38:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "FreeRTOS.h"
  39:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "task.h"
  40:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "timers.h"
  41:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "stack_macros.h"
  42:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  43:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  44:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  45:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** for the header files above, but not in this file, in order to generate the
  46:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** correct privileged Vs unprivileged linkage and placement. */
  47:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  48:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  49:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  50:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** functions but without including stdio.h here. */
  51:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  52:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* At the bottom of this file are two optional functions that can be used
  53:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	to generate human readable text from the raw data generated by the
  54:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxTaskGetSystemState() function.  Note the formatting functions are provided
  55:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for convenience only, and are NOT considered part of the kernel. */
  56:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#include <stdio.h>
  57:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
  58:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_PREEMPTION == 0 )
  60:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  61:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed just because a higher priority task has been woken. */
  62:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION()
  63:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
  64:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  65:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
  66:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Values that can be assigned to the ucNotifyState member of the TCB. */
  68:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskNOT_WAITING_NOTIFICATION	( ( uint8_t ) 0 )
  69:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskWAITING_NOTIFICATION		( ( uint8_t ) 1 )
  70:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskNOTIFICATION_RECEIVED		( ( uint8_t ) 2 )
  71:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
  73:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
  74:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * is used purely for checking the high water mark for tasks.
  75:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  76:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTACK_FILL_BYTE	( 0xa5U )
  77:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Bits used to recored how a task's stack and TCB were allocated. */
  79:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB 		( ( uint8_t ) 0 )
  80:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_ONLY 			( ( uint8_t ) 1 )
  81:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_AND_TCB		( ( uint8_t ) 2 )
  82:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  83:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* If any of the following are set then task stacks are filled with a known
  84:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** value so the high water mark can be determined.  If none of the following are
  85:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** set then don't fill the stack so there is no unnecessary dependency on memset. */
  86:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTas
  87:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	1
ARM GAS  /tmp/ccB9thnJ.s 			page 3


  88:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
  89:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	0
  90:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
  91:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  92:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
  93:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
  94:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  95:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskRUNNING_CHAR		( 'X' )
  96:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskBLOCKED_CHAR		( 'B' )
  97:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskREADY_CHAR		( 'R' )
  98:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskDELETED_CHAR		( 'D' )
  99:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSUSPENDED_CHAR	( 'S' )
 100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to be
 103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * global, rather than file scope.
 104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define static
 107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The name allocated to the Idle task.  This can be overridden by defining
 110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** configIDLE_TASK_NAME in FreeRTOSConfig.h. */
 111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifndef configIDLE_TASK_NAME
 112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define configIDLE_TASK_NAME "IDLE"
 113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed in a generic way that is not optimised to any particular
 119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	microcontroller architecture. */
 120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* uxTopReadyPriority holds the priority of the highest priority ready
 122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	state task. */
 123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )														\
 124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority ) > uxTopReadyPriority )														\
 126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxTopReadyPriority = ( uxPriority );														\
 128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskRECORD_READY_PRIORITY */
 130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()															\
 134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority = uxTopReadyPriority;														\
 136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																										\
 137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority queue that contains ready tasks. */								\
 138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) )							\
 139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( uxTopPriority );																\
 141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			--uxTopPriority;																			\
 142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																										\
 144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of						\
ARM GAS  /tmp/ccB9thnJ.s 			page 4


 145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the	same priority get an equal share of the processor time. */									\
 146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );			\
 147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxTopReadyPriority = uxTopPriority;																\
 148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK */
 149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	they are only required when a port optimised method of task selection is
 154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	being used. */
 155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )
 156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
 161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed in a way that is tailored to the particular microcontroller
 162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	architecture being used. */
 163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided.  Call the port defined macros. */
 165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )	portRECORD_READY_PRIORITY( uxPriority, uxTopReadyP
 166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()														\
 170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																								\
 171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority;																		\
 172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority list that contains ready tasks. */								\
 174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );								\
 175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 );		\
 176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );		\
 177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided, call it only if the TCB being reset
 182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is being referenced from a ready list.  If it is referenced from a delayed
 183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	or suspended list then it won't be in a ready list. */
 184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )														\
 185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 0 )	\
 187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );							\
 189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** count overflows. */
 198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskSWITCH_DELAYED_LISTS()																	\
 199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {																									\
 200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	List_t *pxTemp;																					\
 201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
ARM GAS  /tmp/ccB9thnJ.s 			page 5


 202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The delayed tasks list should be empty when the lists are switched. */						\
 203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );										\
 204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTemp = pxDelayedTaskList;																		\
 206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = pxOverflowDelayedTaskList;													\
 207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = pxTemp;																\
 208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xNumOfOverflows++;																				\
 209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvResetNextTaskUnblockTime();																	\
 210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
 216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the task.  It is inserted at the end of the list.
 217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define prvAddTaskToReadyList( pxTCB )																\
 219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	traceMOVED_TASK_TO_READY_STATE( pxTCB );														\
 220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );												\
 221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xStateListItem ) );
 222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tracePOST_MOVED_TASK_TO_READY_STATE( pxTCB )
 223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Several functions take an TaskHandle_t parameter that can optionally be NULL,
 227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define prvGetTCBFromHandle( pxHandle ) ( ( ( pxHandle ) == NULL ) ? pxCurrentTCB : ( pxHandle ) )
 232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The item value of the event list item is normally used to hold the priority
 234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** of the task to which it belongs (coded to allow it to be held in reverse
 235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** priority order).  However, it is occasionally borrowed for other purposes.  It
 236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** is important its value is not updated due to a task priority change while it is
 237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** being used for another purpose.  The following bit definition is used to inform
 238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the scheduler that the value should not be changed - in which case it is the
 239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** responsibility of whichever module is using the value to ensure it gets set back
 240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** to its original value when it is released. */
 241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_16_BIT_TICKS == 1 )
 242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x8000U
 243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
 244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x80000000UL
 245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * and stores task state information, including a pointer to the task's context
 250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * (the task's run time environment, including register values)
 251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** typedef struct tskTaskControlBlock 			/* The old naming convention is used to prevent breaking kern
 253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile StackType_t	*pxTopOfStack;	/*< Points to the location of the last item placed on the task
 255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xMPU_SETTINGS	xMPUSettings;		/*< The MPU settings are defined as part of the port layer.  THIS MU
 258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
ARM GAS  /tmp/ccB9thnJ.s 			page 6


 259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	ListItem_t			xStateListItem;	/*< The list that the state list item of a task is reference from den
 261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	ListItem_t			xEventListItem;		/*< Used to reference a task from an event list. */
 262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t			uxPriority;			/*< The priority of the task.  0 is the lowest priority. */
 263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	StackType_t			*pxStack;			/*< Points to the start of the stack. */
 264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char				pcTaskName[ configMAX_TASK_NAME_LEN ];/*< Descriptive name given to the task when created.
 265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( ( portSTACK_GROWTH > 0 ) || ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t		*pxEndOfStack;		/*< Points to the highest valid address for the stack. */
 268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxCriticalNesting;	/*< Holds the critical section nesting depth for ports that do no
 272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTCBNumber;		/*< Stores a number that increments each time a TCB is created.  It al
 276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTaskNumber;		/*< Stores a number specifically for use by third party trace code. *
 277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxBasePriority;		/*< The priority last assigned to the task - used by the priority i
 281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxMutexesHeld;
 282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TaskHookFunction_t pxTaskTag;
 286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		void			*pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configGENERATE_RUN_TIME_STATS == 1 )
 293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t		ulRunTimeCounter;	/*< Stores the amount of time the task has spent in the Running state
 294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate a Newlib reent structure that is specific to this task.
 298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Note Newlib support has been included by popular demand, but is not
 299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		used by the FreeRTOS maintainers themselves.  FreeRTOS is not
 300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		responsible for resulting newlib operation.  User must be familiar with
 301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		newlib and must provide system-wide implementations of the necessary
 302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		stubs. Be warned that (at the time of writing) the current newlib design
 303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		implements a system-wide malloc() that must be provided with locks.
 304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
 306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for additional information. */
 307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		struct	_reent xNewLib_reent;
 308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_TASK_NOTIFICATIONS == 1 )
 311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		volatile uint32_t ulNotifiedValue;
 312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		volatile uint8_t ucNotifyState;
 313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* See the comments in FreeRTOS.h with the definition of
ARM GAS  /tmp/ccB9thnJ.s 			page 7


 316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE. */
 317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolida
 318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint8_t	ucStaticallyAllocated; 		/*< Set to pdTRUE if the task is a statically allocated to ensur
 319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint8_t ucDelayAborted;
 323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_POSIX_ERRNO == 1 )
 326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		int iTaskErrno;
 327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** } tskTCB;
 330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** below to enable the use of older kernel aware debuggers. */
 333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** typedef tskTCB TCB_t;
 334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** which static variables must be declared volatile. */
 337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
 338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Lists for ready and blocked tasks. --------------------
 340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** xDelayedTaskList1 and xDelayedTaskList2 could be move to function scople but
 341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** doing so breaks some kernel aware debuggers and debuggers that rely on removing
 342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the static qualifier. */
 343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ];/*< Prioritised ready tasks
 344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1;						/*< Delayed tasks. */
 345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2;						/*< Delayed tasks (two lists are used - one f
 346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList;				/*< Points to the delayed task list 
 347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList;		/*< Points to the delayed task
 348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList;						/*< Tasks that have been readied while the sc
 349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( INCLUDE_vTaskDelete == 1 )
 351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static List_t xTasksWaitingTermination;				/*< Tasks that have been deleted - but 
 353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
 354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static List_t xSuspendedTaskList;					/*< Tasks that are currently suspended. */
 360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Global POSIX errno. Its value is changed upon context switching to match
 364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the errno of the currently running task. */
 365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_POSIX_ERRNO == 1 )
 366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	int FreeRTOS_errno = 0;
 367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Other file private variables. --------------------------------*/
 370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks 	= ( UBaseType_t ) 0U;
 371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount 				= ( TickType_t ) configINITIAL_TICK_COUNT
 372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority 		= tskIDLE_PRIORITY;
ARM GAS  /tmp/ccB9thnJ.s 			page 8


 373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning 		= pdFALSE;
 374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xPendedTicks 			= ( TickType_t ) 0U;
 375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending 			= pdFALSE;
 376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows 			= ( BaseType_t ) 0;
 377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber 					= ( UBaseType_t ) 0U;
 378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime		= ( TickType_t ) 0U; /* Initialise
 379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle					= NULL;			/*< Holds the handle of the idle 
 380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** interrupts must not manipulate the xStateListItem of a TCB, or any of the
 383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** lists the xStateListItem can be referenced from, if the scheduler is suspended.
 384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** If an interrupt needs to unblock a task while the scheduler is suspended then it
 385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** moves the task's event list item into the xPendingReadyList, ready for the
 386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** kernel to move the task from the pending ready list into the real ready list
 387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** when the scheduler is unsuspended.  The pending ready list itself can only be
 388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** accessed from a critical section. */
 389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended	= ( UBaseType_t ) pdFALSE;
 390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Do not move these variables to function scope as doing so prevents the
 394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	code working with debuggers that need to remove the static qualifier. */
 395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTaskSwitchedInTime = 0UL;	/*< Holds the value of a timer/counter
 396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTotalRunTime = 0UL;		/*< Holds the total amount of execution tim
 397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*lint -restore */
 401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Callback function prototypes. --------------------------*/
 405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if(  configCHECK_FOR_STACK_OVERFLOW > 0 )
 406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationStackOverflowHook( TaskHandle_t xTask, char *pcTaskName );
 408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TICK_HOOK > 0 )
 412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationTickHook( void ); /*lint !e526 Symbol not defined as it is an application 
 414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxI
 420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* File private functions. --------------------------------*/
 424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /**
 426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
 427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * is in any other state.
 429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
ARM GAS  /tmp/ccB9thnJ.s 			page 9


 430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
 433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
 435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
 438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * automatically upon the creation of the first task.
 439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * creation of the first user task.
 446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
 451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters );
 454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * including the stack pointed to by the TCB.
 458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB ) PRIVILEGED_FUNCTION;
 465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
 471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * and its TCB deleted.
 472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * either the current or the overflow delayed task list.
 478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
 480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
 484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * a suspended list, etc.).
 485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
ARM GAS  /tmp/ccB9thnJ.s 			page 10


 487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * NORMAL APPLICATION CODE.
 488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
 492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Searches pxList for a task with name pcNameToQuery - returning a handle to
 497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the task if it is found, or NULL if the task is not found.
 498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] ) PRIVI
 502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * determining how much of the stack remains at the original preset value.
 509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( INCLUD
 511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static configSTACK_DEPTH_TYPE prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVILEGE
 513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
 518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * next move a task from the Blocked state to the Running state.
 519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * set to a value other than 1.
 524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
 528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * will exit the Blocked state.
 534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void );
 536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
 538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*
 540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 * Helper function used to pad task names with spaces when printing out
 541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 * human readable tables of task information.
 542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 */
 543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName ) PRIVILEGED_FUNCTION;
ARM GAS  /tmp/ccB9thnJ.s 			page 11


 544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Called after a Task_t structure has been allocated either statically or
 549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * dynamically to fill in the structure's members.
 550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName, 		/*lint !e971 Unqualified char types are allowed for strings a
 553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TCB_t *pxNewTCB,
 558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const MemoryRegion_t * const xRegions ) PRIVILEGED_FUNCTION;
 559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Called after a new task has been created and initialised to place the task
 562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * under the control of the scheduler.
 563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB ) PRIVILEGED_FUNCTION;
 565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * freertos_tasks_c_additions_init() should only be called if the user definable
 568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is the only macro
 569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * called by the function.
 570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
 572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void freertos_tasks_c_additions_init( void ) PRIVILEGED_FUNCTION;
 574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskCreateStatic(	TaskFunction_t pxTaskCode,
 582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									StackType_t * const puxStackBuffer,
 587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									StaticTask_t * const pxTaskBuffer )
 588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( puxStackBuffer != NULL );
 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configASSERT_DEFINED == 1 )
 596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Sanity check that the size of the structure used to declare a
 598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			variable of type StaticTask_t equals the size of the real task
 599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure. */
 600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			volatile size_t xSize = sizeof( StaticTask_t );
ARM GAS  /tmp/ccB9thnJ.s 			page 12


 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configASSERT_DEFINED */
 605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
 608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The memory used for the task's TCB and stack are passed into this
 610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function - use them. */
 611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 !e9087 Unusual cast is ok as the structures ar
 612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consoli
 615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNe
 623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = NULL;
 628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* SUPPORT_STATIC_ALLOCATION */
 634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreateRestrictedStatic( const TaskParameters_t * const pxTaskDefinition, TaskHandl
 639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer != NULL );
 644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->pxTaskBuffer != NULL );
 645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTaskDefinition->puxStackBuffer != NULL ) && ( pxTaskDefinition->pxTaskBuffer != NULL ) )
 647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not static allocation is being used. */
 651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskDefinition->pxTaskBuffer;
 652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Store the stack location in the TCB. */
 654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccB9thnJ.s 			page 13


 658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->pcName,
 666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									( uint32_t ) pxTaskDefinition->usStackDepth,
 667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->pvParameters,
 668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->uxPriority,
 669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxCreatedTask, pxNewTCB,
 670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->xRegions );
 671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition, TaskHandle_t *p
 685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer );
 690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskDefinition->puxStackBuffer != NULL )
 692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not static allocation is being used. */
 696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Store the stack location in the TCB. */
 701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Tasks can be created statically or dynamically, so note
 706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task had a statically allocated stack in case it is
 707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					later deleted.  The TCB was allocated dynamically. */
 708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_ONLY;
 709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->pcName,
 714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										( uint32_t ) pxTaskDefinition->usStackDepth,
ARM GAS  /tmp/ccB9thnJ.s 			page 14


 715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->pvParameters,
 716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->uxPriority,
 717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxCreatedTask, pxNewTCB,
 718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->xRegions );
 719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddNewTaskToReadyList( pxNewTCB );
 721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
 729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreate(	TaskFunction_t pxTaskCode,
 734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings and 
 735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							const configSTACK_DEPTH_TYPE usStackDepth,
 736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							void * const pvParameters,
 737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							UBaseType_t uxPriority,
 738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							TaskHandle_t * const pxCreatedTask )
 739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the stack grows down then allocate the stack then the TCB so the stack
 744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		does not grow into the TCB.  Likewise if the stack grows up then allocate
 745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the TCB then the stack. */
 746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portSTACK_GROWTH > 0 )
 747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends on
 749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the implementation of the port malloc function and whether or not static
 750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			allocation is being used. */
 751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Allocate space for the stack used by the task being created.
 756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				The base of the stack memory stored in the TCB so the task can
 757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				be deleted later if required. */
 758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( Sta
 759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxNewTCB->pxStack == NULL )
 761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Could not allocate the stack.  Delete the allocated TCB. */
 763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vPortFree( pxNewTCB );
 764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB = NULL;
 765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else /* portSTACK_GROWTH */
 769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxStack;
 771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccB9thnJ.s 			page 15


 772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the stack used by the task being created. */
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079
 774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxStack != NULL )
 776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Allocate space for the TCB. */
 778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returne
 779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxNewTCB != NULL )
 781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Store the stack location in the TCB. */
 783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB->pxStack = pxStack;
 784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
 786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The stack cannot be used as the TCB was not created.  Free
 788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it again. */
 789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vPortFree( pxStack );
 790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
 793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB = NULL;
 795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portSTACK_GROWTH */
 798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxNewTCB != NULL )
 800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e9029 !e731 Macro has been consoli
 802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created dynamically in case it is later deleted. */
 805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, p
 810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
ARM GAS  /tmp/ccB9thnJ.s 			page 16


 829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TCB_t *pxNewTCB,
 831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const MemoryRegion_t * const xRegions )
 832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t x;
 835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Should the task be created in privileged mode? */
 838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		BaseType_t xRunPrivileged;
 839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xRunPrivileged = pdTRUE;
 842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xRunPrivileged = pdFALSE;
 846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxPriority &= ~portPRIVILEGE_BIT;
 848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS == 1 */
 849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Avoid dependency on memset() if it is not required. */
 851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( tskSET_NEW_STACKS_TO_KNOWN_VALUE == 1 )
 852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Fill the stack with a known value to assist debugging. */
 854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof(
 855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* tskSET_NEW_STACKS_TO_KNOWN_VALUE */
 857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Calculate the top of stack address.  This depends on whether the stack
 859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	grows from high memory to low (as per the 80x86) or vice versa.
 860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portSTACK_GROWTH is used to make the result positive or negative as required
 861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	by the port. */
 862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portSTACK_GROWTH < 0 )
 863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check the alignment of the calculated top of stack is correct. */
 868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBYTE_ALI
 869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configRECORD_STACK_HIGH_ADDRESS == 1 )
 871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Also record the stack's high address, which may assist
 873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			debugging. */
 874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxEndOfStack = pxTopOfStack;
 875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configRECORD_STACK_HIGH_ADDRESS */
 877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* portSTACK_GROWTH */
 879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack;
 881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check the alignment of the stack buffer is correct. */
 883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE ) portBYT
 884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The other extreme of the stack space is required if stack checking is
ARM GAS  /tmp/ccB9thnJ.s 			page 17


 886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		performed. */
 887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portSTACK_GROWTH */
 890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the task name in the TCB. */
 892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pcName != NULL )
 893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
 899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configMAX_TASK_NAME_LEN characters just in case the memory after the
 900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			string is not accessible (extremely unlikely). */
 901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pcName[ x ] == ( char ) 0x00 )
 902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				break;
 904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
 906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Ensure the name string is terminated in the case that the string length
 912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		was greater or equal to configMAX_TASK_NAME_LEN. */
 913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
 916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The task has not been given a name, so just ensure there is a NULL
 918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		terminator when it is read out. */
 919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* This is used as an array index so must ensure it's not too large.  First
 923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	remove the privilege bit if one is present. */
 924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
 929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxNewTCB->uxPriority = uxPriority;
 934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxBasePriority = uxPriority;
 937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_MUTEXES */
 940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
ARM GAS  /tmp/ccB9thnJ.s 			page 18


 943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
 945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	back to	the containing TCB from a generic item in a list. */
 946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Event lists are always in priority order. */
 949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( Ti
 950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxCriticalNesting = ( UBaseType_t ) 0U;
 955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portCRITICAL_NESTING_IN_TCB */
 957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxTaskTag = NULL;
 961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_APPLICATION_TASK_TAG */
 963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configGENERATE_RUN_TIME_STATS == 1 )
 965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ulRunTimeCounter = 0UL;
 967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configGENERATE_RUN_TIME_STATS */
 969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxNewTCB->xMPUSettings ), xRegions, pxNewTCB->pxStack, ulStackDepth
 973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else
 975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Avoid compiler warning about unreferenced parameter. */
 977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xRegions;
 978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = 0; x < ( UBaseType_t ) configNUM_THREAD_LOCAL_STORAGE_POINTERS; x++ )
 984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pvThreadLocalStoragePointers[ x ] = NULL;
 986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TASK_NOTIFICATIONS == 1 )
 991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ulNotifiedValue = 0;
 993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Initialise this task's Newlib reent structure.
ARM GAS  /tmp/ccB9thnJ.s 			page 19


1000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
1001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for additional information. */
1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
1003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
1005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
1007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucDelayAborted = pdFALSE;
1009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
1011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Initialize the TCB stack to look as if the task was already running,
1013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	but had been interrupted by the scheduler.  The return address is set
1014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	to the start of the task function. Once the stack has been initialised
1015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the top of stack variable is updated. */
1016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
1017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the port has capability to detect stack overflow,
1019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pass the stack end address to the stack initialization
1020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function as well. */
1021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portHAS_STACK_OVERFLOW_CHECKING == 1 )
1022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( portSTACK_GROWTH < 0 )
1024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, pxTaskCode, pv
1026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else /* portSTACK_GROWTH */
1028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxEndOfStack, pxTaskCod
1030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* portSTACK_GROWTH */
1032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else /* portHAS_STACK_OVERFLOW_CHECKING */
1034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPriv
1036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portHAS_STACK_OVERFLOW_CHECKING */
1038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* portUSING_MPU_WRAPPERS */
1040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the port has capability to detect stack overflow,
1042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pass the stack end address to the stack initialization
1043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function as well. */
1044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portHAS_STACK_OVERFLOW_CHECKING == 1 )
1045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( portSTACK_GROWTH < 0 )
1047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, pxTaskCode, pv
1049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else /* portSTACK_GROWTH */
1051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxEndOfStack, pxTaskCod
1053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* portSTACK_GROWTH */
1055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else /* portHAS_STACK_OVERFLOW_CHECKING */
ARM GAS  /tmp/ccB9thnJ.s 			page 20


1057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
1059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portHAS_STACK_OVERFLOW_CHECKING */
1061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS */
1063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxCreatedTask != NULL )
1065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Pass the handle out in an anonymous way.  The handle can be used to
1067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		change the created task's priority, delete the created task, etc.*/
1068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
1069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
1071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
1075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
1079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
1080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	updated. */
1081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
1082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxCurrentNumberOfTasks++;
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
1085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are no other tasks, or all the other tasks are in
1087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the suspended state - make this the current task. */
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB = pxNewTCB;
1089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
1091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* This is the first task to be created so do the preliminary
1093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				initialisation required.  We will not recover if this call
1094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				fails, but we will report the failure. */
1095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvInitialiseTaskLists();
1096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the scheduler is not already running, make this task the
1105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			current task if it is the highest priority task to be created
1106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			so far. */
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning == pdFALSE )
1108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
1110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = pxNewTCB;
1112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
ARM GAS  /tmp/ccB9thnJ.s 			page 21


1114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxTaskNumber++;
1125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TRACE_FACILITY == 1 )
1127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add a counter into the TCB for tracing only. */
1129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->uxTCBNumber = uxTaskNumber;
1130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TRACE_FACILITY */
1132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_CREATE( pxNewTCB );
1133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxNewTCB );
1135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portSETUP_TCB( pxNewTCB );
1137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
1139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( xSchedulerRunning != pdFALSE )
1141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the created task is of a higher priority than the current task
1143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		then it should run now. */
1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
1145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskYIELD_IF_USING_PREEMPTION();
1147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
1154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
1158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
1161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelete( TaskHandle_t xTaskToDelete )
1163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the calling task that is
1169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being deleted. */
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
ARM GAS  /tmp/ccB9thnJ.s 			page 22


1171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready/delayed list. */
1173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Increment the uxTaskNumber also so kernel aware debuggers can
1193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			detect that the task lists need re-generating.  This is done before
1194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portPRE_TASK_DELETE_HOOK() as in the Windows port that macro will
1195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not return. */
1196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxTaskNumber++;
1197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task is deleting itself.  This cannot complete within the
1201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task itself, as a context switch to another task is required.
1202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				Place the task in the termination list.  The idle task will
1203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				check the termination list and free up any memory allocated by
1204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the scheduler for the TCB and stack of the deleted task. */
1205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
1206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Increment the ucTasksDeleted variable so the idle task knows
1208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				there is a task that has been deleted and that it should therefore
1209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				check the xTasksWaitingTermination list. */
1210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				++uxDeletedTasksWaitingCleanUp;
1211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Call the delete hook before portPRE_TASK_DELETE_HOOK() as
1213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK() does not return in the Win32 port. */
1214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELETE( pxTCB );
1215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The pre-delete hook is primarily for the Windows simulator,
1217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				in which Windows specific clean up operations are performed,
1218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				after which it is not possible to yield away from this task -
1219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				hence xYieldPending is used to latch that a context switch is
1220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				required. */
1221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
1222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
1226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELETE( pxTCB );
1227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
ARM GAS  /tmp/ccB9thnJ.s 			page 23


1228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Reset the next expected unblock time in case it referred to
1230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task that has just been deleted. */
1231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if it is the currently running task that has just
1237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been deleted. */
1238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
1244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
1253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
1256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement )
1258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xTimeToWake;
1260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
1261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxPreviousWakeTime );
1263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
1264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
1265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
1267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Minor optimisation.  The tick count cannot change in this
1269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			block. */
1270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			const TickType_t xConstTickCount = xTickCount;
1271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the tick time at which the task wants to wake. */
1273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
1274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xConstTickCount < *pxPreviousWakeTime )
1276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The tick count has overflowed since this function was
1278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				lasted called.  In this case the only time we should ever
1279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				actually delay is if the wake time has also	overflowed,
1280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				and the wake time is greater than the tick time.  When this
1281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is the case it is as if neither time had overflowed. */
1282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
1283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
ARM GAS  /tmp/ccB9thnJ.s 			page 24


1285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The tick time has not overflowed.  In this case we will
1294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				delay if either the wake time has overflowed, and/or the
1295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				tick time is less than the wake time. */
1296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
1297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
1299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Update the wake time ready for the next call. */
1307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxPreviousWakeTime = xTimeToWake;
1308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xShouldDelay != pdFALSE )
1310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY_UNTIL( xTimeToWake );
1312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* prvAddCurrentTaskToDelayedList() needs the block time, not
1314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the time to wake, so subtract the current tick count. */
1315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
1316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xAlreadyYielded = xTaskResumeAll();
1323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
1326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
1329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelayUntil */
1337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
1340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelay( const TickType_t xTicksToDelay )
ARM GAS  /tmp/ccB9thnJ.s 			page 25


1342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
1344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* A delay time of zero just forces a reschedule. */
1346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTicksToDelay > ( TickType_t ) 0U )
1347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( uxSchedulerSuspended == 0 );
1349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
1350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY();
1352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task that is removed from the event list while the
1354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				scheduler is suspended will not get placed in the ready
1355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				list or removed from the blocked list until the scheduler
1356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is resumed.
1357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				This task cannot be in an event list as it is the currently
1359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				executing task. */
1360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
1361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xAlreadyYielded = xTaskResumeAll();
1363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
1371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
1374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelay */
1382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( INCLUDE_eTaskGetState == 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_xTaskAbortDel
1385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eTaskState eTaskGetState( TaskHandle_t xTask )
1387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eTaskState eReturn;
1389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	List_t const * pxStateList, *pxDelayedList, *pxOverflowedDelayedList;
1390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
1391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
1393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task calling this function is querying its own state. */
1397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eRunning;
1398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/ccB9thnJ.s 			page 26


1399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxStateList = listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
1404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxDelayedList = pxDelayedTaskList;
1405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxOverflowedDelayedList = pxOverflowDelayedTaskList;
1406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ( pxStateList == pxDelayedList ) || ( pxStateList == pxOverflowedDelayedList ) )
1410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task being queried is referenced from one of the Blocked
1412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				lists. */
1413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eBlocked;
1414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
1417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( pxStateList == &xSuspendedTaskList )
1418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the suspended
1420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					list.  Is it genuinely suspended or is it blocked
1421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					indefinitely? */
1422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
1423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#if( configUSE_TASK_NOTIFICATIONS == 1 )
1425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* The task does not appear on the event list item of
1427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							and of the RTOS objects, but could still be in the
1428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							blocked state if it is waiting on its notification
1429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							rather than waiting on an object. */
1430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
1431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
1432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								eReturn = eBlocked;
1433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
1434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							else
1435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
1436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								eReturn = eSuspended;
1437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
1438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
1440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							eReturn = eSuspended;
1442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
1444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						eReturn = eBlocked;
1448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskDelete == 1 )
1453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
1454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the deleted
ARM GAS  /tmp/ccB9thnJ.s 			page 27


1456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					tasks list, or it is not referenced from any lists at
1457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					all. */
1458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					eReturn = eDeleted;
1459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer. */
1463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task is not in any other state, it must be in the
1465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				Ready (including pending ready) state. */
1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eReady;
1467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return eReturn;
1471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_eTaskGetState */
1474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGet( const TaskHandle_t xTask )
1479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
1481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the task
1486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			that called uxTaskPriorityGet() that is being queried. */
1487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
1493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGetFromISR( const TaskHandle_t xTask )
1501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
1503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
1504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
ARM GAS  /tmp/ccB9thnJ.s 			page 28


1513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		https://www.freertos.org/RTOS-Cortex-M3-M4.html */
1521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
1524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is being queried. */
1527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
1531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
1533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
1539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority )
1541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( uxNewPriority < configMAX_PRIORITIES ) );
1547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Ensure the new priority is valid. */
1549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
1550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
1552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is being changed. */
1562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
1565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( configUSE_MUTEXES == 1 )
1567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxBasePriority;
1569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/ccB9thnJ.s 			page 29


1570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
1571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxPriority;
1573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentBasePriority != uxNewPriority )
1577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The priority change may have readied a task of higher
1579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				priority than the calling task. */
1580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxNewPriority > uxCurrentBasePriority )
1581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB != pxCurrentTCB )
1583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The priority of a task other than the currently
1585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						running task is being raised.  Is the priority being
1586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						raised above that of the running task? */
1587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( uxNewPriority >= pxCurrentTCB->uxPriority )
1588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xYieldRequired = pdTRUE;
1590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
1592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
1594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The priority of the running task is being raised,
1599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						but the running task must already be the highest
1600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						priority task able to run so no yield is required. */
1601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( pxTCB == pxCurrentTCB )
1604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of the running task down means
1606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					there may now be another task of higher priority that
1607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is ready to execute. */
1608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xYieldRequired = pdTRUE;
1609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of any other task down does not
1613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					require a yield as the running task must be above the
1614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					new priority of the task being modified. */
1615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remember the ready list the task might be referenced from
1618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				before its uxPriority member is changed so the
1619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY() macro can function correctly. */
1620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityUsedOnEntry = pxTCB->uxPriority;
1621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( configUSE_MUTEXES == 1 )
1623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Only change the priority being used if the task is not
1625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					currently using an inherited priority. */
1626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxBasePriority == pxTCB->uxPriority )
ARM GAS  /tmp/ccB9thnJ.s 			page 30


1627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->uxPriority = uxNewPriority;
1629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The base priority gets set whatever. */
1636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxBasePriority = uxNewPriority;
1637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
1639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxNewPriority;
1641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
1643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only reset the event list item value if the value is not
1645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				being used for anything else. */
1646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
1647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES - (
1649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task is in the blocked or suspended list we need do
1656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				nothing more than change its priority variable. However, if
1657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task is in a ready list it needs to be removed and placed
1658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				in the list appropriate to its new priority. */
1659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateL
1660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is currently in its ready list - remove before
1662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					adding it to it's new ready list.  As we are in a critical
1663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section we can do this even if the scheduler is suspended. */
1664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is known that the task is in its ready list so
1667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						there is no need to check again and the port level
1668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						reset macro can be called directly. */
1669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
1670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xYieldRequired != pdFALSE )
1683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/ccB9thnJ.s 			page 31


1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
1685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remove compiler warning about unused variables when the port
1692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				optimised task selection is not being used. */
1693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxPriorityUsedOnEntry;
1694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSuspend( TaskHandle_t xTaskToSuspend )
1705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the running task that is
1711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being suspended. */
1712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
1713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_SUSPEND( pxTCB );
1715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready/delayed list and place in the
1717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			suspended list. */
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
1738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( configUSE_TASK_NOTIFICATIONS == 1 )
1740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccB9thnJ.s 			page 32


1741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
1742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task was blocked to wait for a notification, but is
1744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					now suspended, so no notification was received. */
1745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
1746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Reset the next expected unblock time in case it referred to the
1755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is now in the Suspended state. */
1756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning != pdFALSE )
1770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The current task has just been suspended. */
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
1774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The scheduler is not running, but the task that was pointed
1778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				to by pxCurrentTCB has just been suspended and pxCurrentTCB
1779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				must be adjusted to point to a different task. */
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks ) /*lint !e931 Rig
1781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* No other tasks are ready, so set pxCurrentTCB back to
1783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					NULL so when the next task is created pxCurrentTCB will
1784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be set to point to it no matter what its relative priority
1785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is. */
1786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = NULL;
1787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vTaskSwitchContext();
1791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/ccB9thnJ.s 			page 33


1798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
1806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
  29              		.loc 1 1806 2 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
  34              		.loc 1 1807 2 view .LVU1
1808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  35              		.loc 1 1808 2 view .LVU2
1809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Accesses xPendingReadyList so must be called from a critical
1811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		section. */
1812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to check if the calling task is suspended. */
1814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTask );
  36              		.loc 1 1814 3 view .LVU3
  37 0000 28B1     		cbz	r0, .L8
  38              		.loc 1 1814 24 discriminator 2 view .LVU4
1815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Is the task being resumed actually in the suspended list? */
1817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
  39              		.loc 1 1817 3 discriminator 2 view .LVU5
  40              		.loc 1 1817 7 is_stmt 0 discriminator 2 view .LVU6
  41 0002 4169     		ldr	r1, [r0, #20]
  42              		.loc 1 1817 5 discriminator 2 view .LVU7
  43 0004 0C4A     		ldr	r2, .L10
  44 0006 9142     		cmp	r1, r2
  45 0008 0AD0     		beq	.L9
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  46              		.loc 1 1807 13 view .LVU8
  47 000a 0020     		movs	r0, #0
  48              	.LVL1:
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  49              		.loc 1 1807 13 view .LVU9
  50 000c 7047     		bx	lr
  51              	.LVL2:
  52              	.L8:
1814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  53              		.loc 1 1814 3 is_stmt 1 view .LVU10
  54              	.LBB110:
  55              	.LBI110:
  56              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.3.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
ARM GAS  /tmp/ccB9thnJ.s 			page 34


   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
ARM GAS  /tmp/ccB9thnJ.s 			page 35


  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/ccB9thnJ.s 			page 36


 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
ARM GAS  /tmp/ccB9thnJ.s 			page 37


 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
  57              		.loc 2 191 30 view .LVU11
  58              	.LBB111:
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
  59              		.loc 2 193 1 view .LVU12
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
  60              		.loc 2 195 2 view .LVU13
  61              		.syntax unified
  62              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
  63 000e 4FF05003 			mov r3, #80												
  64 0012 83F31188 		msr basepri, r3											
  65 0016 BFF36F8F 		isb														
  66 001a BFF34F8F 		dsb														
  67              	
  68              	@ 0 "" 2
  69              	.LVL3:
  70              		.thumb
  71              		.syntax unified
  72              	.L3:
  73              		.loc 2 195 2 is_stmt 0 view .LVU14
  74              	.LBE111:
  75              	.LBE110:
1814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  76              		.loc 1 1814 3 is_stmt 1 discriminator 1 view .LVU15
1814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  77              		.loc 1 1814 3 discriminator 1 view .LVU16
  78 001e FEE7     		b	.L3
  79              	.L9:
1818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Has the task already been resumed from within an ISR? */
1820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
  80              		.loc 1 1820 4 view .LVU17
  81              		.loc 1 1820 8 is_stmt 0 view .LVU18
  82 0020 836A     		ldr	r3, [r0, #40]
  83              		.loc 1 1820 6 view .LVU19
  84 0022 064A     		ldr	r2, .L10+4
  85 0024 9342     		cmp	r3, r2
  86 0026 02D0     		beq	.L6
1821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Is it in the suspended list because it is in the	Suspended
1823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				state, or because is is blocked with no timeout? */
1824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint !e961.  The
ARM GAS  /tmp/ccB9thnJ.s 			page 38


  87              		.loc 1 1824 5 is_stmt 1 view .LVU20
  88              		.loc 1 1824 7 is_stmt 0 view .LVU21
  89 0028 1BB1     		cbz	r3, .L7
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  90              		.loc 1 1807 13 view .LVU22
  91 002a 0020     		movs	r0, #0
  92              	.LVL4:
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  93              		.loc 1 1807 13 view .LVU23
  94 002c 7047     		bx	lr
  95              	.LVL5:
  96              	.L6:
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  97              		.loc 1 1807 13 view .LVU24
  98 002e 0020     		movs	r0, #0
  99              	.LVL6:
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
 100              		.loc 1 1807 13 view .LVU25
 101 0030 7047     		bx	lr
 102              	.LVL7:
 103              	.L7:
1825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
 104              		.loc 1 1826 14 view .LVU26
 105 0032 0120     		movs	r0, #1
 106              	.LVL8:
1827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
 107              		.loc 1 1840 28 is_stmt 1 view .LVU27
1841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 108              		.loc 1 1843 3 view .LVU28
1844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 109              		.loc 1 1844 2 is_stmt 0 view .LVU29
 110 0034 7047     		bx	lr
 111              	.L11:
 112 0036 00BF     		.align	2
 113              	.L10:
 114 0038 00000000 		.word	xSuspendedTaskList
 115 003c 00000000 		.word	xPendingReadyList
 116              		.cfi_endproc
 117              	.LFE15:
 119              		.section	.text.prvResetNextTaskUnblockTime,"ax",%progbits
 120              		.align	1
ARM GAS  /tmp/ccB9thnJ.s 			page 39


 121              		.syntax unified
 122              		.thumb
 123              		.thumb_func
 125              	prvResetNextTaskUnblockTime:
 126              	.LFB41:
1845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskResume( TaskHandle_t xTaskToResume )
1852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
1854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to resume the calling task. */
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
1857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The parameter cannot be NULL as it is impossible to resume the
1859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		currently executing task. */
1860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTCB != pxCurrentTCB ) && ( pxTCB != NULL ) )
1861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_RESUME( pxTCB );
1867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The ready list can be accessed even if the scheduler is
1869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					suspended because this is inside a critical section. */
1870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A higher priority task may have just been resumed. */
1874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* This yield may not cause the task just resumed to run,
1877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						but will leave the lists in the correct state for the
1878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						next yield. */
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskYIELD_IF_USING_PREEMPTION();
1880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/ccB9thnJ.s 			page 40


1897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
1909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
1910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
1912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		https://www.freertos.org/RTOS-Cortex-M3-M4.html */
1929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_RESUME_FROM_ISR( pxTCB );
1936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Check the ready lists can be accessed. */
1938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
1939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Ready lists can be accessed so move the task from the
1941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					suspended list to the ready list directly. */
1942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldRequired = pdTRUE;
1945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/ccB9thnJ.s 			page 41


1954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed or ready lists cannot be accessed so the task
1957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is held in the pending ready list until the scheduler is
1958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					unsuspended. */
1959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
1960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xYieldRequired;
1970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
1973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskStartScheduler( void )
1976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
1977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
1978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Add the idle task at the lowest priority. */
1980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configSUPPORT_STATIC_ALLOCATION == 1 )
1981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
1983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
1984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
1985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The Idle task is created using user provided RAM - obtain the
1987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		address of the RAM then create the idle task. */
1988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize
1989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
1990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
1991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												ulIdleTaskStackSize,
1992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												( void * ) NULL, /*lint !e961.  The cast is not redundant for all compilers. */
1993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												portPRIVILEGE_BIT, /* In effect ( tskIDLE_PRIORITY | portPRIVILEGE_BIT ), but tskIDLE_P
1994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												pxIdleTaskStackBuffer,
1995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exception, justified as it is not a redundant
1996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIdleTaskHandle != NULL )
1998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
2000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
2004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else
2007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The Idle task is being created using dynamically allocated RAM. */
2009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = xTaskCreate(	prvIdleTask,
2010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								configIDLE_TASK_NAME,
ARM GAS  /tmp/ccB9thnJ.s 			page 42


2011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								configMINIMAL_STACK_SIZE,
2012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								( void * ) NULL,
2013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								portPRIVILEGE_BIT, /* In effect ( tskIDLE_PRIORITY | portPRIVILEGE_BIT ), but tskIDLE_PRIOR
2014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								&xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as it is not a redundant explic
2015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configSUPPORT_STATIC_ALLOCATION */
2017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TIMERS == 1 )
2019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xReturn == pdPASS )
2021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTimerCreateTimerTask();
2023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_TIMERS */
2030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( xReturn == pdPASS )
2032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* freertos_tasks_c_additions_init() should only be called if the user
2034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		definable macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is
2035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the only macro called by the function. */
2036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
2037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			freertos_tasks_c_additions_init();
2039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Interrupts are turned off here, to ensure a tick does not occur
2043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		before or during the call to xPortStartScheduler().  The stacks of
2044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the created tasks contain a status word with interrupts switched on
2045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		so interrupts will automatically get re-enabled when the first task
2046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		starts to run. */
2047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
2048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
2050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
2052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure specific to the task that will run first.
2053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
2054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for additional information. */
2055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
2056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
2058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
2060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
2061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
2062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If configGENERATE_RUN_TIME_STATS is defined then the following
2064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		macro must be defined to configure the timer/counter used to generate
2065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the run time counter time base.   NOTE:  If configGENERATE_RUN_TIME_STATS
2066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is set to 0 and the following line fails to build then ensure you do not
2067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() defined in your
ARM GAS  /tmp/ccB9thnJ.s 			page 43


2068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		FreeRTOSConfig.h file. */
2069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
2070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
2072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Setting up the timer tick is hardware specific and thus in the
2074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portable interface. */
2075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xPortStartScheduler() != pdFALSE )
2076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Should not reach here as if the scheduler is running the
2078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function will not return. */
2079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Should only reach here if a task calls xTaskEndScheduler(). */
2083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This line will only be reached if the kernel could not be started,
2088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		because there was not enough FreeRTOS heap to create the idle task
2089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		or the timer task. */
2090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
2091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
2094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	meaning xIdleTaskHandle is not used anywhere else. */
2095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) xIdleTaskHandle;
2096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskEndScheduler( void )
2100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
2102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	routine so the original ISRs can be restored if necessary.  The port
2103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	layer must ensure interrupts enable	bit is left in the correct state. */
2104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portDISABLE_INTERRUPTS();
2105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
2107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSuspendAll( void )
2111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required as the variable is of type
2113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t.  Please read Richard Barry's reply in the following link to a
2114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	post in the FreeRTOS support forum before reporting this as a bug! -
2115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	http://goo.gl/wu4acr */
2116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* portSOFRWARE_BARRIER() is only implemented for emulated/simulated ports that
2118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	do not otherwise exhibit real time behaviour. */
2119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portSOFTWARE_BARRIER();
2120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The scheduler is suspended if uxSchedulerSuspended is non-zero.  An increment
2122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is used to allow calls to vTaskSuspendAll() to nest. */
2123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	++uxSchedulerSuspended;
2124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccB9thnJ.s 			page 44


2125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Enforces ordering for ports and optimised compilers that may otherwise place
2126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the above increment elsewhere. */
2127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portMEMORY_BARRIER();
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void )
2134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xReturn;
2136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
2137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxHigherPriorityReadyTasks takes care of the case where
2139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
2140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		task that are in the Ready state, even though the idle task is
2141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		running. */
2142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
2143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxTopReadyPriority > tskIDLE_PRIORITY )
2145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
2150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;
2152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* When port optimised task selection is used the uxTopReadyPriority
2154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			variable is used as a bit map.  If bits other than the least
2155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			significant bit are set then there are tasks that have a priority
2156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			above the idle priority that are in the Ready state.  This takes
2157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			care of the case where the co-operative scheduler is in use. */
2158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxTopReadyPriority > uxLeastSignificantBit )
2159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
2166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
2170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are other idle priority tasks in the ready state.  If
2172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			time slicing is used then the very next tick interrupt must be
2173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			processed. */
2174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( uxHigherPriorityReadyTasks != pdFALSE )
2177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are tasks in the Ready state that have a priority above the
2179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			idle priority.  This path can only be reached if
2180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configUSE_PREEMPTION is 0. */
2181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
ARM GAS  /tmp/ccB9thnJ.s 			page 45


2182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xNextTaskUnblockTime - xTickCount;
2186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskResumeAll( void )
2195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB = NULL;
2197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
2198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If uxSchedulerSuspended is zero then this function does not match a
2200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	previous call to vTaskSuspendAll(). */
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended );
2202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* It is possible that an ISR caused a task to be removed from an event
2204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list while the scheduler was suspended.  If this was the case then the
2205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	removed task will have been added to the xPendingReadyList.  Once the
2206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	scheduler has been resumed it is safe to move all the pending ready
2207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tasks from this list into their appropriate ready list. */
2208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
2209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		--uxSchedulerSuspended;
2211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
2215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Move any readied tasks from the pending list into the
2217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				appropriate ready list. */
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
2219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as
2221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the moved task has a priority higher than the current
2226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					task then a yield must be performed. */
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
2230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB != NULL )
2238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/ccB9thnJ.s 			page 46


2239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task was unblocked while the scheduler was suspended,
2240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					which may have prevented the next unblock time from being
2241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					re-calculated, in which case re-calculate it now.  Mainly
2242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					important for low power tickless implementations, where
2243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this can prevent an unnecessary exit from low power
2244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					state. */
2245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
2246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If any ticks occurred while the scheduler was suspended then
2249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				they should be processed now.  This ensures the tick count does
2250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				not	slip, and that any delayed tasks are resumed at the correct
2251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				time. */
2252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
2254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xPendedCounts > ( TickType_t ) 0U )
2256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						do
2258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( xTaskIncrementTick() != pdFALSE )
2260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
2261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								xYieldPending = pdTRUE;
2262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
2263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							else
2264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
2265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								mtCOVERAGE_TEST_MARKER();
2266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
2267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							--xPendedCounts;
2268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						} while( xPendedCounts > ( TickType_t ) 0U );
2269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xPendedTicks = 0;
2271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xYieldPending != pdFALSE )
2279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#if( configUSE_PREEMPTION != 0 )
2281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xAlreadyYielded = pdTRUE;
2283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#endif
2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
2286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/ccB9thnJ.s 			page 47


2296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
2299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xAlreadyYielded;
2301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCount( void )
2305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTicks;
2307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Critical section required if running on a 16 bit processor. */
2309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_ENTER_CRITICAL();
2310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTicks = xTickCount;
2312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_EXIT_CRITICAL();
2314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xTicks;
2316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
2320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xReturn;
2322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
2323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
2325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
2326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	above the maximum system call priority are kept permanently enabled, even
2327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
2328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
2329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
2330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
2331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	assigned a priority above the configured maximum system call priority.
2332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
2333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	that have been assigned a priority at or (logically) below the maximum
2334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
2335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
2336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	More information (albeit Cortex-M specific) is provided on the following
2337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	link: https://www.freertos.org/RTOS-Cortex-M3-M4.html */
2338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
2339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
2341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = xTickCount;
2343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
2347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
2351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required because the variables are of type
ARM GAS  /tmp/ccB9thnJ.s 			page 48


2353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t. */
2354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return uxCurrentNumberOfTasks;
2355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** char *pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed fo
2359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
2361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If null is passed in here then the name of the calling task is being
2363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	queried. */
2364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTCB = prvGetTCBFromHandle( xTaskToQuery );
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
2366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
2367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] )
2373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNextTCB, *pxFirstTCB, *pxReturn = NULL;
2375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t x;
2376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char cNextChar;
2377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xBreakLoop;
2378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function is called with the scheduler suspended. */
2380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
2382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );  /*lint !e9079 void * is used as this macro i
2384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
2386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList ); /*lint !e9079 void * is used as this macro is
2388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Check each character in the name looking for a match or
2390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mismatch. */
2391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xBreakLoop = pdFALSE;
2392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
2393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					cNextChar = pxNextTCB->pcTaskName[ x ];
2395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( cNextChar != pcNameToQuery[ x ] )
2397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Characters didn't match. */
2399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xBreakLoop = pdTRUE;
2400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else if( cNextChar == ( char ) 0x00 )
2402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Both strings terminated, a match must have been
2404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						found. */
2405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxReturn = pxNextTCB;
2406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xBreakLoop = pdTRUE;
2407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
ARM GAS  /tmp/ccB9thnJ.s 			page 49


2410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xBreakLoop != pdFALSE )
2414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
2416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxReturn != NULL )
2420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The handle has been found. */
2422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
2426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxReturn;
2433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetHandle( const char *pcNameToQuery ) /*lint !e971 Unqualified char types are a
2441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxQueue = configMAX_PRIORITIES;
2443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t* pxTCB;
2444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Task names will be truncated to configMAX_TASK_NAME_LEN - 1 bytes. */
2446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
2447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Search the ready lists. */
2451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
2452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxQueue--;
2454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueue ] ), pcNam
2455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB != NULL )
2457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Found the handle. */
2459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts
2463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Search the delayed lists. */
2465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == NULL )
2466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccB9thnJ.s 			page 50


2467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQuery );
2468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == NULL )
2471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, pcNameToQuery
2473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
2476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB == NULL )
2478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Search the suspended list. */
2480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuery );
2481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
2484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( INCLUDE_vTaskDelete == 1 )
2486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB == NULL )
2488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Search the deleted list. */
2490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xTasksWaitingTermination, pcNameToQuery );
2491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
2494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxTCB;
2498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArra
2506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
2508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is there a space in the array for each task in the system? */
2512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxArraySize >= uxCurrentNumberOfTasks )
2513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task in the Ready state. */
2516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				do
2517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxQueue--;
2519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists
2520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the cast
2522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
ARM GAS  /tmp/ccB9thnJ.s 			page 51


2524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task in the Blocked state. */
2525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelaye
2526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverfl
2527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( INCLUDE_vTaskDelete == 1 )
2529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					each task that has been deleted but not yet cleaned up. */
2532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xTasksWaitingTermin
2533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
2537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					each task in the Suspended state. */
2540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList,
2541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( configGENERATE_RUN_TIME_STATS == 1)
2545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
2550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
2551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							*pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
2553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
2556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pulTotalRunTime = 0;
2560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxTask;
2572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
2578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetIdleTaskHandle( void )
2580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
ARM GAS  /tmp/ccB9thnJ.s 			page 52


2581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTaskGetIdleTaskHandle() is called before the scheduler has been
2582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		started, then xIdleTaskHandle will be NULL. */
2583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xIdleTaskHandle != NULL ) );
2584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xIdleTaskHandle;
2585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
2588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
2591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** This is to ensure vTaskStepTick() is available when user defined low power mode
2592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** implementations require configUSE_TICKLESS_IDLE to be set to a value other than
2593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 1. */
2594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskStepTick( const TickType_t xTicksToJump )
2597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Correct the tick count value after a period during which the tick
2599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		was suppressed.  Note this does *not* call the tick hook function for
2600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		each stepped tick. */
2601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
2602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount += xTicksToJump;
2603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceINCREASE_TICK_COUNT( xTicksToJump );
2604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskCatchUpTicks( TickType_t xTicksToCatchUp )
2610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xYieldRequired = pdFALSE;
2612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Must not be called with the scheduler suspended as the implementation
2614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	relies on xPendedTicks being wound down to 0 in xTaskResumeAll(). */
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended == 0 );
2616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Use xPendedTicks to mimic xTicksToCatchUp number of ticks occurring when
2618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the scheduler is suspended so the ticks are executed in xTaskResumeAll(). */
2619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vTaskSuspendAll();
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xPendedTicks += xTicksToCatchUp;
2621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldRequired = xTaskResumeAll();
2622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xYieldRequired;
2624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
2628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskAbortDelay( TaskHandle_t xTask )
2630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB = xTask;
2632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
2633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
2635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccB9thnJ.s 			page 53


2638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task can only be prematurely removed from the Blocked state if
2639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			it is actually in the Blocked state. */
2640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( eTaskGetState( xTask ) == eBlocked )
2641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
2643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remove the reference to the task from the blocked list.  An
2645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				interrupt won't touch the xStateListItem because the
2646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				scheduler is suspended. */
2647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Is the task waiting on an event also?  If so remove it from
2650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the event list too.  Interrupts can touch the event list item,
2651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				even though the scheduler is suspended, so a critical section
2652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is used. */
2653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskENTER_CRITICAL();
2654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* This lets the task know it was forcibly removed from the
2660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						blocked state so it should not re-evaluate its block time and
2661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						then block again. */
2662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ucDelayAborted = pdTRUE;
2663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskEXIT_CRITICAL();
2670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Place the unblocked task into the appropriate ready list. */
2672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
2673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task being unblocked cannot cause an immediate context
2675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				switch if preemption is turned off. */
2676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if (  configUSE_PREEMPTION == 1 )
2677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Preemption is on, but a context switch should only be
2679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					performed if the unblocked task has a priority that is
2680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					equal to or higher than the currently executing task. */
2681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Pend the yield to be performed when the scheduler
2684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						is unsuspended. */
2685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
2686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* configUSE_PREEMPTION */
2693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
ARM GAS  /tmp/ccB9thnJ.s 			page 54


2695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFAIL;
2697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskAbortDelay */
2705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskIncrementTick( void )
2708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t * pxTCB;
2710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xItemValue;
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
2712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Called by the portable layer each time a tick interrupt occurs.
2714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	Increments the tick then checks to see if the new tick value will cause any
2715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tasks to be unblocked. */
2716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	traceTASK_INCREMENT_TICK( xTickCount );
2717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this
2720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		block. */
2721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
2722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Increment the RTOS tick, switching the delayed and overflowed
2724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		delayed lists if it wraps to 0. */
2725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = xConstTickCount;
2726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as
2728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskSWITCH_DELAYED_LISTS();
2730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* See if this tick has made a timeout expire.  Tasks are stored in
2737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the	queue in the order of their wake time - meaning once one task
2738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		has been found whose block time has not expired there is no need to
2739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		look any further down the list. */
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xConstTickCount >= xNextTaskUnblockTime )
2741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for( ;; )
2743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
2745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed list is empty.  Set xNextTaskUnblockTime
2747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					to the maximum possible value so it is extremely
2748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					unlikely that the
2749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xTickCount >= xNextTaskUnblockTime ) test will pass
2750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					next time through. */
2751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redun
ARM GAS  /tmp/ccB9thnJ.s 			page 55


2752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed list is not empty, get the value of the
2757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					item at the head of the delayed list.  This is the time
2758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					at which the task at the head of the delayed list must
2759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be removed from the Blocked state. */
2760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this
2761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
2762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xConstTickCount < xItemValue )
2764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is not time to unblock this item yet, but the
2766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						item value is the time at which the task at the head
2767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						of the blocked list must be removed from the Blocked
2768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						state -	so record the item value in
2769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime. */
2770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime = xItemValue;
2771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks
2772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* It is time to remove the item from the Blocked state. */
2779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Is the task waiting on an event also?  If so remove
2782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it from the event list. */
2783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Place the unblocked task into the appropriate ready
2793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					list. */
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task being unblocked cannot cause an immediate
2797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					context switch if preemption is turned off. */
2798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#if (  configUSE_PREEMPTION == 1 )
2799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Preemption is on, but a context switch should
2801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						only be performed if the unblocked task has a
2802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						priority that is equal to or higher than the
2803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						currently executing task. */
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xSwitchRequired = pdTRUE;
2807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
2808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
ARM GAS  /tmp/ccB9thnJ.s 			page 56


2809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
2811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
2812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#endif /* configUSE_PREEMPTION */
2814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Tasks of equal priority to the currently running task will share
2819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		processing time (time slice) if preemption is on, and the application
2820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		writer has not explicitly turned time slicing off. */
2821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
2822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_
2824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xSwitchRequired = pdTRUE;
2826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Guard against the tick hook being called when the pended tick
2837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			count is being unwound (when the scheduler is being unlocked). */
2838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xPendedTicks == ( TickType_t ) 0 )
2839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vApplicationTickHook();
2841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICK_HOOK */
2848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 1 )
2850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xYieldPending != pdFALSE )
2852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xSwitchRequired = pdTRUE;
2854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
2861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		++xPendedTicks;
2865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccB9thnJ.s 			page 57


2866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The tick hook gets called at regular intervals, even if the
2867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		scheduler is locked. */
2868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vApplicationTickHook();
2871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xSwitchRequired;
2876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetApplicationTaskTag( TaskHandle_t xTask, TaskHookFunction_t pxHookFunction )
2882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then it is the task hook of the calling task that is
2886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		getting set. */
2887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = xTask;
2894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB->pxTaskTag = pxHookFunction;
2901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
2913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xReturn;
2914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then set the calling task's hook. */
2916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
2917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pxTCB->pxTaskTag;
ARM GAS  /tmp/ccB9thnJ.s 			page 58


2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTagFromISR( TaskHandle_t xTask )
2935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
2937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xReturn;
2938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
2939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then set the calling task's hook. */
2941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
2942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
2946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pxTCB->pxTaskTag;
2948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter )
2960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
2963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then we are calling our own task hook. */
2965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = pxCurrentTCB;
2968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = xTask;
2972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTCB->pxTaskTag != NULL )
2975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTCB->pxTaskTag( pvParameter );
2977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccB9thnJ.s 			page 59


2980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
2981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSwitchContext( void )
2990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
2992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The scheduler is currently suspended - do not allow a context
2994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		switch. */
2995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
2996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdFALSE;
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
3001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
3005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
3006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
3007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
3008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
3009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add the amount of time the task has been running to the
3011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			accumulated time so far.  The time the task started running was
3012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			stored in ulTaskSwitchedInTime.  Note that there is no overflow
3013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			protection here so count values are only valid until the timer
3014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			overflows.  The guard against negative values is to protect
3015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			against suspect run time stat counter implementations - which
3016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			are provided by the application, not the kernel. */
3017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulTotalRunTime > ulTaskSwitchedInTime )
3018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
3020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulTaskSwitchedInTime = ulTotalRunTime;
3026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configGENERATE_RUN_TIME_STATS */
3028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check for stack overflow, if configured. */
3030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskCHECK_FOR_STACK_OVERFLOW();
3031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Before the currently running task is switched out, save its errno. */
3033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_POSIX_ERRNO == 1 )
3034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->iTaskErrno = FreeRTOS_errno;
3036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/ccB9thnJ.s 			page 60


3037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Select a new task to run using either the generic C or port
3040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		optimised asm code. */
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timer
3042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
3043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* After the new task is switched in, update the global errno. */
3045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_POSIX_ERRNO == 1 )
3046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			FreeRTOS_errno = pxCurrentTCB->iTaskErrno;
3048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
3054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure specific to this task.
3055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
3056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for additional information. */
3057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
3058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait )
3065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
3069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
3070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB in the appropriate event list.
3072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	This is placed in the list in priority order so the highest priority task
3073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is the first to be woken by the event.  The queue that contains the event
3074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list is locked, preventing simultaneous access from interrupts. */
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
3078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickT
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
3084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the event groups implementation. */
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != 0 );
3088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the item value in the event list item.  It is safe to access the
3090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event list item here as interrupts won't access the event list item of a
3091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	task that is not in the Blocked state. */
3092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VALUE
3093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccB9thnJ.s 			page 61


3094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB at the end of the appropriate event
3095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list.  It is safe to access the event list here because it is part of an
3096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event group implementation - and interrupts don't access event groups
3097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	directly (instead they access them indirectly by pending function calls to
3098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the task level). */
3099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
3102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TIMERS == 1 )
3106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const B
3108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxEventList );
3110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function should not be called by application code hence the
3112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
3113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		designed for use by kernel code, and has special calling requirements -
3114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		it should be called with the scheduler suspended. */
3115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Place the event list item of the TCB in the appropriate event list.
3118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		In this case it is assume that this is the only task that is going to
3119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		be waiting on this event list, so the faster vListInsertEnd() function
3120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		can be used in place of vListInsert. */
3121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the task should block indefinitely then set the block time to a
3124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value that will be recognised as an indefinite delay inside the
3125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList() function. */
3126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xWaitIndefinitely != pdFALSE )
3127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTicksToWait = portMAX_DELAY;
3129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
3132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
3133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TIMERS */
3136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
3139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
3141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
3142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
3144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	called from a critical section within an ISR. */
3145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The event list is sorted in priority order, so the first in the list can
3147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	be removed as it is known to be the highest priority.  Remove the TCB from
3148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the delayed list, and add it to the ready list.
3149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	If an event is for a queue that is locked then this function will never
ARM GAS  /tmp/ccB9thnJ.s 			page 62


3151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	get called - the lock count on the queue will get modified instead.  This
3152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	means exclusive access to the event list is guaranteed here.
3153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	This function assumes that a check has already been made to ensure that
3155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxEventList is not empty. */
3156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this 
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
3159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
3164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_TICKLESS_IDLE != 0 )
3166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If a task is blocked on a kernel object then xNextTaskUnblockTime
3168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			might be set to the blocked task's time out time.  If the task is
3169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			unblocked for a reason other than a timeout xNextTaskUnblockTime is
3170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			normally left unchanged, because it is automatically reset to a new
3171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			value when the tick count equals xNextTaskUnblockTime.  However if
3172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			tickless idling is used it might be more important to enter sleep mode
3173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			at the earliest possible time - so reset xNextTaskUnblockTime here to
3174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ensure it is updated at the earliest possible time. */
3175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvResetNextTaskUnblockTime();
3176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The delayed and ready lists cannot be accessed, so hold this task
3182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pending until the scheduler is resumed. */
3183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
3184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return true if the task removed from the event list has a higher
3189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority than the calling task.  This allows the calling task to know if
3190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		it should force a context switch now. */
3191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdTRUE;
3192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
3194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
3195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
3196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdFALSE;
3200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
3203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue )
3207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
ARM GAS  /tmp/ccB9thnJ.s 			page 63


3208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
3209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the event flags implementation. */
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != pdFALSE );
3213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the new item value in the event list. */
3215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
3216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the event list form the event flag.  Interrupts do not access
3218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event flags. */
3219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = listGET_LIST_ITEM_OWNER( pxEventListItem ); /*lint !e9079 void * is used as this 
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
3222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_TICKLESS_IDLE != 0 )
3224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If a task is blocked on a kernel object then xNextTaskUnblockTime
3226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		might be set to the blocked task's time out time.  If the task is
3227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		unblocked for a reason other than a timeout xNextTaskUnblockTime is
3228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		normally left unchanged, because it is automatically reset to a new
3229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value when the tick count equals xNextTaskUnblockTime.  However if
3230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		tickless idling is used it might be more important to enter sleep mode
3231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		at the earliest possible time - so reset xNextTaskUnblockTime here to
3232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		ensure it is updated at the earliest possible time. */
3233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvResetNextTaskUnblockTime();
3234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
3236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the delayed list and add it to the ready list.  The
3238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	scheduler is suspended so interrupts will not be accessing the ready
3239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	lists. */
3240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
3242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The unblocked task has a priority above that of the calling task, so
3246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		a context switch is required.  This function is called with the
3247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		scheduler suspended so xYieldPending is set so the context switch
3248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		occurs immediately that the scheduler is resumed (unsuspended). */
3249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
3250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
3255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
3257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
3258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xOverflowCount = xNumOfOverflows;
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
3261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
3263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/ccB9thnJ.s 			page 64


3265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )
3267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
3269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
3270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
3271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait )
3275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
3277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
3280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
3282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this block. */
3284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount;
3285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
3286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( INCLUDE_xTaskAbortDelay == 1 )
3288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucDelayAborted != ( uint8_t ) pdFALSE )
3289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The delay was aborted, which is not the same as a time out,
3291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				but has the same result. */
3292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucDelayAborted = pdFALSE;
3293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
3294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( *pxTicksToWait == portMAX_DELAY )
3300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If INCLUDE_vTaskSuspend is set to 1 and the block time
3302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				specified is the maximum block time then the task should block
3303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				indefinitely, and therefore never time out. */
3304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
3305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEn
3310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The tick count is greater than the time at which
3312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeout() was called, but has also overflowed since
3313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeOut() was called.  It must have wrapped all the way
3314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			around and gone past again. This passed since vTaskSetTimeout()
3315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			was called. */
3316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
3317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with som
3319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Not a genuine timeout. Adjust parameters for time remaining. */
3321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxTicksToWait -= xElapsedTime;
ARM GAS  /tmp/ccB9thnJ.s 			page 65


3322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
3323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
3324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxTicksToWait = 0;
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
3329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
3332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
3334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskMissedYield( void )
3338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldPending = pdTRUE;
3340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
3346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
3349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
3351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = xTask;
3353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxTaskNumber;
3354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = 0U;
3358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle )
3369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
3371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
3373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = xTask;
3375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->uxTaskNumber = uxHandle;
3376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccB9thnJ.s 			page 66


3379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
3382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * -----------------------------------------------------------
3383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The Idle task.
3384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * ----------------------------------------------------------
3385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
3387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
3388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
3390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
3392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
3393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
3395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) pvParameters;
3396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/** THIS IS THE RTOS IDLE TASK - WHICH IS CREATED AUTOMATICALLY WHEN THE
3398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	SCHEDULER IS STARTED. **/
3399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* In case a task that has a secure context deletes itself, in which case
3401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the idle task is responsible for deleting the task's secure context, if
3402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	any. */
3403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portALLOCATE_SECURE_CONTEXT( configMINIMAL_SECURE_STACK_SIZE );
3404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( ;; )
3406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* See if any tasks have deleted themselves - if so then the idle task
3408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is responsible for freeing the deleted task's TCB and stack. */
3409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvCheckTasksWaitingTermination();
3410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 0 )
3412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If we are not using preemption we keep forcing a task switch to
3414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			see if any other task has become available.  If we are using
3415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			preemption we don't need to do this as any task becoming available
3416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			will automatically get the processor anyway. */
3417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskYIELD();
3418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
3420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
3422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* When using preemption tasks of equal priority will be
3424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			timesliced.  If a task that is sharing the idle priority is ready
3425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			to run then the idle task should yield before the end of the
3426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			timeslice.
3427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			A critical region is not required here as we are just reading from
3429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the list, and an occasional incorrect value will not matter.  If
3430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the ready list at the idle priority contains more than one task
3431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then a task other than the idle task is ready to execute. */
3432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
3433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskYIELD();
3435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/ccB9thnJ.s 			page 67


3436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
3442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_IDLE_HOOK == 1 )
3444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			extern void vApplicationIdleHook( void );
3446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Call the user defined function from within the idle task.  This
3448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			allows the application designer to add background functionality
3449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			without the overhead of a separate task.
3450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
3451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			CALL A FUNCTION THAT MIGHT BLOCK. */
3452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vApplicationIdleHook();
3453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_IDLE_HOOK */
3455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This conditional compilation should use inequality to 0, not equality
3457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
3458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		user defined low power mode	implementations require
3459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configUSE_TICKLESS_IDLE to be set to a value other than 1. */
3460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICKLESS_IDLE != 0 )
3461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TickType_t xExpectedIdleTime;
3463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* It is not desirable to suspend then resume the scheduler on
3465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			each iteration of the idle task.  Therefore, a preliminary
3466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			test of the expected idle time is performed without the
3467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			scheduler suspended.  The result here is not necessarily
3468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			valid. */
3469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xExpectedIdleTime = prvGetExpectedIdleTime();
3470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vTaskSuspendAll();
3474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Now the scheduler is suspended, the expected idle
3476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					time can be sampled again, and this time its value can
3477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be used. */
3478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( xNextTaskUnblockTime >= xTickCount );
3479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
3480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Define the following macro to set xExpectedIdleTime to 0
3482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if the application does not want
3483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portSUPPRESS_TICKS_AND_SLEEP() to be called. */
3484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configPRE_SUPPRESS_TICKS_AND_SLEEP_PROCESSING( xExpectedIdleTime );
3485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_BEGIN();
3489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
3490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_END();
3491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
ARM GAS  /tmp/ccB9thnJ.s 			page 68


3493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) xTaskResumeAll();
3498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICKLESS_IDLE */
3505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TICKLESS_IDLE != 0 )
3510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eTaskConfirmSleepModeStatus( void )
3512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The idle task exists in addition to the application tasks. */
3514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxNonApplicationTasks = 1;
3515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eReturn = eStandardSleep;
3516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function must be called from a critical section. */
3518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
3520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task was made ready while the scheduler was suspended. */
3522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
3523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( xYieldPending != pdFALSE )
3525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A yield was pended while the scheduler was suspended. */
3527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
3528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If all the tasks are in the suspended list (which might mean they
3532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			have an infinite block time rather than actually being suspended)
3533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then it is safe to turn all clocks off and just wait for external
3534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupts. */
3535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicatio
3536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eNoTasksWaitingTimeout;
3538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return eReturn;
3546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
3549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/ccB9thnJ.s 			page 69


3550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue 
3554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSet );
3560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB != NULL );
3561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
3562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery, BaseType_t xIndex )
3571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvReturn = NULL;
3573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToQuery );
3578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
3579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pvReturn = NULL;
3583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pvReturn;
3586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
3592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify, const MemoryRegion_t * const xRegions )
3594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then we are modifying the MPU settings of
3598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the calling task. */
3599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTaskToModify );
3600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
3602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
3605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccB9thnJ.s 			page 70


3607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void )
3608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxPriority;
3610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriorit
3612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
3614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList1 );
3617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
3618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
3619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xTasksWaitingTermination );
3623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
3627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xSuspendedTaskList );
3629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
3631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
3633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	using list2. */
3634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = &xDelayedTaskList1;
3635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
3636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void )
3640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
3643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TCB_t *pxTCB;
3647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
3649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		being called too often in the idle task. */
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
3651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
3653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is u
3655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
3656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
3657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
3658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
3660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvDeleteTCB( pxTCB );
3662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/ccB9thnJ.s 			page 71


3664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TRACE_FACILITY == 1 )
3669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, 
3671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* xTask is NULL then get the state of the calling task. */
3675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
3678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
3679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
3680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
3681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
3682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_MUTEXES == 1 )
3684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
3686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->uxBasePriority = 0;
3690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
3696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = 0;
3700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Obtaining the task state is a little fiddly, so is only done if the
3704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value of eState passed into this function is eInvalid - otherwise the
3705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		state is just set to whatever is passed in. */
3706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( eState != eInvalid )
3707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
3709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->eCurrentState = eRunning;
3711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->eCurrentState = eState;
3715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
3717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the task is in the suspended list then there is a
3719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					chance it is actually just blocked indefinitely - so really
3720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it should be reported as being in the Blocked state. */
ARM GAS  /tmp/ccB9thnJ.s 			page 72


3721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( eState == eSuspended )
3722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						vTaskSuspendAll();
3724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
3725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
3726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
3727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								pxTaskStatus->eCurrentState = eBlocked;
3728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
3729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
3730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) xTaskResumeAll();
3731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* INCLUDE_vTaskSuspend */
3734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->eCurrentState = eTaskGetState( pxTCB );
3739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Obtaining the stack space takes some time, so the xGetFreeStackSpace
3742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		parameter is provided to allow it to be skipped. */
3743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xGetFreeStackSpace != pdFALSE )
3744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( portSTACK_GROWTH > 0 )
3746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxEndOfSt
3748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
3750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxStack )
3752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
3754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->usStackHighWaterMark = 0;
3758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
3767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configLIST_VOLATILE TCB_t *pxNextTCB, *pxFirstTCB;
3769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0;
3770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
3772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList ); /*lint !e9079 void * is used as this macro is
3774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Populate an TaskStatus_t structure within the
3776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatusArray array for each task that is referenced from
3777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxList.  See the definition of TaskStatus_t in task.h for the
ARM GAS  /tmp/ccB9thnJ.s 			page 73


3778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			meaning of each TaskStatus_t structure member. */
3779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
3780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList ); /*lint !e9079 void * is used as this macro is
3782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
3783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask++;
3784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
3785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxTask;
3792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( INCLUD
3798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static configSTACK_DEPTH_TYPE prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
3800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulCount = 0U;
3802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
3804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucStackByte -= portSTACK_GROWTH;
3806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulCount++;
3807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on smaller a
3810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ( configSTACK_DEPTH_TYPE ) ulCount;
3812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( 
3815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark2 == 1 )
3818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* uxTaskGetStackHighWaterMark() and uxTaskGetStackHighWaterMark2() are the
3820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	same except for their return type.  Using configSTACK_DEPTH_TYPE allows the
3821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	user to determine the return type.  It gets around the problem of the value
3822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	overflowing on 8-bit types without breaking backward compatibility for
3823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	applications that expect an 8-bit return type. */
3824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configSTACK_DEPTH_TYPE uxTaskGetStackHighWaterMark2( TaskHandle_t xTask )
3825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t *pucEndOfStack;
3828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configSTACK_DEPTH_TYPE uxReturn;
3829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxTaskGetStackHighWaterMark() and uxTaskGetStackHighWaterMark2() are
3831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the same except for their return type.  Using configSTACK_DEPTH_TYPE
3832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		allows the user to determine the return type.  It gets around the
3833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		problem of the value overflowing on 8-bit types without breaking
3834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		backward compatibility for applications that expect an 8-bit return
ARM GAS  /tmp/ccB9thnJ.s 			page 74


3835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		type. */
3836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxReturn = prvTaskCheckFreeStackSpace( pucEndOfStack );
3850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark2 */
3855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
3860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t *pucEndOfStack;
3863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
3878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
3883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
3886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB )
3888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
3890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		above the vPortFree() calls.  The call is also used by ports/demos that
3891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		want to allocate and clean RAM statically. */
ARM GAS  /tmp/ccB9thnJ.s 			page 75


3892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAN_UP_TCB( pxTCB );
3893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Free up the memory allocated by the scheduler for the task.  It is up
3895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		to the task to free any memory allocated at the application level.
3896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
3897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for additional information. */
3898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
3901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) && ( p
3905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task can only have been allocated dynamically - free both
3907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the stack and TCB. */
3908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB->pxStack );
3909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB );
3910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consol
3912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task could have been allocated statically or dynamically, so
3914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			check what was statically allocated before trying to free the
3915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			memory. */
3916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
3917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Both the stack and TCB were allocated dynamically, so both
3919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				must be freed. */
3920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB->pxStack );
3921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
3922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
3924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only the stack was statically allocated, so the TCB is the
3926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				only memory that must be freed. */
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
3928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Neither the stack nor the TCB were allocated dynamically, so
3932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				nothing needs to be freed. */
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
3934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
3938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
3941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void )
3944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 127              		.loc 1 3944 1 is_stmt 1 view -0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccB9thnJ.s 			page 76


 131              		@ link register save eliminated.
3945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
 132              		.loc 1 3945 1 view .LVU31
3946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 133              		.loc 1 3947 2 view .LVU32
 134              		.loc 1 3947 6 is_stmt 0 view .LVU33
 135 0000 084B     		ldr	r3, .L15
 136 0002 1B68     		ldr	r3, [r3]
 137 0004 1B68     		ldr	r3, [r3]
 138              		.loc 1 3947 4 view .LVU34
 139 0006 23B9     		cbnz	r3, .L13
3948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
3950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the maximum possible value so it is	extremely unlikely that the
3951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
3952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		there is an item in the delayed list. */
3953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
 140              		.loc 1 3953 3 is_stmt 1 view .LVU35
 141              		.loc 1 3953 24 is_stmt 0 view .LVU36
 142 0008 074B     		ldr	r3, .L15+4
 143 000a 4FF0FF32 		mov	r2, #-1
 144 000e 1A60     		str	r2, [r3]
 145 0010 7047     		bx	lr
 146              	.L13:
3954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is not empty, get the value of
3958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the item at the head of the delayed list.  This is the time at
3959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		which the task at the head of the delayed list should be removed
3960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from the Blocked state. */
3961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as thi
 147              		.loc 1 3961 3 is_stmt 1 view .LVU37
 148              		.loc 1 3961 15 is_stmt 0 view .LVU38
 149 0012 044B     		ldr	r3, .L15
 150 0014 1B68     		ldr	r3, [r3]
 151 0016 DB68     		ldr	r3, [r3, #12]
 152              		.loc 1 3961 13 view .LVU39
 153 0018 DB68     		ldr	r3, [r3, #12]
 154              	.LVL9:
3962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 155              		.loc 1 3962 3 is_stmt 1 view .LVU40
 156              		.loc 1 3962 26 is_stmt 0 view .LVU41
 157 001a 5A68     		ldr	r2, [r3, #4]
 158              		.loc 1 3962 24 view .LVU42
 159 001c 024B     		ldr	r3, .L15+4
 160              	.LVL10:
 161              		.loc 1 3962 24 view .LVU43
 162 001e 1A60     		str	r2, [r3]
3963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 163              		.loc 1 3964 1 view .LVU44
 164 0020 7047     		bx	lr
 165              	.L16:
 166 0022 00BF     		.align	2
 167              	.L15:
ARM GAS  /tmp/ccB9thnJ.s 			page 77


 168 0024 00000000 		.word	pxDelayedTaskList
 169 0028 00000000 		.word	xNextTaskUnblockTime
 170              		.cfi_endproc
 171              	.LFE41:
 173              		.section	.text.prvInitialiseNewTask,"ax",%progbits
 174              		.align	1
 175              		.syntax unified
 176              		.thumb
 177              		.thumb_func
 179              	prvInitialiseNewTask:
 180              	.LVL11:
 181              	.LFB7:
 832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 182              		.loc 1 832 1 is_stmt 1 view -0
 183              		.cfi_startproc
 184              		@ args = 16, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 186              		.loc 1 832 1 is_stmt 0 view .LVU46
 187 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 188              	.LCFI0:
 189              		.cfi_def_cfa_offset 32
 190              		.cfi_offset 4, -32
 191              		.cfi_offset 5, -28
 192              		.cfi_offset 6, -24
 193              		.cfi_offset 7, -20
 194              		.cfi_offset 8, -16
 195              		.cfi_offset 9, -12
 196              		.cfi_offset 10, -8
 197              		.cfi_offset 14, -4
 198 0004 0746     		mov	r7, r0
 199 0006 9846     		mov	r8, r3
 200 0008 089D     		ldr	r5, [sp, #32]
 201 000a DDF82490 		ldr	r9, [sp, #36]
 202 000e 0A9C     		ldr	r4, [sp, #40]
 833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t x;
 203              		.loc 1 833 1 is_stmt 1 view .LVU47
 834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 204              		.loc 1 834 1 view .LVU48
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 205              		.loc 1 864 3 view .LVU49
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 206              		.loc 1 864 29 is_stmt 0 view .LVU50
 207 0010 266B     		ldr	r6, [r4, #48]
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 208              		.loc 1 864 38 view .LVU51
 209 0012 02F18042 		add	r2, r2, #1073741824
 210              	.LVL12:
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 211              		.loc 1 864 38 view .LVU52
 212 0016 013A     		subs	r2, r2, #1
 213              	.LVL13:
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 214              		.loc 1 864 16 view .LVU53
 215 0018 06EB8206 		add	r6, r6, r2, lsl #2
 216              	.LVL14:
 865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccB9thnJ.s 			page 78


 217              		.loc 1 865 3 is_stmt 1 view .LVU54
 865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 218              		.loc 1 865 81 is_stmt 0 view .LVU55
 219 001c 26F00706 		bic	r6, r6, #7
 220              	.LVL15:
 868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 221              		.loc 1 868 3 is_stmt 1 view .LVU56
 868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 222              		.loc 1 868 124 view .LVU57
 892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 223              		.loc 1 892 2 view .LVU58
 892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 224              		.loc 1 892 4 is_stmt 0 view .LVU59
 225 0020 0029     		cmp	r1, #0
 226 0022 64D0     		beq	.L29
 227 0024 0846     		mov	r0, r1
 228              	.LVL16:
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 229              		.loc 1 894 10 view .LVU60
 230 0026 4FF0000C 		mov	ip, #0
 231              	.LVL17:
 232              	.L18:
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 233              		.loc 1 894 33 is_stmt 1 discriminator 1 view .LVU61
 234 002a BCF10F0F 		cmp	ip, #15
 235 002e 09D8     		bhi	.L20
 896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 236              		.loc 1 896 4 view .LVU62
 896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 237              		.loc 1 896 38 is_stmt 0 view .LVU63
 238 0030 10F80C20 		ldrb	r2, [r0, ip]	@ zero_extendqisi2
 896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 239              		.loc 1 896 30 view .LVU64
 240 0034 04EB0C03 		add	r3, r4, ip
 241 0038 83F83420 		strb	r2, [r3, #52]
 901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 242              		.loc 1 901 4 is_stmt 1 view .LVU65
 901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 243              		.loc 1 901 6 is_stmt 0 view .LVU66
 244 003c 12B1     		cbz	r2, .L20
 907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 245              		.loc 1 907 29 is_stmt 1 discriminator 2 view .LVU67
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 246              		.loc 1 894 77 discriminator 2 view .LVU68
 247 003e 0CF1010C 		add	ip, ip, #1
 248              	.LVL18:
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 249              		.loc 1 894 77 is_stmt 0 discriminator 2 view .LVU69
 250 0042 F2E7     		b	.L18
 251              	.LVL19:
 252              	.L20:
 913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 253              		.loc 1 913 3 is_stmt 1 view .LVU70
 913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 254              		.loc 1 913 55 is_stmt 0 view .LVU71
 255 0044 0023     		movs	r3, #0
 256 0046 84F84330 		strb	r3, [r4, #67]
ARM GAS  /tmp/ccB9thnJ.s 			page 79


 257              	.LVL20:
 258              	.L22:
 924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 259              		.loc 1 924 2 is_stmt 1 view .LVU72
 924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 260              		.loc 1 924 4 is_stmt 0 view .LVU73
 261 004a 062D     		cmp	r5, #6
 262 004c 00D9     		bls	.L23
 926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 263              		.loc 1 926 14 view .LVU74
 264 004e 0625     		movs	r5, #6
 265              	.L23:
 266              	.LVL21:
 930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 267              		.loc 1 930 27 is_stmt 1 view .LVU75
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 268              		.loc 1 933 2 view .LVU76
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 269              		.loc 1 933 23 is_stmt 0 view .LVU77
 270 0050 E562     		str	r5, [r4, #44]
 936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 271              		.loc 1 936 3 is_stmt 1 view .LVU78
 936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 272              		.loc 1 936 28 is_stmt 0 view .LVU79
 273 0052 6564     		str	r5, [r4, #68]
 937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 274              		.loc 1 937 3 is_stmt 1 view .LVU80
 937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 275              		.loc 1 937 27 is_stmt 0 view .LVU81
 276 0054 4FF0000A 		mov	r10, #0
 277 0058 C4F848A0 		str	r10, [r4, #72]
 941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 278              		.loc 1 941 2 is_stmt 1 view .LVU82
 279 005c 201D     		adds	r0, r4, #4
 280 005e FFF7FEFF 		bl	vListInitialiseItem
 281              	.LVL22:
 942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 282              		.loc 1 942 2 view .LVU83
 283 0062 04F11800 		add	r0, r4, #24
 284 0066 FFF7FEFF 		bl	vListInitialiseItem
 285              	.LVL23:
 946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 286              		.loc 1 946 2 view .LVU84
 287 006a 2461     		str	r4, [r4, #16]
 949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 288              		.loc 1 949 2 view .LVU85
 289 006c C5F10705 		rsb	r5, r5, #7
 290              	.LVL24:
 949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 291              		.loc 1 949 2 is_stmt 0 view .LVU86
 292 0070 A561     		str	r5, [r4, #24]
 950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 293              		.loc 1 950 2 is_stmt 1 view .LVU87
 294 0072 6462     		str	r4, [r4, #36]
 977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 295              		.loc 1 977 3 view .LVU88
 992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
ARM GAS  /tmp/ccB9thnJ.s 			page 80


 296              		.loc 1 992 3 view .LVU89
 992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 297              		.loc 1 992 29 is_stmt 0 view .LVU90
 298 0074 C4F870A1 		str	r10, [r4, #368]
 993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 299              		.loc 1 993 3 is_stmt 1 view .LVU91
 993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 300              		.loc 1 993 27 is_stmt 0 view .LVU92
 301 0078 84F874A1 		strb	r10, [r4, #372]
1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 302              		.loc 1 1002 3 is_stmt 1 view .LVU93
 303 007c 4FF49072 		mov	r2, #288
 304 0080 5146     		mov	r1, r10
 305 0082 04F15000 		add	r0, r4, #80
 306 0086 FFF7FEFF 		bl	memset
 307              	.LVL25:
1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 308              		.loc 1 1002 3 view .LVU94
 309 008a 1B4B     		ldr	r3, .L30
 310 008c 6365     		str	r3, [r4, #84]
1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 311              		.loc 1 1002 3 view .LVU95
 312 008e 03F16802 		add	r2, r3, #104
 313 0092 A265     		str	r2, [r4, #88]
1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 314              		.loc 1 1002 3 view .LVU96
 315 0094 D033     		adds	r3, r3, #208
 316 0096 E365     		str	r3, [r4, #92]
1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 317              		.loc 1 1002 3 view .LVU97
 318 0098 0122     		movs	r2, #1
 319 009a 0023     		movs	r3, #0
 320 009c C4E93A23 		strd	r2, [r4, #232]
1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 321              		.loc 1 1002 3 view .LVU98
 322 00a0 43F20E33 		movw	r3, #13070
 323 00a4 A4F8F030 		strh	r3, [r4, #240]	@ movhi
1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 324              		.loc 1 1002 3 view .LVU99
 325 00a8 4AF6CD33 		movw	r3, #43981
 326 00ac A4F8F230 		strh	r3, [r4, #242]	@ movhi
1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 327              		.loc 1 1002 3 view .LVU100
 328 00b0 41F23423 		movw	r3, #4660
 329 00b4 A4F8F430 		strh	r3, [r4, #244]	@ movhi
1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 330              		.loc 1 1002 3 view .LVU101
 331 00b8 4EF26D63 		movw	r3, #58989
 332 00bc A4F8F630 		strh	r3, [r4, #246]	@ movhi
1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 333              		.loc 1 1002 3 view .LVU102
 334 00c0 4DF6EC63 		movw	r3, #57068
 335 00c4 A4F8F830 		strh	r3, [r4, #248]	@ movhi
1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 336              		.loc 1 1002 3 view .LVU103
 337 00c8 0523     		movs	r3, #5
 338 00ca A4F8FA30 		strh	r3, [r4, #250]	@ movhi
ARM GAS  /tmp/ccB9thnJ.s 			page 81


1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 339              		.loc 1 1002 3 view .LVU104
 340 00ce 0B23     		movs	r3, #11
 341 00d0 A4F8FC30 		strh	r3, [r4, #252]	@ movhi
1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 342              		.loc 1 1002 3 view .LVU105
1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 343              		.loc 1 1002 54 view .LVU106
1058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 344              		.loc 1 1058 4 view .LVU107
1058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 345              		.loc 1 1058 29 is_stmt 0 view .LVU108
 346 00d4 4246     		mov	r2, r8
 347 00d6 3946     		mov	r1, r7
 348 00d8 3046     		mov	r0, r6
 349 00da FFF7FEFF 		bl	pxPortInitialiseStack
 350              	.LVL26:
1058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 351              		.loc 1 1058 27 view .LVU109
 352 00de 2060     		str	r0, [r4]
1064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 353              		.loc 1 1064 2 is_stmt 1 view .LVU110
1064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 354              		.loc 1 1064 4 is_stmt 0 view .LVU111
 355 00e0 B9F1000F 		cmp	r9, #0
 356 00e4 01D0     		beq	.L17
1068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 357              		.loc 1 1068 3 is_stmt 1 view .LVU112
1068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 358              		.loc 1 1068 18 is_stmt 0 view .LVU113
 359 00e6 C9F80040 		str	r4, [r9]
1072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 360              		.loc 1 1072 27 is_stmt 1 view .LVU114
 361              	.L17:
1074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 362              		.loc 1 1074 1 is_stmt 0 view .LVU115
 363 00ea BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 364              	.LVL27:
 365              	.L29:
 919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 366              		.loc 1 919 3 is_stmt 1 view .LVU116
 919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 367              		.loc 1 919 29 is_stmt 0 view .LVU117
 368 00ee 0023     		movs	r3, #0
 369              	.LVL28:
 919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 370              		.loc 1 919 29 view .LVU118
 371 00f0 84F83430 		strb	r3, [r4, #52]
 372 00f4 A9E7     		b	.L22
 373              	.L31:
 374 00f6 00BF     		.align	2
 375              	.L30:
 376 00f8 00000000 		.word	__sf
 377              		.cfi_endproc
 378              	.LFE7:
 380              		.section	.text.prvInitialiseTaskLists,"ax",%progbits
 381              		.align	1
ARM GAS  /tmp/ccB9thnJ.s 			page 82


 382              		.syntax unified
 383              		.thumb
 384              		.thumb_func
 386              	prvInitialiseTaskLists:
 387              	.LFB38:
3608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxPriority;
 388              		.loc 1 3608 1 is_stmt 1 view -0
 389              		.cfi_startproc
 390              		@ args = 0, pretend = 0, frame = 0
 391              		@ frame_needed = 0, uses_anonymous_args = 0
 392 0000 38B5     		push	{r3, r4, r5, lr}
 393              	.LCFI1:
 394              		.cfi_def_cfa_offset 16
 395              		.cfi_offset 3, -16
 396              		.cfi_offset 4, -12
 397              		.cfi_offset 5, -8
 398              		.cfi_offset 14, -4
3609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 399              		.loc 1 3609 1 view .LVU120
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 400              		.loc 1 3611 2 view .LVU121
 401              	.LVL29:
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 402              		.loc 1 3611 18 is_stmt 0 view .LVU122
 403 0002 0024     		movs	r4, #0
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 404              		.loc 1 3611 2 view .LVU123
 405 0004 07E0     		b	.L33
 406              	.LVL30:
 407              	.L34:
3613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 408              		.loc 1 3613 3 is_stmt 1 discriminator 3 view .LVU124
 409 0006 04EB8402 		add	r2, r4, r4, lsl #2
 410 000a 9300     		lsls	r3, r2, #2
 411 000c 0E48     		ldr	r0, .L36
 412 000e 1844     		add	r0, r0, r3
 413 0010 FFF7FEFF 		bl	vListInitialise
 414              	.LVL31:
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 415              		.loc 1 3611 101 discriminator 3 view .LVU125
 416 0014 0134     		adds	r4, r4, #1
 417              	.LVL32:
 418              	.L33:
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 419              		.loc 1 3611 51 discriminator 1 view .LVU126
 420 0016 062C     		cmp	r4, #6
 421 0018 F5D9     		bls	.L34
3616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
 422              		.loc 1 3616 2 view .LVU127
 423 001a 0C4D     		ldr	r5, .L36+4
 424 001c 2846     		mov	r0, r5
 425 001e FFF7FEFF 		bl	vListInitialise
 426              	.LVL33:
3617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 427              		.loc 1 3617 2 view .LVU128
 428 0022 0B4C     		ldr	r4, .L36+8
 429              	.LVL34:
ARM GAS  /tmp/ccB9thnJ.s 			page 83


3617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 430              		.loc 1 3617 2 is_stmt 0 view .LVU129
 431 0024 2046     		mov	r0, r4
 432 0026 FFF7FEFF 		bl	vListInitialise
 433              	.LVL35:
3618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 434              		.loc 1 3618 2 is_stmt 1 view .LVU130
 435 002a 0A48     		ldr	r0, .L36+12
 436 002c FFF7FEFF 		bl	vListInitialise
 437              	.LVL36:
3622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 438              		.loc 1 3622 3 view .LVU131
 439 0030 0948     		ldr	r0, .L36+16
 440 0032 FFF7FEFF 		bl	vListInitialise
 441              	.LVL37:
3628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 442              		.loc 1 3628 3 view .LVU132
 443 0036 0948     		ldr	r0, .L36+20
 444 0038 FFF7FEFF 		bl	vListInitialise
 445              	.LVL38:
3634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 446              		.loc 1 3634 2 view .LVU133
3634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 447              		.loc 1 3634 20 is_stmt 0 view .LVU134
 448 003c 084B     		ldr	r3, .L36+24
 449 003e 1D60     		str	r5, [r3]
3635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 450              		.loc 1 3635 2 is_stmt 1 view .LVU135
3635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 451              		.loc 1 3635 28 is_stmt 0 view .LVU136
 452 0040 084B     		ldr	r3, .L36+28
 453 0042 1C60     		str	r4, [r3]
3636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 454              		.loc 1 3636 1 view .LVU137
 455 0044 38BD     		pop	{r3, r4, r5, pc}
 456              	.L37:
 457 0046 00BF     		.align	2
 458              	.L36:
 459 0048 00000000 		.word	pxReadyTasksLists
 460 004c 00000000 		.word	xDelayedTaskList1
 461 0050 00000000 		.word	xDelayedTaskList2
 462 0054 00000000 		.word	xPendingReadyList
 463 0058 00000000 		.word	xTasksWaitingTermination
 464 005c 00000000 		.word	xSuspendedTaskList
 465 0060 00000000 		.word	pxDelayedTaskList
 466 0064 00000000 		.word	pxOverflowDelayedTaskList
 467              		.cfi_endproc
 468              	.LFE38:
 470              		.section	.text.prvAddNewTaskToReadyList,"ax",%progbits
 471              		.align	1
 472              		.syntax unified
 473              		.thumb
 474              		.thumb_func
 476              	prvAddNewTaskToReadyList:
 477              	.LVL39:
 478              	.LFB8:
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
ARM GAS  /tmp/ccB9thnJ.s 			page 84


 479              		.loc 1 1078 1 is_stmt 1 view -0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 0
 482              		@ frame_needed = 0, uses_anonymous_args = 0
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 483              		.loc 1 1078 1 is_stmt 0 view .LVU139
 484 0000 10B5     		push	{r4, lr}
 485              	.LCFI2:
 486              		.cfi_def_cfa_offset 8
 487              		.cfi_offset 4, -8
 488              		.cfi_offset 14, -4
 489 0002 0446     		mov	r4, r0
1081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 490              		.loc 1 1081 2 is_stmt 1 view .LVU140
 491 0004 FFF7FEFF 		bl	vPortEnterCritical
 492              	.LVL40:
1083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 493              		.loc 1 1083 3 view .LVU141
1083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 494              		.loc 1 1083 25 is_stmt 0 view .LVU142
 495 0008 214A     		ldr	r2, .L45
 496 000a 1368     		ldr	r3, [r2]
 497 000c 0133     		adds	r3, r3, #1
 498 000e 1360     		str	r3, [r2]
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 499              		.loc 1 1084 3 is_stmt 1 view .LVU143
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 500              		.loc 1 1084 20 is_stmt 0 view .LVU144
 501 0010 204B     		ldr	r3, .L45+4
 502 0012 1B68     		ldr	r3, [r3]
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 503              		.loc 1 1084 5 view .LVU145
 504 0014 5BB1     		cbz	r3, .L43
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 505              		.loc 1 1107 4 is_stmt 1 view .LVU146
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 506              		.loc 1 1107 26 is_stmt 0 view .LVU147
 507 0016 204B     		ldr	r3, .L45+8
 508 0018 1B68     		ldr	r3, [r3]
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 509              		.loc 1 1107 6 view .LVU148
 510 001a 6BB9     		cbnz	r3, .L40
1109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 511              		.loc 1 1109 5 is_stmt 1 view .LVU149
1109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 512              		.loc 1 1109 21 is_stmt 0 view .LVU150
 513 001c 1D4B     		ldr	r3, .L45+4
 514 001e 1B68     		ldr	r3, [r3]
 515 0020 DA6A     		ldr	r2, [r3, #44]
1109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 516              		.loc 1 1109 45 view .LVU151
 517 0022 E36A     		ldr	r3, [r4, #44]
1109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 518              		.loc 1 1109 7 view .LVU152
 519 0024 9A42     		cmp	r2, r3
 520 0026 07D8     		bhi	.L40
1111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/ccB9thnJ.s 			page 85


 521              		.loc 1 1111 6 is_stmt 1 view .LVU153
1111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 522              		.loc 1 1111 19 is_stmt 0 view .LVU154
 523 0028 1A4B     		ldr	r3, .L45+4
 524 002a 1C60     		str	r4, [r3]
 525 002c 04E0     		b	.L40
 526              	.L43:
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 527              		.loc 1 1088 4 is_stmt 1 view .LVU155
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 528              		.loc 1 1088 17 is_stmt 0 view .LVU156
 529 002e 194B     		ldr	r3, .L45+4
 530 0030 1C60     		str	r4, [r3]
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 531              		.loc 1 1090 4 is_stmt 1 view .LVU157
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 532              		.loc 1 1090 31 is_stmt 0 view .LVU158
 533 0032 1368     		ldr	r3, [r2]
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 534              		.loc 1 1090 6 view .LVU159
 535 0034 012B     		cmp	r3, #1
 536 0036 28D0     		beq	.L44
 537              	.L40:
1120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 538              		.loc 1 1120 29 is_stmt 1 view .LVU160
1124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 539              		.loc 1 1124 3 view .LVU161
1124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 540              		.loc 1 1124 15 is_stmt 0 view .LVU162
 541 0038 184A     		ldr	r2, .L45+12
 542 003a 1368     		ldr	r3, [r2]
 543 003c 0133     		adds	r3, r3, #1
 544 003e 1360     		str	r3, [r2]
1132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 545              		.loc 1 1132 31 is_stmt 1 view .LVU163
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 546              		.loc 1 1134 3 view .LVU164
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 547              		.loc 1 1134 3 view .LVU165
 548 0040 E06A     		ldr	r0, [r4, #44]
 549 0042 0123     		movs	r3, #1
 550 0044 8340     		lsls	r3, r3, r0
 551 0046 164A     		ldr	r2, .L45+16
 552 0048 1168     		ldr	r1, [r2]
 553 004a 0B43     		orrs	r3, r3, r1
 554 004c 1360     		str	r3, [r2]
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 555              		.loc 1 1134 3 view .LVU166
 556 004e 00EB8000 		add	r0, r0, r0, lsl #2
 557 0052 211D     		adds	r1, r4, #4
 558 0054 134B     		ldr	r3, .L45+20
 559 0056 03EB8000 		add	r0, r3, r0, lsl #2
 560 005a FFF7FEFF 		bl	vListInsertEnd
 561              	.LVL41:
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 562              		.loc 1 1134 36 view .LVU167
1136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/ccB9thnJ.s 			page 86


 563              		.loc 1 1136 3 view .LVU168
1138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 564              		.loc 1 1138 2 view .LVU169
 565 005e FFF7FEFF 		bl	vPortExitCritical
 566              	.LVL42:
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 567              		.loc 1 1140 2 view .LVU170
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 568              		.loc 1 1140 24 is_stmt 0 view .LVU171
 569 0062 0D4B     		ldr	r3, .L45+8
 570 0064 1B68     		ldr	r3, [r3]
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 571              		.loc 1 1140 4 view .LVU172
 572 0066 7BB1     		cbz	r3, .L38
1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 573              		.loc 1 1144 3 is_stmt 1 view .LVU173
1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 574              		.loc 1 1144 19 is_stmt 0 view .LVU174
 575 0068 0A4B     		ldr	r3, .L45+4
 576 006a 1B68     		ldr	r3, [r3]
 577 006c DA6A     		ldr	r2, [r3, #44]
1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 578              		.loc 1 1144 42 view .LVU175
 579 006e E36A     		ldr	r3, [r4, #44]
1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 580              		.loc 1 1144 5 view .LVU176
 581 0070 9A42     		cmp	r2, r3
 582 0072 09D2     		bcs	.L38
1146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 583              		.loc 1 1146 4 is_stmt 1 view .LVU177
 584 0074 4FF0E023 		mov	r3, #-536813568
 585 0078 4FF08052 		mov	r2, #268435456
 586 007c C3F8042D 		str	r2, [r3, #3332]
1146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 587              		.loc 1 1146 4 view .LVU178
 588              		.syntax unified
 589              	@ 1146 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 590 0080 BFF34F8F 		dsb
 591              	@ 0 "" 2
1146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 592              		.loc 1 1146 4 view .LVU179
 593              	@ 1146 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 594 0084 BFF36F8F 		isb
 595              	@ 0 "" 2
1146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 596              		.loc 1 1146 35 view .LVU180
1155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 597              		.loc 1 1155 27 view .LVU181
 598              		.thumb
 599              		.syntax unified
 600              	.L38:
1157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 601              		.loc 1 1157 1 is_stmt 0 view .LVU182
 602 0088 10BD     		pop	{r4, pc}
 603              	.LVL43:
 604              	.L44:
1095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/ccB9thnJ.s 			page 87


 605              		.loc 1 1095 5 is_stmt 1 view .LVU183
 606 008a FFF7FEFF 		bl	prvInitialiseTaskLists
 607              	.LVL44:
 608 008e D3E7     		b	.L40
 609              	.L46:
 610              		.align	2
 611              	.L45:
 612 0090 00000000 		.word	uxCurrentNumberOfTasks
 613 0094 00000000 		.word	pxCurrentTCB
 614 0098 00000000 		.word	xSchedulerRunning
 615 009c 00000000 		.word	uxTaskNumber
 616 00a0 00000000 		.word	uxTopReadyPriority
 617 00a4 00000000 		.word	pxReadyTasksLists
 618              		.cfi_endproc
 619              	.LFE8:
 621              		.section	.text.prvDeleteTCB,"ax",%progbits
 622              		.align	1
 623              		.syntax unified
 624              		.thumb
 625              		.thumb_func
 627              	prvDeleteTCB:
 628              	.LVL45:
 629              	.LFB40:
3888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 630              		.loc 1 3888 2 view -0
 631              		.cfi_startproc
 632              		@ args = 0, pretend = 0, frame = 0
 633              		@ frame_needed = 0, uses_anonymous_args = 0
3888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 634              		.loc 1 3888 2 is_stmt 0 view .LVU185
 635 0000 10B5     		push	{r4, lr}
 636              	.LCFI3:
 637              		.cfi_def_cfa_offset 8
 638              		.cfi_offset 4, -8
 639              		.cfi_offset 14, -4
 640 0002 0446     		mov	r4, r0
3892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 641              		.loc 1 3892 3 is_stmt 1 view .LVU186
3900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 642              		.loc 1 3900 4 view .LVU187
 643 0004 5030     		adds	r0, r0, #80
 644              	.LVL46:
3900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 645              		.loc 1 3900 4 is_stmt 0 view .LVU188
 646 0006 FFF7FEFF 		bl	_reclaim_reent
 647              	.LVL47:
3916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 648              		.loc 1 3916 4 is_stmt 1 view .LVU189
3916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 649              		.loc 1 3916 13 is_stmt 0 view .LVU190
 650 000a 94F87531 		ldrb	r3, [r4, #373]	@ zero_extendqisi2
3916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 651              		.loc 1 3916 6 view .LVU191
 652 000e 63B1     		cbz	r3, .L53
3923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 653              		.loc 1 3923 9 is_stmt 1 view .LVU192
3923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccB9thnJ.s 			page 88


 654              		.loc 1 3923 11 is_stmt 0 view .LVU193
 655 0010 012B     		cmp	r3, #1
 656 0012 11D0     		beq	.L54
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 657              		.loc 1 3933 5 is_stmt 1 view .LVU194
 658 0014 022B     		cmp	r3, #2
 659 0016 0ED0     		beq	.L47
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 660              		.loc 1 3933 5 view .LVU195
 661              	.LBB112:
 662              	.LBI112:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 663              		.loc 2 191 30 view .LVU196
 664              	.LBB113:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 665              		.loc 2 193 1 view .LVU197
 666              		.loc 2 195 2 view .LVU198
 667              		.syntax unified
 668              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 669 0018 4FF05003 			mov r3, #80												
 670 001c 83F31188 		msr basepri, r3											
 671 0020 BFF36F8F 		isb														
 672 0024 BFF34F8F 		dsb														
 673              	
 674              	@ 0 "" 2
 675              	.LVL48:
 676              		.thumb
 677              		.syntax unified
 678              	.L51:
 679              		.loc 2 195 2 is_stmt 0 view .LVU199
 680              	.LBE113:
 681              	.LBE112:
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 682              		.loc 1 3933 5 is_stmt 1 discriminator 1 view .LVU200
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 683              		.loc 1 3933 5 discriminator 1 view .LVU201
 684 0028 FEE7     		b	.L51
 685              	.L53:
3920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
 686              		.loc 1 3920 5 view .LVU202
 687 002a 206B     		ldr	r0, [r4, #48]
 688 002c FFF7FEFF 		bl	vPortFree
 689              	.LVL49:
3921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 690              		.loc 1 3921 5 view .LVU203
 691 0030 2046     		mov	r0, r4
 692 0032 FFF7FEFF 		bl	vPortFree
 693              	.LVL50:
 694              	.L47:
3938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 695              		.loc 1 3938 2 is_stmt 0 view .LVU204
 696 0036 10BD     		pop	{r4, pc}
 697              	.LVL51:
 698              	.L54:
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 699              		.loc 1 3927 5 is_stmt 1 view .LVU205
 700 0038 2046     		mov	r0, r4
ARM GAS  /tmp/ccB9thnJ.s 			page 89


 701 003a FFF7FEFF 		bl	vPortFree
 702              	.LVL52:
 703 003e FAE7     		b	.L47
 704              		.cfi_endproc
 705              	.LFE40:
 707              		.section	.text.prvCheckTasksWaitingTermination,"ax",%progbits
 708              		.align	1
 709              		.syntax unified
 710              		.thumb
 711              		.thumb_func
 713              	prvCheckTasksWaitingTermination:
 714              	.LFB39:
3640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 715              		.loc 1 3640 1 view -0
 716              		.cfi_startproc
 717              		@ args = 0, pretend = 0, frame = 0
 718              		@ frame_needed = 0, uses_anonymous_args = 0
 719              	.LBB114:
3646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 720              		.loc 1 3646 3 view .LVU207
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 721              		.loc 1 3650 3 view .LVU208
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 722              		.loc 1 3650 39 view .LVU209
 723 0000 0F4B     		ldr	r3, .L62
 724 0002 1B68     		ldr	r3, [r3]
 725 0004 D3B1     		cbz	r3, .L61
 726              	.LBE114:
3640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 727              		.loc 1 3640 1 is_stmt 0 view .LVU210
 728 0006 10B5     		push	{r4, lr}
 729              	.LCFI4:
 730              		.cfi_def_cfa_offset 8
 731              		.cfi_offset 4, -8
 732              		.cfi_offset 14, -4
 733              	.L57:
 734              	.LBB115:
3652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 735              		.loc 1 3652 4 is_stmt 1 view .LVU211
 736 0008 FFF7FEFF 		bl	vPortEnterCritical
 737              	.LVL53:
3654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 738              		.loc 1 3654 5 view .LVU212
3654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 739              		.loc 1 3654 13 is_stmt 0 view .LVU213
 740 000c 0D4B     		ldr	r3, .L62+4
 741 000e DB68     		ldr	r3, [r3, #12]
3654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 742              		.loc 1 3654 11 view .LVU214
 743 0010 DC68     		ldr	r4, [r3, #12]
 744              	.LVL54:
3655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 745              		.loc 1 3655 5 is_stmt 1 view .LVU215
3655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 746              		.loc 1 3655 14 is_stmt 0 view .LVU216
 747 0012 201D     		adds	r0, r4, #4
 748 0014 FFF7FEFF 		bl	uxListRemove
ARM GAS  /tmp/ccB9thnJ.s 			page 90


 749              	.LVL55:
3656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
 750              		.loc 1 3656 5 is_stmt 1 view .LVU217
 751 0018 0B4A     		ldr	r2, .L62+8
 752 001a 1368     		ldr	r3, [r2]
 753 001c 013B     		subs	r3, r3, #1
 754 001e 1360     		str	r3, [r2]
3657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 755              		.loc 1 3657 5 view .LVU218
 756 0020 074A     		ldr	r2, .L62
 757 0022 1368     		ldr	r3, [r2]
 758 0024 013B     		subs	r3, r3, #1
 759 0026 1360     		str	r3, [r2]
3659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 760              		.loc 1 3659 4 view .LVU219
 761 0028 FFF7FEFF 		bl	vPortExitCritical
 762              	.LVL56:
3661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 763              		.loc 1 3661 4 view .LVU220
 764 002c 2046     		mov	r0, r4
 765 002e FFF7FEFF 		bl	prvDeleteTCB
 766              	.LVL57:
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 767              		.loc 1 3650 39 view .LVU221
 768 0032 034B     		ldr	r3, .L62
 769 0034 1B68     		ldr	r3, [r3]
 770 0036 002B     		cmp	r3, #0
 771 0038 E6D1     		bne	.L57
 772              	.LBE115:
3665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 773              		.loc 1 3665 1 is_stmt 0 view .LVU222
 774 003a 10BD     		pop	{r4, pc}
 775              	.LVL58:
 776              	.L61:
 777              	.LCFI5:
 778              		.cfi_def_cfa_offset 0
 779              		.cfi_restore 4
 780              		.cfi_restore 14
3665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 781              		.loc 1 3665 1 view .LVU223
 782 003c 7047     		bx	lr
 783              	.L63:
 784 003e 00BF     		.align	2
 785              	.L62:
 786 0040 00000000 		.word	uxDeletedTasksWaitingCleanUp
 787 0044 00000000 		.word	xTasksWaitingTermination
 788 0048 00000000 		.word	uxCurrentNumberOfTasks
 789              		.cfi_endproc
 790              	.LFE39:
 792              		.section	.text.prvIdleTask,"ax",%progbits
 793              		.align	1
 794              		.syntax unified
 795              		.thumb
 796              		.thumb_func
 798              	prvIdleTask:
 799              	.LFB37:
3393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
ARM GAS  /tmp/ccB9thnJ.s 			page 91


 800              		.loc 1 3393 1 is_stmt 1 view -0
 801              		.cfi_startproc
 802              		@ Volatile: function does not return.
 803              		@ args = 0, pretend = 0, frame = 0
 804              		@ frame_needed = 0, uses_anonymous_args = 0
 805              	.LVL59:
3393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
 806              		.loc 1 3393 1 is_stmt 0 view .LVU225
 807 0000 08B5     		push	{r3, lr}
 808              	.LCFI6:
 809              		.cfi_def_cfa_offset 8
 810              		.cfi_offset 3, -8
 811              		.cfi_offset 14, -4
 812              	.LVL60:
 813              	.L65:
3395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 814              		.loc 1 3395 2 is_stmt 1 view .LVU226
3403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 815              		.loc 1 3403 64 view .LVU227
3405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 816              		.loc 1 3405 2 view .LVU228
3409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 817              		.loc 1 3409 3 view .LVU229
 818 0002 FFF7FEFF 		bl	prvCheckTasksWaitingTermination
 819              	.LVL61:
3432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 820              		.loc 1 3432 4 view .LVU230
3432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 821              		.loc 1 3432 8 is_stmt 0 view .LVU231
 822 0006 074B     		ldr	r3, .L68
 823 0008 1B68     		ldr	r3, [r3]
3432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 824              		.loc 1 3432 6 view .LVU232
 825 000a 012B     		cmp	r3, #1
 826 000c F9D9     		bls	.L65
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 827              		.loc 1 3434 5 is_stmt 1 view .LVU233
 828 000e 4FF0E023 		mov	r3, #-536813568
 829 0012 4FF08052 		mov	r2, #268435456
 830 0016 C3F8042D 		str	r2, [r3, #3332]
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 831              		.loc 1 3434 5 view .LVU234
 832              		.syntax unified
 833              	@ 3434 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 834 001a BFF34F8F 		dsb
 835              	@ 0 "" 2
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 836              		.loc 1 3434 5 view .LVU235
 837              	@ 3434 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 838 001e BFF36F8F 		isb
 839              	@ 0 "" 2
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 840              		.loc 1 3434 16 view .LVU236
 841              		.thumb
 842              		.syntax unified
 843 0022 EEE7     		b	.L65
 844              	.L69:
ARM GAS  /tmp/ccB9thnJ.s 			page 92


 845              		.align	2
 846              	.L68:
 847 0024 00000000 		.word	pxReadyTasksLists
 848              		.cfi_endproc
 849              	.LFE37:
 851              		.section	.text.prvAddCurrentTaskToDelayedList,"ax",%progbits
 852              		.align	1
 853              		.syntax unified
 854              		.thumb
 855              		.thumb_func
 857              	prvAddCurrentTaskToDelayedList:
 858              	.LVL62:
 859              	.LFB56:
3965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
3968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetCurrentTaskHandle( void )
3970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
3972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* A critical section is not required as this is not called from
3974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		an interrupt and the current TCB will always be the same for any
3975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		individual execution thread. */
3976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pxCurrentTCB;
3977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
3979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
3982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
3985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGetSchedulerState( void )
3987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
3989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning == pdFALSE )
3991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = taskSCHEDULER_NOT_STARTED;
3993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_RUNNING;
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_SUSPENDED;
4003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccB9thnJ.s 			page 93


4009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
4010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
4015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = pxMutexHolder;
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
4018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the mutex was given back by an interrupt while the queue was
4020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		locked then the mutex holder might now be NULL.  _RB_ Is this still
4021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		needed as interrupts can no longer use mutexes? */
4022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
4023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the holder of the mutex has a priority below the priority of
4025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the task attempting to obtain the mutex then it will temporarily
4026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			inherit the priority of the task attempting to obtain the mutex. */
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
4028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Adjust the mutex holder state to account for its new
4030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				priority.  Only reset the event list item value if the value is
4031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				not being used for anything else. */
4032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VA
4033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIOR
4035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task being modified is in the ready state it will need
4042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				to be moved into a new list. */
4043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutex
4044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is known that the task is in its ready list so
4048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						there is no need to check again and the port level
4049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						reset macro can be called directly. */
4050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority, uxTopReadyPriority );
4051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Inherit the priority before being moved into the new list. */
4058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
4060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Just inherit the priority. */
4064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
4065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/ccB9thnJ.s 			page 94


4066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_PRIORITY_INHERIT( pxMutexHolderTCB, pxCurrentTCB->uxPriority );
4068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Inheritance occurred. */
4070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
4071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
4075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The base priority of the mutex holder is lower than the
4077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority of the task attempting to take the mutex, but the
4078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					current priority of the mutex holder is not lower than the
4079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority of the task attempting to take the mutex.
4080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Therefore the mutex holder must have already inherited a
4081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority, but inheritance would have occurred if that had
4082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					not been the case. */
4083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
4084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
4105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
4108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
4110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task can only have an inherited priority if it holds the mutex.
4112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			If the mutex is held by a task then it cannot be given from an
4113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupt, and if a mutex is given by the holding task then it must
4114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			be the running state task. */
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB == pxCurrentTCB );
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
4117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
4118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Has the holder of the mutex inherited the priority of another
4120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task? */
4121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
4122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccB9thnJ.s 			page 95


4123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only disinherit if no other mutexes are held. */
4124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
4125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task can only have an inherited priority if it holds
4127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the mutex.  If the mutex is held by a task then it cannot be
4128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					given from an interrupt, and if a mutex is given by the
4129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					holding task then it must be the running state task.  Remove
4130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the holding task from the ready/delayed list. */
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
4134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Disinherit the priority before adding the task into the
4141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					new	ready list. */
4142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
4144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Reset the event list item value.  It cannot be in use for
4146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					any other purpose if this task is running, and it must be
4147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					running to give back the mutex. */
4148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Return true to indicate that a context switch is required.
4152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					This is only actually required in the corner case whereby
4153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					multiple mutexes were held and the mutexes were given back
4154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					in an order different to that in which they were taken.
4155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					If a context switch did not occur when the first mutex was
4156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					returned, even if a task was waiting on it, then a context
4157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					switch should occur when the last mutex is returned whether
4158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					a task is waiting on it or not. */
4159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
4160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
ARM GAS  /tmp/ccB9thnJ.s 			page 96


4180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPriorityDisinheritAfterTimeout( TaskHandle_t const pxMutexHolder, UBaseType_t uxHighestP
4185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
4187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
4188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
4189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
4191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If pxMutexHolder is not NULL then the holder must hold at least
4193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			one mutex. */
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
4195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Determine the priority to which the priority of the task that
4197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			holds the mutex should be set.  This will be the greater of the
4198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			holding task's base priority and the priority of the highest
4199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			priority task that is waiting to obtain the mutex. */
4200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
4201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityToUse = uxHighestPriorityWaitingTask;
4203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityToUse = pxTCB->uxBasePriority;
4207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Does the priority need to change? */
4210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority != uxPriorityToUse )
4211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only disinherit if no other mutexes are held.  This is a
4213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				simplification in the priority inheritance implementation.  If
4214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task that holds the mutex is also holding other mutexes then
4215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the other mutexes may have caused the priority inheritance. */
4216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
4217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If a task has timed out because it already holds the
4219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mutex it was trying to obtain then it cannot of inherited
4220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					its own priority. */
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( pxTCB != pxCurrentTCB );
4222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Disinherit the priority, remembering the previous
4224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority to facilitate determining the subject task's
4225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					state. */
4226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
4228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
4229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Only reset the event list item value if the value is not
4231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					being used for anything else. */
4232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE
4233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( 
4235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
ARM GAS  /tmp/ccB9thnJ.s 			page 97


4237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the running task is not the task that holds the mutex
4242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					then the task that holds the mutex could be in either the
4243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Ready, Blocked or Suspended states.  Only remove the task
4244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					from its current state list if it is in the Ready state as
4245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the task's priority is going to change and there is one
4246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Ready list per priority. */
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xState
4248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* It is known that the task is in its ready list so
4252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							there is no need to check again and the port level
4253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							reset macro can be called directly. */
4254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							portRESET_READY_PRIORITY( pxTCB->uxPriority, uxTopReadyPriority );
4255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
4257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
4259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						prvAddTaskToReadyList( pxTCB );
4262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskEnterCritical( void )
4290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
4292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
ARM GAS  /tmp/ccB9thnJ.s 			page 98


4294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxCriticalNesting )++;
4296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* This is not the interrupt safe version of the enter critical
4298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function so	assert() if it is being called from an interrupt
4299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			context.  Only API functions that end in "FromISR" can be used in an
4300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupt.  Only assert if the critical nesting count is 1 to
4301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			protect against recursive calls if the assert function also uses a
4302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			critical section. */
4303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting == 1 )
4304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portASSERT_IF_IN_ISR();
4306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskExitCritical( void )
4320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting > 0U )
4324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( pxCurrentTCB->uxCriticalNesting )--;
4326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxCriticalNesting == 0U )
4328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portENABLE_INTERRUPTS();
4330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
ARM GAS  /tmp/ccB9thnJ.s 			page 99


4351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName )
4353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	size_t x;
4355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Start by copying the entire string. */
4357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		strcpy( pcBuffer, pcTaskName );
4358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Pad the end of the string with spaces to ensure columns line up when
4360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		printed out. */
4361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = strlen( pcBuffer ); x < ( size_t ) ( configMAX_TASK_NAME_LEN - 1 ); x++ )
4362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pcBuffer[ x ] = ' ';
4364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Terminate. */
4367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pcBuffer[ x ] = ( char ) 0x00;
4368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return the new end of string. */
4370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return &( pcBuffer[ x ] );
4371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
4374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( config
4377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskList( char * pcWriteBuffer )
4379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxArraySize, x;
4382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char cStatus;
4383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/*
4385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
4386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * scheduler.
4390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskList() calls uxTaskGetSystemState(), then formats part of the
4392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * uxTaskGetSystemState() output into a human readable table that
4393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * displays task names, states and stack usage.
4394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskList() has a dependency on the sprintf() C library function that
4396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * might bloat the code size, use a lot of stack, and provide different
4397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * results on different platforms.  An alternative, tiny, third party,
4398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * and limited functionality implementation of sprintf() is provided in
4399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * many of the FreeRTOS/Demo sub-directories in a file called
4400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * printf-stdarg.c (note printf-stdarg.c does not provide a full
4401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * snprintf() implementation!).
4402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskList().
4406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 */
4407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccB9thnJ.s 			page 100


4408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = ( char ) 0x00;
4411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function is executing. */
4414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  if
4417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		equate to NULL. */
4419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) ); /*lint !e907
4420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
4424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
4425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Create a human readable table from the binary data. */
4427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for( x = 0; x < uxArraySize; x++ )
4428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				switch( pxTaskStatusArray[ x ].eCurrentState )
4430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eRunning:		cStatus = tskRUNNING_CHAR;
4432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eReady:		cStatus = tskREADY_CHAR;
4435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eBlocked:		cStatus = tskBLOCKED_CHAR;
4438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eSuspended:	cStatus = tskSUSPENDED_CHAR;
4441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eDeleted:		cStatus = tskDELETED_CHAR;
4444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eInvalid:		/* Fall through. */
4447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					default:			/* Should not get here, but it is included
4448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										to prevent static checking errors. */
4449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										cStatus = ( char ) 0x00;
4450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Write the task name to the string, padding with spaces so it
4454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				can be printed in tabular form more easily. */
4455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Write the rest of the string. */
4458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskStatusArray[ x 
4459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer ); /*lint !e9016 Pointer arithmetic ok on char pointers 
4460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
ARM GAS  /tmp/ccB9thnJ.s 			page 101


4465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( 
4473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
4474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( c
4476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskGetRunTimeStats( char *pcWriteBuffer )
4478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxArraySize, x;
4481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTotalTime, ulStatsAsPercentage;
4482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_TRACE_FACILITY != 1 )
4484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#error configUSE_TRACE_FACILITY must also be set to 1 in FreeRTOSConfig.h to use vTaskGetRunTime
4486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
4488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/*
4490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
4491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * scheduler.
4495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
4497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the uxTaskGetSystemState() output into a human readable table that
4498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * displays the amount of time each task has spent in the Running state
4499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * in both absolute and percentage terms.
4500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
4502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * function that might bloat the code size, use a lot of stack, and
4503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * provide different results on different platforms.  An alternative,
4504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * tiny, third party, and limited functionality implementation of
4505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
4506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * a file called printf-stdarg.c (note printf-stdarg.c does not provide
4507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * a full snprintf() implementation!).
4508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskGetRunTimeStats().
4512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 */
4513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = ( char ) 0x00;
4516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function is executing. */
4519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  If
ARM GAS  /tmp/ccB9thnJ.s 			page 102


4522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		equate to NULL. */
4524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) ); /*lint !e907
4525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
4529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
4530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* For percentage calculations. */
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulTotalTime /= 100UL;
4533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Avoid divide by zero errors. */
4535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulTotalTime > 0UL )
4536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Create a human readable table from the binary data. */
4538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				for( x = 0; x < uxArraySize; x++ )
4539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* What percentage of the total run time has the task used?
4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					This will always be rounded down to the nearest integer.
4542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulTotalRunTimeDiv100 has already been divided by 100. */
4543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
4544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Write the task name to the string, padding with
4546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					spaces so it can be printed in tabular form more
4547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					easily. */
4548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ulStatsAsPercentage > 0UL )
4551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter, ulSta
4555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
4557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
4560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* If the percentage is zero here then the task has
4567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						consumed less than 1% of the total run time. */
4568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter );
4571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
4573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
4576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
ARM GAS  /tmp/ccB9thnJ.s 			page 103


4579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer += strlen( pcWriteBuffer ); /*lint !e9016 Pointer arithmetic ok on char pointers
4582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
4600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxTaskResetEventItemValue( void )
4603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
4604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxReturn;
4605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
4607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Reset the event list item to its normal value - so it can be used with
4609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	queues and semaphores. */
4610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES 
4611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return uxReturn;
4613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
4614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t pvTaskIncrementMutexHeldCount( void )
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
4621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		then pxCurrentTCB will be NULL. */
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB != NULL )
4623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxMutexesHeld )++;
4625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxCurrentTCB;
4628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait )
ARM GAS  /tmp/ccB9thnJ.s 			page 104


4636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
4638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Only block if the notification count is not already non-zero. */
4642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ulNotifiedValue == 0UL )
4643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
4651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
4655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
4657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_TAKE();
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
4674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulReturn != 0UL )
4676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xClearCountOnExit != pdFALSE )
4678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = 0UL;
4680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = ulReturn - ( uint32_t ) 1;
4684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/ccB9thnJ.s 			page 105


4693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ulReturn;
4696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t 
4704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
4706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Only block if a notification is not already pending. */
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Clear bits in the task's notification value as bits may get
4713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				set	by the notifying task or interrupt.  This can be used to
4714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				clear the value to zero. */
4715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnEntry;
4716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
4724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
4728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
4729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
4730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_WAIT();
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulNotificationValue != NULL )
4748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Output the current notification value, which may or may not
ARM GAS  /tmp/ccB9thnJ.s 			page 106


4750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				have changed. */
4751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulNotificationValue = pxCurrentTCB->ulNotifiedValue;
4752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If ucNotifyValue is set then either the task never entered the
4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			blocked state (because a notification was already pending) or the
4756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task unblocked because of a notification.  Otherwise the task
4757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			unblocked because of a timeout. */
4758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A notification was not received. */
4761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
4762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A notification was already pending or a notification was
4766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				received while the task was waiting. */
4767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnExit;
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
4769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction
4784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
4791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			switch( eAction )
4804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
ARM GAS  /tmp/ccB9thnJ.s 			page 107


4807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eNoAction:
4830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					updated. */
4832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				default:
4835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Should not get here if all enums are handled.
4836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Artificially force an assert by testing a value the
4837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					compiler can't assume is const. */
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( pxTCB->ulNotifiedValue == ~0UL );
4839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY();
4844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
4851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( configUSE_TICKLESS_IDLE != 0 )
4856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If a task is blocked waiting for a notification then
4858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime might be set to the blocked task's time
4859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					out time.  If the task is unblocked for a reason other than
4860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					a timeout xNextTaskUnblockTime is normally left unchanged,
4861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					because it will automatically get reset to a new value when
4862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the tick count equals xNextTaskUnblockTime.  However if
4863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					tickless idling is used it might be more important to enter
ARM GAS  /tmp/ccB9thnJ.s 			page 108


4864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					sleep mode at the earliest possible time - so reset
4865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime here to ensure it is updated at the
4866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					earliest possible time. */
4867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
4868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
4870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
4876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction 
4898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
ARM GAS  /tmp/ccB9thnJ.s 			page 109


4921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
4925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			switch( eAction )
4937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eNoAction :
4963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					updated. */
4965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				default:
4968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Should not get here if all enums are handled.
4969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Artificially force an assert by testing a value the
4970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					compiler can't assume is const. */
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( pxTCB->ulNotifiedValue == ~0UL );
4972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_FROM_ISR();
4976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
ARM GAS  /tmp/ccB9thnJ.s 			page 110


4978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
5000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
5001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
5002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
5003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
5004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Mark that a yield is pending in case the user is not
5006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					using the "xHigherPriorityTaskWoken" parameter to an ISR
5007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					safe FreeRTOS function. */
5008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xYieldPending = pdTRUE;
5009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
5011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
5013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
5017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
5019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
5025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken )
5027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
5029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
5030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
5031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
5033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
ARM GAS  /tmp/ccB9thnJ.s 			page 111


5035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
5036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
5037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
5038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
5039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
5040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
5041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
5042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
5043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
5044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
5045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
5046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
5047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
5048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
5049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
5050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
5051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
5053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
5055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
5057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
5058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* 'Giving' is equivalent to incrementing a count in a counting
5060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			semaphore. */
5061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->ulNotifiedValue )++;
5062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_GIVE_FROM_ISR();
5064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
5066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
5067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
5068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
5071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
5073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
5075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
5076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
5078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
5080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
5081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
5082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
5085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
5087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
5088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
5089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
5090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
5091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
ARM GAS  /tmp/ccB9thnJ.s 			page 112


5092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Mark that a yield is pending in case the user is not
5094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					using the "xHigherPriorityTaskWoken" parameter in an ISR
5095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					safe FreeRTOS function. */
5096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xYieldPending = pdTRUE;
5097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
5099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
5101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
5105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
5111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask )
5113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
5115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
5116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
5118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		its notification state cleared. */
5119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
5120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
5122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->ucNotifyState == taskNOTIFICATION_RECEIVED )
5124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
5126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
5127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
5129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFAIL;
5131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
5134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
5136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
5142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTaskNotifyValueClear( TaskHandle_t xTask, uint32_t ulBitsToClear )
5144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
5146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
5147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
ARM GAS  /tmp/ccB9thnJ.s 			page 113


5149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		its notification state cleared. */
5150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
5151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
5153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Return the notification as it was before the bits were cleared,
5155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then clear the bit mask. */
5156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
5157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ulNotifiedValue &= ~ulBitsToClear;
5158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
5160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ulReturn;
5162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( INCLUDE_xTaskGetIdleTaskHandle == 1 ) )
5168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTaskGetIdleRunTimeCounter( void )
5170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xIdleTaskHandle->ulRunTimeCounter;
5172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
5175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
5178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 860              		.loc 1 5178 1 view -0
 861              		.cfi_startproc
 862              		@ args = 0, pretend = 0, frame = 0
 863              		@ frame_needed = 0, uses_anonymous_args = 0
 864              		.loc 1 5178 1 is_stmt 0 view .LVU238
 865 0000 70B5     		push	{r4, r5, r6, lr}
 866              	.LCFI7:
 867              		.cfi_def_cfa_offset 16
 868              		.cfi_offset 4, -16
 869              		.cfi_offset 5, -12
 870              		.cfi_offset 6, -8
 871              		.cfi_offset 14, -4
 872 0002 0446     		mov	r4, r0
 873 0004 0D46     		mov	r5, r1
5179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTimeToWake;
 874              		.loc 1 5179 1 is_stmt 1 view .LVU239
5180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** const TickType_t xConstTickCount = xTickCount;
 875              		.loc 1 5180 1 view .LVU240
 876              		.loc 1 5180 18 is_stmt 0 view .LVU241
 877 0006 1D4B     		ldr	r3, .L77
 878 0008 1E68     		ldr	r6, [r3]
 879              	.LVL63:
5181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
5183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* About to enter a delayed list, so ensure the ucDelayAborted flag is
5185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		reset to pdFALSE so it can be detected as having been set to pdTRUE
ARM GAS  /tmp/ccB9thnJ.s 			page 114


5186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		when the task leaves the Blocked state. */
5187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxCurrentTCB->ucDelayAborted = pdFALSE;
5188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
5190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the ready list before adding it to the blocked list
5192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	as the same list item is used for both lists. */
5193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 880              		.loc 1 5193 2 is_stmt 1 view .LVU242
 881              		.loc 1 5193 35 is_stmt 0 view .LVU243
 882 000a 1D4B     		ldr	r3, .L77+4
 883 000c 1868     		ldr	r0, [r3]
 884              	.LVL64:
 885              		.loc 1 5193 6 view .LVU244
 886 000e 0430     		adds	r0, r0, #4
 887 0010 FFF7FEFF 		bl	uxListRemove
 888              	.LVL65:
 889              		.loc 1 5193 4 view .LVU245
 890 0014 48B9     		cbnz	r0, .L71
5194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The current task must be in a ready list, so there is no need to
5196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		check, and the port reset macro can be called directly. */
5197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority ); /*lint !e931 pxCurrentT
 891              		.loc 1 5197 3 is_stmt 1 view .LVU246
 892 0016 1A4B     		ldr	r3, .L77+4
 893 0018 1B68     		ldr	r3, [r3]
 894 001a DB6A     		ldr	r3, [r3, #44]
 895 001c 0122     		movs	r2, #1
 896 001e 9A40     		lsls	r2, r2, r3
 897 0020 1849     		ldr	r1, .L77+8
 898 0022 0B68     		ldr	r3, [r1]
 899 0024 23EA0203 		bic	r3, r3, r2
 900 0028 0B60     		str	r3, [r1]
 901              	.L71:
5198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
5200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 902              		.loc 1 5201 27 view .LVU247
5202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
5205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 903              		.loc 1 5206 3 view .LVU248
 904              		.loc 1 5206 5 is_stmt 0 view .LVU249
 905 002a B4F1FF3F 		cmp	r4, #-1
 906 002e 0DD0     		beq	.L76
 907              	.L72:
5207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add the task to the suspended task list instead of a delayed task
5209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			list to ensure it is not woken by a timing event.  It will block
5210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			indefinitely. */
5211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
5212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
5214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccB9thnJ.s 			page 115


5215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Calculate the time at which the task should be woken if the event
5216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			does not occur.  This may overflow but this doesn't matter, the
5217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			kernel will manage it correctly. */
5218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = xConstTickCount + xTicksToWait;
 908              		.loc 1 5218 4 is_stmt 1 view .LVU250
 909              		.loc 1 5218 16 is_stmt 0 view .LVU251
 910 0030 3444     		add	r4, r4, r6
 911              	.LVL66:
5219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The list item will be inserted in wake time order. */
5221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 912              		.loc 1 5221 4 is_stmt 1 view .LVU252
 913 0032 134B     		ldr	r3, .L77+4
 914 0034 1B68     		ldr	r3, [r3]
 915 0036 5C60     		str	r4, [r3, #4]
5222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xTimeToWake < xConstTickCount )
 916              		.loc 1 5223 4 view .LVU253
 917              		.loc 1 5223 6 is_stmt 0 view .LVU254
 918 0038 A642     		cmp	r6, r4
 919 003a 10D9     		bls	.L74
5224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Wake time has overflowed.  Place this item in the overflow
5226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				list. */
5227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 920              		.loc 1 5227 5 is_stmt 1 view .LVU255
 921 003c 124B     		ldr	r3, .L77+12
 922 003e 1868     		ldr	r0, [r3]
 923              		.loc 1 5227 60 is_stmt 0 view .LVU256
 924 0040 0F4B     		ldr	r3, .L77+4
 925 0042 1968     		ldr	r1, [r3]
 926              		.loc 1 5227 5 view .LVU257
 927 0044 0431     		adds	r1, r1, #4
 928 0046 FFF7FEFF 		bl	vListInsert
 929              	.LVL67:
 930              	.L70:
5228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
5230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The wake time has not overflowed, so the current block list
5232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is used. */
5233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task entering the blocked state was placed at the
5236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				head of the list of blocked tasks then xNextTaskUnblockTime
5237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				needs to be updated too. */
5238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTimeToWake < xNextTaskUnblockTime )
5239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime = xTimeToWake;
5241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
5243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
5245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/ccB9thnJ.s 			page 116


5249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* INCLUDE_vTaskSuspend */
5250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Calculate the time at which the task should be woken if the event
5252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		does not occur.  This may overflow but this doesn't matter, the kernel
5253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		will manage it correctly. */
5254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTimeToWake = xConstTickCount + xTicksToWait;
5255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The list item will be inserted in wake time order. */
5257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
5258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTimeToWake < xConstTickCount )
5260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Wake time has overflowed.  Place this item in the overflow list. */
5262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
5265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The wake time has not overflowed, so the current block list is used. */
5267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task entering the blocked state was placed at the head of the
5270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			list of blocked tasks then xNextTaskUnblockTime needs to be updated
5271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			too. */
5272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xTimeToWake < xNextTaskUnblockTime )
5273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xNextTaskUnblockTime = xTimeToWake;
5275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
5277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
5279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
5283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xCanBlockIndefinitely;
5284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
5286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 931              		.loc 1 5286 1 view .LVU258
 932 004a 70BD     		pop	{r4, r5, r6, pc}
 933              	.LVL68:
 934              	.L76:
5206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 935              		.loc 1 5206 41 discriminator 1 view .LVU259
 936 004c 002D     		cmp	r5, #0
 937 004e EFD0     		beq	.L72
5211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 938              		.loc 1 5211 4 is_stmt 1 view .LVU260
5211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 939              		.loc 1 5211 56 is_stmt 0 view .LVU261
 940 0050 0B4B     		ldr	r3, .L77+4
 941 0052 1968     		ldr	r1, [r3]
5211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 942              		.loc 1 5211 4 view .LVU262
 943 0054 0431     		adds	r1, r1, #4
 944 0056 0D48     		ldr	r0, .L77+16
 945 0058 FFF7FEFF 		bl	vListInsertEnd
ARM GAS  /tmp/ccB9thnJ.s 			page 117


 946              	.LVL69:
 947 005c F5E7     		b	.L70
 948              	.LVL70:
 949              	.L74:
5233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 950              		.loc 1 5233 5 is_stmt 1 view .LVU263
 951 005e 0C4B     		ldr	r3, .L77+20
 952 0060 1868     		ldr	r0, [r3]
5233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 953              		.loc 1 5233 52 is_stmt 0 view .LVU264
 954 0062 074B     		ldr	r3, .L77+4
 955 0064 1968     		ldr	r1, [r3]
5233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 956              		.loc 1 5233 5 view .LVU265
 957 0066 0431     		adds	r1, r1, #4
 958 0068 FFF7FEFF 		bl	vListInsert
 959              	.LVL71:
5238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 960              		.loc 1 5238 5 is_stmt 1 view .LVU266
5238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 961              		.loc 1 5238 21 is_stmt 0 view .LVU267
 962 006c 094B     		ldr	r3, .L77+24
 963 006e 1B68     		ldr	r3, [r3]
5238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 964              		.loc 1 5238 7 view .LVU268
 965 0070 A342     		cmp	r3, r4
 966 0072 EAD9     		bls	.L70
5240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 967              		.loc 1 5240 6 is_stmt 1 view .LVU269
5240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 968              		.loc 1 5240 27 is_stmt 0 view .LVU270
 969 0074 074B     		ldr	r3, .L77+24
 970 0076 1C60     		str	r4, [r3]
5244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 971              		.loc 1 5244 30 is_stmt 1 view .LVU271
 972              		.loc 1 5286 1 is_stmt 0 view .LVU272
 973 0078 E7E7     		b	.L70
 974              	.L78:
 975 007a 00BF     		.align	2
 976              	.L77:
 977 007c 00000000 		.word	xTickCount
 978 0080 00000000 		.word	pxCurrentTCB
 979 0084 00000000 		.word	uxTopReadyPriority
 980 0088 00000000 		.word	pxOverflowDelayedTaskList
 981 008c 00000000 		.word	xSuspendedTaskList
 982 0090 00000000 		.word	pxDelayedTaskList
 983 0094 00000000 		.word	xNextTaskUnblockTime
 984              		.cfi_endproc
 985              	.LFE56:
 987              		.section	.text.xTaskCreateStatic,"ax",%progbits
 988              		.align	1
 989              		.global	xTaskCreateStatic
 990              		.syntax unified
 991              		.thumb
 992              		.thumb_func
 994              	xTaskCreateStatic:
 995              	.LVL72:
ARM GAS  /tmp/ccB9thnJ.s 			page 118


 996              	.LFB5:
 588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 997              		.loc 1 588 2 is_stmt 1 view -0
 998              		.cfi_startproc
 999              		@ args = 12, pretend = 0, frame = 8
 1000              		@ frame_needed = 0, uses_anonymous_args = 0
 588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 1001              		.loc 1 588 2 is_stmt 0 view .LVU274
 1002 0000 30B5     		push	{r4, r5, lr}
 1003              	.LCFI8:
 1004              		.cfi_def_cfa_offset 12
 1005              		.cfi_offset 4, -12
 1006              		.cfi_offset 5, -8
 1007              		.cfi_offset 14, -4
 1008 0002 87B0     		sub	sp, sp, #28
 1009              	.LCFI9:
 1010              		.cfi_def_cfa_offset 40
 1011 0004 0B9C     		ldr	r4, [sp, #44]
 589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 1012              		.loc 1 589 2 is_stmt 1 view .LVU275
 590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1013              		.loc 1 590 2 view .LVU276
 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 1014              		.loc 1 592 3 view .LVU277
 1015 0006 8CB1     		cbz	r4, .L87
 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 1016              		.loc 1 592 41 discriminator 2 view .LVU278
 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1017              		.loc 1 593 3 discriminator 2 view .LVU279
 1018 0008 0C9D     		ldr	r5, [sp, #48]
 1019 000a C5B1     		cbz	r5, .L88
 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1020              		.loc 1 593 39 discriminator 2 view .LVU280
 1021              	.LBB116:
 600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 1022              		.loc 1 600 4 discriminator 2 view .LVU281
 600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 1023              		.loc 1 600 20 is_stmt 0 discriminator 2 view .LVU282
 1024 000c 4FF4BC75 		mov	r5, #376
 1025 0010 0495     		str	r5, [sp, #16]
 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 1026              		.loc 1 601 4 is_stmt 1 discriminator 2 view .LVU283
 1027 0012 049D     		ldr	r5, [sp, #16]
 1028 0014 B5F5BC7F 		cmp	r5, #376
 1029 0018 1AD0     		beq	.L84
 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 1030              		.loc 1 601 4 view .LVU284
 1031              	.LBB117:
 1032              	.LBI117:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1033              		.loc 2 191 30 view .LVU285
 1034              	.LBB118:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1035              		.loc 2 193 1 view .LVU286
 1036              		.loc 2 195 2 view .LVU287
 1037              		.syntax unified
 1038              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
ARM GAS  /tmp/ccB9thnJ.s 			page 119


 1039 001a 4FF05003 			mov r3, #80												
 1040 001e 83F31188 		msr basepri, r3											
 1041 0022 BFF36F8F 		isb														
 1042 0026 BFF34F8F 		dsb														
 1043              	
 1044              	@ 0 "" 2
 1045              	.LVL73:
 1046              		.thumb
 1047              		.syntax unified
 1048              	.L85:
 1049              		.loc 2 195 2 is_stmt 0 view .LVU288
 1050              	.LBE118:
 1051              	.LBE117:
 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 1052              		.loc 1 601 4 is_stmt 1 discriminator 3 view .LVU289
 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 1053              		.loc 1 601 4 discriminator 3 view .LVU290
 1054 002a FEE7     		b	.L85
 1055              	.LVL74:
 1056              	.L87:
 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 1057              		.loc 1 601 4 is_stmt 0 discriminator 3 view .LVU291
 1058              	.LBE116:
 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 1059              		.loc 1 592 3 is_stmt 1 view .LVU292
 1060              	.LBB119:
 1061              	.LBI119:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1062              		.loc 2 191 30 view .LVU293
 1063              	.LBB120:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1064              		.loc 2 193 1 view .LVU294
 1065              		.loc 2 195 2 view .LVU295
 1066              		.syntax unified
 1067              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1068 002c 4FF05003 			mov r3, #80												
 1069 0030 83F31188 		msr basepri, r3											
 1070 0034 BFF36F8F 		isb														
 1071 0038 BFF34F8F 		dsb														
 1072              	
 1073              	@ 0 "" 2
 1074              	.LVL75:
 1075              		.thumb
 1076              		.syntax unified
 1077              	.L81:
 1078              		.loc 2 195 2 is_stmt 0 view .LVU296
 1079              	.LBE120:
 1080              	.LBE119:
 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 1081              		.loc 1 592 3 is_stmt 1 discriminator 1 view .LVU297
 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 1082              		.loc 1 592 3 discriminator 1 view .LVU298
 1083 003c FEE7     		b	.L81
 1084              	.LVL76:
 1085              	.L88:
 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1086              		.loc 1 593 3 view .LVU299
ARM GAS  /tmp/ccB9thnJ.s 			page 120


 1087              	.LBB121:
 1088              	.LBI121:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1089              		.loc 2 191 30 view .LVU300
 1090              	.LBB122:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1091              		.loc 2 193 1 view .LVU301
 1092              		.loc 2 195 2 view .LVU302
 1093              		.syntax unified
 1094              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1095 003e 4FF05003 			mov r3, #80												
 1096 0042 83F31188 		msr basepri, r3											
 1097 0046 BFF36F8F 		isb														
 1098 004a BFF34F8F 		dsb														
 1099              	
 1100              	@ 0 "" 2
 1101              	.LVL77:
 1102              		.thumb
 1103              		.syntax unified
 1104              	.L83:
 1105              		.loc 2 195 2 is_stmt 0 view .LVU303
 1106              	.LBE122:
 1107              	.LBE121:
 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1108              		.loc 1 593 3 is_stmt 1 discriminator 2 view .LVU304
 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1109              		.loc 1 593 3 discriminator 2 view .LVU305
 1110 004e FEE7     		b	.L83
 1111              	.LVL78:
 1112              	.L84:
 1113              	.LBB123:
 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 1114              		.loc 1 601 44 discriminator 2 view .LVU306
 602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1115              		.loc 1 602 4 discriminator 2 view .LVU307
 1116 0050 049D     		ldr	r5, [sp, #16]
 1117              	.LBE123:
 607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1118              		.loc 1 607 3 discriminator 2 view .LVU308
 611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 1119              		.loc 1 611 4 discriminator 2 view .LVU309
 1120              	.LVL79:
 612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1121              		.loc 1 612 4 discriminator 2 view .LVU310
 612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1122              		.loc 1 612 22 is_stmt 0 discriminator 2 view .LVU311
 1123 0052 0C9D     		ldr	r5, [sp, #48]
 1124 0054 2C63     		str	r4, [r5, #48]
 618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1125              		.loc 1 618 5 is_stmt 1 discriminator 2 view .LVU312
 618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1126              		.loc 1 618 37 is_stmt 0 discriminator 2 view .LVU313
 1127 0056 0224     		movs	r4, #2
 1128 0058 85F87541 		strb	r4, [r5, #373]
 622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 1129              		.loc 1 622 4 is_stmt 1 discriminator 2 view .LVU314
 1130 005c 0024     		movs	r4, #0
ARM GAS  /tmp/ccB9thnJ.s 			page 121


 1131 005e 0394     		str	r4, [sp, #12]
 1132 0060 0295     		str	r5, [sp, #8]
 1133 0062 05AC     		add	r4, sp, #20
 1134 0064 0194     		str	r4, [sp, #4]
 1135 0066 0A9C     		ldr	r4, [sp, #40]
 1136 0068 0094     		str	r4, [sp]
 1137 006a FFF7FEFF 		bl	prvInitialiseNewTask
 1138              	.LVL80:
 623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1139              		.loc 1 623 4 discriminator 2 view .LVU315
 1140 006e 0C98     		ldr	r0, [sp, #48]
 1141 0070 FFF7FEFF 		bl	prvAddNewTaskToReadyList
 1142              	.LVL81:
 630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1143              		.loc 1 630 3 discriminator 2 view .LVU316
 631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1144              		.loc 1 631 2 is_stmt 0 discriminator 2 view .LVU317
 1145 0074 0598     		ldr	r0, [sp, #20]
 1146 0076 07B0     		add	sp, sp, #28
 1147              	.LCFI10:
 1148              		.cfi_def_cfa_offset 12
 1149              		@ sp needed
 1150 0078 30BD     		pop	{r4, r5, pc}
 631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1151              		.loc 1 631 2 discriminator 2 view .LVU318
 1152              		.cfi_endproc
 1153              	.LFE5:
 1155              		.section	.text.xTaskCreate,"ax",%progbits
 1156              		.align	1
 1157              		.global	xTaskCreate
 1158              		.syntax unified
 1159              		.thumb
 1160              		.thumb_func
 1162              	xTaskCreate:
 1163              	.LVL82:
 1164              	.LFB6:
 739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 1165              		.loc 1 739 2 is_stmt 1 view -0
 1166              		.cfi_startproc
 1167              		@ args = 8, pretend = 0, frame = 0
 1168              		@ frame_needed = 0, uses_anonymous_args = 0
 739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 1169              		.loc 1 739 2 is_stmt 0 view .LVU320
 1170 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1171              	.LCFI11:
 1172              		.cfi_def_cfa_offset 28
 1173              		.cfi_offset 4, -28
 1174              		.cfi_offset 5, -24
 1175              		.cfi_offset 6, -20
 1176              		.cfi_offset 7, -16
 1177              		.cfi_offset 8, -12
 1178              		.cfi_offset 9, -8
 1179              		.cfi_offset 14, -4
 1180 0004 85B0     		sub	sp, sp, #20
 1181              	.LCFI12:
 1182              		.cfi_def_cfa_offset 48
 1183 0006 0746     		mov	r7, r0
ARM GAS  /tmp/ccB9thnJ.s 			page 122


 1184 0008 8846     		mov	r8, r1
 1185 000a 1446     		mov	r4, r2
 1186 000c 1E46     		mov	r6, r3
 740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 1187              		.loc 1 740 2 is_stmt 1 view .LVU321
 741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1188              		.loc 1 741 2 view .LVU322
 1189              	.LBB124:
 770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1190              		.loc 1 770 3 view .LVU323
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1191              		.loc 1 773 4 view .LVU324
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1192              		.loc 1 773 14 is_stmt 0 view .LVU325
 1193 000e 9000     		lsls	r0, r2, #2
 1194              	.LVL83:
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1195              		.loc 1 773 14 view .LVU326
 1196 0010 FFF7FEFF 		bl	pvPortMalloc
 1197              	.LVL84:
 775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1198              		.loc 1 775 4 is_stmt 1 view .LVU327
 775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1199              		.loc 1 775 6 is_stmt 0 view .LVU328
 1200 0014 10B3     		cbz	r0, .L92
 1201 0016 8146     		mov	r9, r0
 778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1202              		.loc 1 778 5 is_stmt 1 view .LVU329
 778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1203              		.loc 1 778 28 is_stmt 0 view .LVU330
 1204 0018 4FF4BC70 		mov	r0, #376
 1205              	.LVL85:
 778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1206              		.loc 1 778 28 view .LVU331
 1207 001c FFF7FEFF 		bl	pvPortMalloc
 1208              	.LVL86:
 780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1209              		.loc 1 780 5 is_stmt 1 view .LVU332
 780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1210              		.loc 1 780 7 is_stmt 0 view .LVU333
 1211 0020 0546     		mov	r5, r0
 1212 0022 A8B1     		cbz	r0, .L91
 783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1213              		.loc 1 783 6 is_stmt 1 view .LVU334
 783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1214              		.loc 1 783 24 is_stmt 0 view .LVU335
 1215 0024 C0F83090 		str	r9, [r0, #48]
 783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1216              		.loc 1 783 24 view .LVU336
 1217              	.LBE124:
 799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1218              		.loc 1 799 3 is_stmt 1 view .LVU337
 805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1219              		.loc 1 805 5 view .LVU338
 805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1220              		.loc 1 805 37 is_stmt 0 view .LVU339
 1221 0028 0023     		movs	r3, #0
ARM GAS  /tmp/ccB9thnJ.s 			page 123


 1222 002a 80F87531 		strb	r3, [r0, #373]
 809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 1223              		.loc 1 809 4 is_stmt 1 view .LVU340
 1224 002e 0393     		str	r3, [sp, #12]
 1225 0030 0290     		str	r0, [sp, #8]
 1226 0032 0D9B     		ldr	r3, [sp, #52]
 1227 0034 0193     		str	r3, [sp, #4]
 1228 0036 0C9B     		ldr	r3, [sp, #48]
 1229 0038 0093     		str	r3, [sp]
 1230 003a 3346     		mov	r3, r6
 1231 003c 2246     		mov	r2, r4
 1232 003e 4146     		mov	r1, r8
 1233 0040 3846     		mov	r0, r7
 1234              	.LVL87:
 809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 1235              		.loc 1 809 4 is_stmt 0 view .LVU341
 1236 0042 FFF7FEFF 		bl	prvInitialiseNewTask
 1237              	.LVL88:
 810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 1238              		.loc 1 810 4 is_stmt 1 view .LVU342
 1239 0046 2846     		mov	r0, r5
 1240 0048 FFF7FEFF 		bl	prvAddNewTaskToReadyList
 1241              	.LVL89:
 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1242              		.loc 1 811 4 view .LVU343
 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1243              		.loc 1 811 12 is_stmt 0 view .LVU344
 1244 004c 0120     		movs	r0, #1
 1245 004e 07E0     		b	.L89
 1246              	.LVL90:
 1247              	.L91:
 1248              	.LBB125:
 789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1249              		.loc 1 789 6 is_stmt 1 view .LVU345
 1250 0050 4846     		mov	r0, r9
 1251              	.LVL91:
 789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1252              		.loc 1 789 6 is_stmt 0 view .LVU346
 1253 0052 FFF7FEFF 		bl	vPortFree
 1254              	.LVL92:
 789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1255              		.loc 1 789 6 view .LVU347
 1256              	.LBE125:
 799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1257              		.loc 1 799 3 is_stmt 1 view .LVU348
 815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1258              		.loc 1 815 12 is_stmt 0 view .LVU349
 1259 0056 4FF0FF30 		mov	r0, #-1
 1260 005a 01E0     		b	.L89
 1261              	.LVL93:
 1262              	.L92:
 815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1263              		.loc 1 815 12 view .LVU350
 1264 005c 4FF0FF30 		mov	r0, #-1
 1265              	.LVL94:
 818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1266              		.loc 1 818 3 is_stmt 1 view .LVU351
ARM GAS  /tmp/ccB9thnJ.s 			page 124


 1267              	.L89:
 819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1268              		.loc 1 819 2 is_stmt 0 view .LVU352
 1269 0060 05B0     		add	sp, sp, #20
 1270              	.LCFI13:
 1271              		.cfi_def_cfa_offset 28
 1272              		@ sp needed
 1273 0062 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1274              		.loc 1 819 2 view .LVU353
 1275              		.cfi_endproc
 1276              	.LFE6:
 1278              		.section	.text.vTaskDelete,"ax",%progbits
 1279              		.align	1
 1280              		.global	vTaskDelete
 1281              		.syntax unified
 1282              		.thumb
 1283              		.thumb_func
 1285              	vTaskDelete:
 1286              	.LVL95:
 1287              	.LFB9:
1163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1288              		.loc 1 1163 2 is_stmt 1 view -0
 1289              		.cfi_startproc
 1290              		@ args = 0, pretend = 0, frame = 0
 1291              		@ frame_needed = 0, uses_anonymous_args = 0
1163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1292              		.loc 1 1163 2 is_stmt 0 view .LVU355
 1293 0000 38B5     		push	{r3, r4, r5, lr}
 1294              	.LCFI14:
 1295              		.cfi_def_cfa_offset 16
 1296              		.cfi_offset 3, -16
 1297              		.cfi_offset 4, -12
 1298              		.cfi_offset 5, -8
 1299              		.cfi_offset 14, -4
 1300 0002 0446     		mov	r4, r0
1164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1301              		.loc 1 1164 2 is_stmt 1 view .LVU356
1166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1302              		.loc 1 1166 3 view .LVU357
 1303 0004 FFF7FEFF 		bl	vPortEnterCritical
 1304              	.LVL96:
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1305              		.loc 1 1170 4 view .LVU358
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1306              		.loc 1 1170 12 is_stmt 0 view .LVU359
 1307 0008 002C     		cmp	r4, #0
 1308 000a 34D0     		beq	.L104
 1309              	.LVL97:
 1310              	.L95:
1173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1311              		.loc 1 1173 4 is_stmt 1 discriminator 4 view .LVU360
1173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1312              		.loc 1 1173 8 is_stmt 0 discriminator 4 view .LVU361
 1313 000c 251D     		adds	r5, r4, #4
 1314 000e 2846     		mov	r0, r5
 1315 0010 FFF7FEFF 		bl	uxListRemove
ARM GAS  /tmp/ccB9thnJ.s 			page 125


 1316              	.LVL98:
1173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1317              		.loc 1 1173 6 discriminator 4 view .LVU362
 1318 0014 70B9     		cbnz	r0, .L96
1175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1319              		.loc 1 1175 5 is_stmt 1 view .LVU363
 1320 0016 E26A     		ldr	r2, [r4, #44]
 1321 0018 02EB8203 		add	r3, r2, r2, lsl #2
 1322 001c 9B00     		lsls	r3, r3, #2
 1323 001e 2749     		ldr	r1, .L107
 1324 0020 CB58     		ldr	r3, [r1, r3]
 1325 0022 3BB9     		cbnz	r3, .L96
1175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1326              		.loc 1 1175 5 discriminator 1 view .LVU364
 1327 0024 0123     		movs	r3, #1
 1328 0026 03FA02F2 		lsl	r2, r3, r2
 1329 002a 2549     		ldr	r1, .L107+4
 1330 002c 0B68     		ldr	r3, [r1]
 1331 002e 23EA0203 		bic	r3, r3, r2
 1332 0032 0B60     		str	r3, [r1]
 1333              	.L96:
1179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1334              		.loc 1 1179 29 view .LVU365
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1335              		.loc 1 1183 4 view .LVU366
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1336              		.loc 1 1183 8 is_stmt 0 view .LVU367
 1337 0034 A36A     		ldr	r3, [r4, #40]
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1338              		.loc 1 1183 6 view .LVU368
 1339 0036 1BB1     		cbz	r3, .L97
1185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1340              		.loc 1 1185 5 is_stmt 1 view .LVU369
1185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1341              		.loc 1 1185 14 is_stmt 0 view .LVU370
 1342 0038 04F11800 		add	r0, r4, #24
 1343 003c FFF7FEFF 		bl	uxListRemove
 1344              	.LVL99:
 1345              	.L97:
1189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1346              		.loc 1 1189 29 is_stmt 1 view .LVU371
1196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1347              		.loc 1 1196 4 view .LVU372
1196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1348              		.loc 1 1196 16 is_stmt 0 view .LVU373
 1349 0040 204A     		ldr	r2, .L107+8
 1350 0042 1368     		ldr	r3, [r2]
 1351 0044 0133     		adds	r3, r3, #1
 1352 0046 1360     		str	r3, [r2]
1198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1353              		.loc 1 1198 4 is_stmt 1 view .LVU374
1198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1354              		.loc 1 1198 14 is_stmt 0 view .LVU375
 1355 0048 1F4B     		ldr	r3, .L107+12
 1356 004a 1B68     		ldr	r3, [r3]
1198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1357              		.loc 1 1198 6 view .LVU376
ARM GAS  /tmp/ccB9thnJ.s 			page 126


 1358 004c A342     		cmp	r3, r4
 1359 004e 15D0     		beq	.L105
1225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELETE( pxTCB );
 1360              		.loc 1 1225 5 is_stmt 1 view .LVU377
 1361 0050 1E4A     		ldr	r2, .L107+16
 1362 0052 1368     		ldr	r3, [r2]
 1363 0054 013B     		subs	r3, r3, #1
 1364 0056 1360     		str	r3, [r2]
1226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
 1365              		.loc 1 1226 30 view .LVU378
1227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1366              		.loc 1 1227 5 view .LVU379
 1367 0058 2046     		mov	r0, r4
 1368 005a FFF7FEFF 		bl	prvDeleteTCB
 1369              	.LVL100:
1231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1370              		.loc 1 1231 5 view .LVU380
 1371 005e FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 1372              	.LVL101:
 1373              	.L99:
1234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1374              		.loc 1 1234 3 view .LVU381
 1375 0062 FFF7FEFF 		bl	vPortExitCritical
 1376              	.LVL102:
1238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1377              		.loc 1 1238 3 view .LVU382
1238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1378              		.loc 1 1238 25 is_stmt 0 view .LVU383
 1379 0066 1A4B     		ldr	r3, .L107+20
 1380 0068 1B68     		ldr	r3, [r3]
1238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1381              		.loc 1 1238 5 view .LVU384
 1382 006a 1BB1     		cbz	r3, .L94
1240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1383              		.loc 1 1240 4 is_stmt 1 view .LVU385
1240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1384              		.loc 1 1240 14 is_stmt 0 view .LVU386
 1385 006c 164B     		ldr	r3, .L107+12
 1386 006e 1B68     		ldr	r3, [r3]
1240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1387              		.loc 1 1240 6 view .LVU387
 1388 0070 A342     		cmp	r3, r4
 1389 0072 0CD0     		beq	.L106
 1390              	.L94:
1250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1391              		.loc 1 1250 2 view .LVU388
 1392 0074 38BD     		pop	{r3, r4, r5, pc}
 1393              	.LVL103:
 1394              	.L104:
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1395              		.loc 1 1170 12 discriminator 1 view .LVU389
 1396 0076 144B     		ldr	r3, .L107+12
 1397 0078 1C68     		ldr	r4, [r3]
 1398              	.LVL104:
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1399              		.loc 1 1170 12 discriminator 1 view .LVU390
 1400 007a C7E7     		b	.L95
ARM GAS  /tmp/ccB9thnJ.s 			page 127


 1401              	.LVL105:
 1402              	.L105:
1205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1403              		.loc 1 1205 5 is_stmt 1 view .LVU391
 1404 007c 2946     		mov	r1, r5
 1405 007e 1548     		ldr	r0, .L107+24
 1406 0080 FFF7FEFF 		bl	vListInsertEnd
 1407              	.LVL106:
1210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1408              		.loc 1 1210 5 view .LVU392
 1409 0084 144A     		ldr	r2, .L107+28
 1410 0086 1368     		ldr	r3, [r2]
 1411 0088 0133     		adds	r3, r3, #1
 1412 008a 1360     		str	r3, [r2]
1214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1413              		.loc 1 1214 30 view .LVU393
1221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1414              		.loc 1 1221 54 view .LVU394
 1415 008c E9E7     		b	.L99
 1416              	.L106:
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1417              		.loc 1 1242 5 view .LVU395
 1418 008e 134B     		ldr	r3, .L107+32
 1419 0090 1B68     		ldr	r3, [r3]
 1420 0092 43B1     		cbz	r3, .L101
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1421              		.loc 1 1242 5 view .LVU396
 1422              	.LBB126:
 1423              	.LBI126:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1424              		.loc 2 191 30 view .LVU397
 1425              	.LBB127:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1426              		.loc 2 193 1 view .LVU398
 1427              		.loc 2 195 2 view .LVU399
 1428              		.syntax unified
 1429              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1430 0094 4FF05003 			mov r3, #80												
 1431 0098 83F31188 		msr basepri, r3											
 1432 009c BFF36F8F 		isb														
 1433 00a0 BFF34F8F 		dsb														
 1434              	
 1435              	@ 0 "" 2
 1436              	.LVL107:
 1437              		.thumb
 1438              		.syntax unified
 1439              	.L102:
 1440              		.loc 2 195 2 is_stmt 0 view .LVU400
 1441              	.LBE127:
 1442              	.LBE126:
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1443              		.loc 1 1242 5 is_stmt 1 discriminator 1 view .LVU401
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1444              		.loc 1 1242 5 discriminator 1 view .LVU402
 1445 00a4 FEE7     		b	.L102
 1446              	.L101:
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
ARM GAS  /tmp/ccB9thnJ.s 			page 128


 1447              		.loc 1 1242 46 discriminator 2 view .LVU403
1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1448              		.loc 1 1243 5 discriminator 2 view .LVU404
 1449 00a6 4FF0E023 		mov	r3, #-536813568
 1450 00aa 4FF08052 		mov	r2, #268435456
 1451 00ae C3F8042D 		str	r2, [r3, #3332]
1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1452              		.loc 1 1243 5 discriminator 2 view .LVU405
 1453              		.syntax unified
 1454              	@ 1243 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1455 00b2 BFF34F8F 		dsb
 1456              	@ 0 "" 2
1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1457              		.loc 1 1243 5 discriminator 2 view .LVU406
 1458              	@ 1243 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1459 00b6 BFF36F8F 		isb
 1460              	@ 0 "" 2
1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1461              		.loc 1 1243 27 discriminator 2 view .LVU407
1247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1462              		.loc 1 1247 29 discriminator 2 view .LVU408
1250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1463              		.loc 1 1250 2 is_stmt 0 discriminator 2 view .LVU409
 1464              		.thumb
 1465              		.syntax unified
 1466 00ba DBE7     		b	.L94
 1467              	.L108:
 1468              		.align	2
 1469              	.L107:
 1470 00bc 00000000 		.word	pxReadyTasksLists
 1471 00c0 00000000 		.word	uxTopReadyPriority
 1472 00c4 00000000 		.word	uxTaskNumber
 1473 00c8 00000000 		.word	pxCurrentTCB
 1474 00cc 00000000 		.word	uxCurrentNumberOfTasks
 1475 00d0 00000000 		.word	xSchedulerRunning
 1476 00d4 00000000 		.word	xTasksWaitingTermination
 1477 00d8 00000000 		.word	uxDeletedTasksWaitingCleanUp
 1478 00dc 00000000 		.word	uxSchedulerSuspended
 1479              		.cfi_endproc
 1480              	.LFE9:
 1482              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 1483              		.align	1
 1484              		.global	uxTaskPriorityGet
 1485              		.syntax unified
 1486              		.thumb
 1487              		.thumb_func
 1489              	uxTaskPriorityGet:
 1490              	.LVL108:
 1491              	.LFB11:
1479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
 1492              		.loc 1 1479 2 is_stmt 1 view -0
 1493              		.cfi_startproc
 1494              		@ args = 0, pretend = 0, frame = 0
 1495              		@ frame_needed = 0, uses_anonymous_args = 0
1479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
 1496              		.loc 1 1479 2 is_stmt 0 view .LVU411
 1497 0000 10B5     		push	{r4, lr}
ARM GAS  /tmp/ccB9thnJ.s 			page 129


 1498              	.LCFI15:
 1499              		.cfi_def_cfa_offset 8
 1500              		.cfi_offset 4, -8
 1501              		.cfi_offset 14, -4
 1502 0002 0446     		mov	r4, r0
1480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
 1503              		.loc 1 1480 2 is_stmt 1 view .LVU412
1481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1504              		.loc 1 1481 2 view .LVU413
1483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1505              		.loc 1 1483 3 view .LVU414
 1506 0004 FFF7FEFF 		bl	vPortEnterCritical
 1507              	.LVL109:
1487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1508              		.loc 1 1487 4 view .LVU415
1487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1509              		.loc 1 1487 12 is_stmt 0 view .LVU416
 1510 0008 24B1     		cbz	r4, .L112
 1511              	.LVL110:
 1512              	.L110:
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1513              		.loc 1 1488 4 is_stmt 1 discriminator 4 view .LVU417
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1514              		.loc 1 1488 13 is_stmt 0 discriminator 4 view .LVU418
 1515 000a E46A     		ldr	r4, [r4, #44]
 1516              	.LVL111:
1490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1517              		.loc 1 1490 3 is_stmt 1 discriminator 4 view .LVU419
 1518 000c FFF7FEFF 		bl	vPortExitCritical
 1519              	.LVL112:
1492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1520              		.loc 1 1492 3 discriminator 4 view .LVU420
1493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1521              		.loc 1 1493 2 is_stmt 0 discriminator 4 view .LVU421
 1522 0010 2046     		mov	r0, r4
 1523 0012 10BD     		pop	{r4, pc}
 1524              	.LVL113:
 1525              	.L112:
1487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1526              		.loc 1 1487 12 discriminator 1 view .LVU422
 1527 0014 014B     		ldr	r3, .L113
 1528 0016 1C68     		ldr	r4, [r3]
 1529              	.LVL114:
1487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1530              		.loc 1 1487 12 discriminator 1 view .LVU423
 1531 0018 F7E7     		b	.L110
 1532              	.L114:
 1533 001a 00BF     		.align	2
 1534              	.L113:
 1535 001c 00000000 		.word	pxCurrentTCB
 1536              		.cfi_endproc
 1537              	.LFE11:
 1539              		.section	.text.uxTaskPriorityGetFromISR,"ax",%progbits
 1540              		.align	1
 1541              		.global	uxTaskPriorityGetFromISR
 1542              		.syntax unified
 1543              		.thumb
ARM GAS  /tmp/ccB9thnJ.s 			page 130


 1544              		.thumb_func
 1546              	uxTaskPriorityGetFromISR:
 1547              	.LVL115:
 1548              	.LFB12:
1501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
 1549              		.loc 1 1501 2 is_stmt 1 view -0
 1550              		.cfi_startproc
 1551              		@ args = 0, pretend = 0, frame = 0
 1552              		@ frame_needed = 0, uses_anonymous_args = 0
1501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
 1553              		.loc 1 1501 2 is_stmt 0 view .LVU425
 1554 0000 10B5     		push	{r4, lr}
 1555              	.LCFI16:
 1556              		.cfi_def_cfa_offset 8
 1557              		.cfi_offset 4, -8
 1558              		.cfi_offset 14, -4
 1559 0002 0446     		mov	r4, r0
1502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
 1560              		.loc 1 1502 2 is_stmt 1 view .LVU426
1503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1561              		.loc 1 1503 2 view .LVU427
1521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1562              		.loc 1 1521 3 view .LVU428
 1563 0004 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1564              	.LVL116:
1523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1565              		.loc 1 1523 3 view .LVU429
 1566              	.LBB128:
 1567              	.LBI128:
 196:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 197:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %0, %1												\n"	\
 198:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 204:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 206:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 1568              		.loc 2 207 34 view .LVU430
 1569              	.LBB129:
 208:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 1570              		.loc 2 209 1 view .LVU431
 210:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1571              		.loc 2 211 2 view .LVU432
 1572              		.syntax unified
 1573              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1574 0008 EFF31183 			mrs r3, basepri											
 1575 000c 4FF05002 		mov r2, #80												
 1576 0010 82F31188 		msr basepri, r2											
 1577 0014 BFF36F8F 		isb														
 1578 0018 BFF34F8F 		dsb														
 1579              	
ARM GAS  /tmp/ccB9thnJ.s 			page 131


 1580              	@ 0 "" 2
 1581              	.LVL117:
 212:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %1, %2												\n"	\
 215:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 217:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 218:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 220:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 221:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 222:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	warnings. */
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return ulOriginalBASEPRI;
 1582              		.loc 2 223 2 view .LVU433
 1583              		.loc 2 223 2 is_stmt 0 view .LVU434
 1584              		.thumb
 1585              		.syntax unified
 1586              	.LBE129:
 1587              	.LBE128:
1527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1588              		.loc 1 1527 4 is_stmt 1 view .LVU435
1527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1589              		.loc 1 1527 12 is_stmt 0 view .LVU436
 1590 001c 1CB1     		cbz	r4, .L118
 1591              	.LVL118:
 1592              	.L116:
1528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1593              		.loc 1 1528 4 is_stmt 1 discriminator 4 view .LVU437
1528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1594              		.loc 1 1528 13 is_stmt 0 discriminator 4 view .LVU438
 1595 001e E06A     		ldr	r0, [r4, #44]
 1596              	.LVL119:
1530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1597              		.loc 1 1530 3 is_stmt 1 discriminator 4 view .LVU439
 1598              	.LBB130:
 1599              	.LBI130:
 224:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 225:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 226:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 1600              		.loc 2 227 30 discriminator 4 view .LVU440
 1601              	.LBB131:
 228:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1602              		.loc 2 229 2 discriminator 4 view .LVU441
 1603              		.syntax unified
 1604              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1605 0020 83F31188 			msr basepri, r3	
 1606              	@ 0 "" 2
 1607              		.thumb
 1608              		.syntax unified
 1609              	.LBE131:
 1610              	.LBE130:
1532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1611              		.loc 1 1532 3 discriminator 4 view .LVU442
1533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccB9thnJ.s 			page 132


 1612              		.loc 1 1533 2 is_stmt 0 discriminator 4 view .LVU443
 1613 0024 10BD     		pop	{r4, pc}
 1614              	.LVL120:
 1615              	.L118:
1527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1616              		.loc 1 1527 12 discriminator 1 view .LVU444
 1617 0026 014A     		ldr	r2, .L119
 1618 0028 1468     		ldr	r4, [r2]
 1619              	.LVL121:
1527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1620              		.loc 1 1527 12 discriminator 1 view .LVU445
 1621 002a F8E7     		b	.L116
 1622              	.L120:
 1623              		.align	2
 1624              	.L119:
 1625 002c 00000000 		.word	pxCurrentTCB
 1626              		.cfi_endproc
 1627              	.LFE12:
 1629              		.section	.text.vTaskPrioritySet,"ax",%progbits
 1630              		.align	1
 1631              		.global	vTaskPrioritySet
 1632              		.syntax unified
 1633              		.thumb
 1634              		.thumb_func
 1636              	vTaskPrioritySet:
 1637              	.LVL122:
 1638              	.LFB13:
1541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1639              		.loc 1 1541 2 is_stmt 1 view -0
 1640              		.cfi_startproc
 1641              		@ args = 0, pretend = 0, frame = 0
 1642              		@ frame_needed = 0, uses_anonymous_args = 0
1541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1643              		.loc 1 1541 2 is_stmt 0 view .LVU447
 1644 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1645              	.LCFI17:
 1646              		.cfi_def_cfa_offset 24
 1647              		.cfi_offset 3, -24
 1648              		.cfi_offset 4, -20
 1649              		.cfi_offset 5, -16
 1650              		.cfi_offset 6, -12
 1651              		.cfi_offset 7, -8
 1652              		.cfi_offset 14, -4
1542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
 1653              		.loc 1 1542 2 is_stmt 1 view .LVU448
1543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1654              		.loc 1 1543 2 view .LVU449
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1655              		.loc 1 1544 2 view .LVU450
 1656              	.LVL123:
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1657              		.loc 1 1546 3 view .LVU451
 1658 0002 0629     		cmp	r1, #6
 1659 0004 08D9     		bls	.L122
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1660              		.loc 1 1546 3 view .LVU452
 1661              	.LBB132:
ARM GAS  /tmp/ccB9thnJ.s 			page 133


 1662              	.LBI132:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1663              		.loc 2 191 30 view .LVU453
 1664              	.LBB133:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1665              		.loc 2 193 1 view .LVU454
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1666              		.loc 2 195 2 view .LVU455
 1667              		.syntax unified
 1668              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1669 0006 4FF05003 			mov r3, #80												
 1670 000a 83F31188 		msr basepri, r3											
 1671 000e BFF36F8F 		isb														
 1672 0012 BFF34F8F 		dsb														
 1673              	
 1674              	@ 0 "" 2
 1675              	.LVL124:
 1676              		.thumb
 1677              		.syntax unified
 1678              	.L123:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1679              		.loc 2 195 2 is_stmt 0 view .LVU456
 1680              	.LBE133:
 1681              	.LBE132:
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1682              		.loc 1 1546 3 is_stmt 1 discriminator 1 view .LVU457
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1683              		.loc 1 1546 3 discriminator 1 view .LVU458
 1684 0016 FEE7     		b	.L123
 1685              	.L122:
 1686 0018 0546     		mov	r5, r0
 1687 001a 0C46     		mov	r4, r1
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1688              		.loc 1 1546 59 view .LVU459
1549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1689              		.loc 1 1549 3 view .LVU460
 1690              	.LVL125:
1555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1691              		.loc 1 1555 28 view .LVU461
1558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1692              		.loc 1 1558 3 view .LVU462
 1693 001c FFF7FEFF 		bl	vPortEnterCritical
 1694              	.LVL126:
1562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1695              		.loc 1 1562 4 view .LVU463
1562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1696              		.loc 1 1562 12 is_stmt 0 view .LVU464
 1697 0020 75B1     		cbz	r5, .L136
 1698              	.LVL127:
 1699              	.L124:
1564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1700              		.loc 1 1564 50 is_stmt 1 discriminator 4 view .LVU465
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1701              		.loc 1 1568 5 discriminator 4 view .LVU466
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1702              		.loc 1 1568 27 is_stmt 0 discriminator 4 view .LVU467
 1703 0022 6B6C     		ldr	r3, [r5, #68]
ARM GAS  /tmp/ccB9thnJ.s 			page 134


 1704              	.LVL128:
1576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1705              		.loc 1 1576 4 is_stmt 1 discriminator 4 view .LVU468
1576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1706              		.loc 1 1576 6 is_stmt 0 discriminator 4 view .LVU469
 1707 0024 9C42     		cmp	r4, r3
 1708 0026 30D0     		beq	.L125
1580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1709              		.loc 1 1580 5 is_stmt 1 view .LVU470
1580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1710              		.loc 1 1580 7 is_stmt 0 view .LVU471
 1711 0028 0DD9     		bls	.L126
1582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1712              		.loc 1 1582 6 is_stmt 1 view .LVU472
1582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1713              		.loc 1 1582 16 is_stmt 0 view .LVU473
 1714 002a 2B4A     		ldr	r2, .L139
 1715 002c 1268     		ldr	r2, [r2]
1582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1716              		.loc 1 1582 8 view .LVU474
 1717 002e AA42     		cmp	r2, r5
 1718 0030 2ED0     		beq	.L132
1587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1719              		.loc 1 1587 7 is_stmt 1 view .LVU475
1587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1720              		.loc 1 1587 40 is_stmt 0 view .LVU476
 1721 0032 294A     		ldr	r2, .L139
 1722 0034 1268     		ldr	r2, [r2]
 1723 0036 D26A     		ldr	r2, [r2, #44]
1587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1724              		.loc 1 1587 9 view .LVU477
 1725 0038 A242     		cmp	r2, r4
 1726 003a 2BD9     		bls	.L133
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1727              		.loc 1 1544 13 view .LVU478
 1728 003c 0027     		movs	r7, #0
 1729 003e 07E0     		b	.L127
 1730              	.LVL129:
 1731              	.L136:
1562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1732              		.loc 1 1562 12 discriminator 1 view .LVU479
 1733 0040 254B     		ldr	r3, .L139
 1734 0042 1D68     		ldr	r5, [r3]
 1735              	.LVL130:
1562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1736              		.loc 1 1562 12 discriminator 1 view .LVU480
 1737 0044 EDE7     		b	.L124
 1738              	.LVL131:
 1739              	.L126:
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1740              		.loc 1 1603 10 is_stmt 1 view .LVU481
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1741              		.loc 1 1603 20 is_stmt 0 view .LVU482
 1742 0046 244A     		ldr	r2, .L139
 1743 0048 1268     		ldr	r2, [r2]
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1744              		.loc 1 1603 12 view .LVU483
ARM GAS  /tmp/ccB9thnJ.s 			page 135


 1745 004a AA42     		cmp	r2, r5
 1746 004c 24D0     		beq	.L134
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1747              		.loc 1 1544 13 view .LVU484
 1748 004e 0027     		movs	r7, #0
 1749              	.L127:
 1750              	.LVL132:
1615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1751              		.loc 1 1615 5 is_stmt 1 view .LVU485
1620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1752              		.loc 1 1620 5 view .LVU486
1620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1753              		.loc 1 1620 27 is_stmt 0 view .LVU487
 1754 0050 EE6A     		ldr	r6, [r5, #44]
 1755              	.LVL133:
1626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1756              		.loc 1 1626 6 is_stmt 1 view .LVU488
1626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1757              		.loc 1 1626 8 is_stmt 0 view .LVU489
 1758 0052 B342     		cmp	r3, r6
 1759 0054 22D0     		beq	.L137
 1760              	.L128:
1632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1761              		.loc 1 1632 31 is_stmt 1 view .LVU490
1636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1762              		.loc 1 1636 6 view .LVU491
1636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1763              		.loc 1 1636 28 is_stmt 0 view .LVU492
 1764 0056 6C64     		str	r4, [r5, #68]
1646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1765              		.loc 1 1646 5 is_stmt 1 view .LVU493
1646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1766              		.loc 1 1646 11 is_stmt 0 view .LVU494
 1767 0058 AB69     		ldr	r3, [r5, #24]
 1768              	.LVL134:
1646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1769              		.loc 1 1646 7 view .LVU495
 1770 005a 002B     		cmp	r3, #0
 1771 005c 02DB     		blt	.L129
1648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1772              		.loc 1 1648 6 is_stmt 1 view .LVU496
 1773 005e C4F10704 		rsb	r4, r4, #7
 1774              	.LVL135:
1648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1775              		.loc 1 1648 6 is_stmt 0 view .LVU497
 1776 0062 AC61     		str	r4, [r5, #24]
 1777              	.L129:
1652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1778              		.loc 1 1652 30 is_stmt 1 view .LVU498
1659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1779              		.loc 1 1659 5 view .LVU499
1659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1780              		.loc 1 1659 9 is_stmt 0 view .LVU500
 1781 0064 6969     		ldr	r1, [r5, #20]
 1782 0066 06EB8602 		add	r2, r6, r6, lsl #2
 1783 006a 1C4B     		ldr	r3, .L139+4
 1784 006c 03EB8203 		add	r3, r3, r2, lsl #2
ARM GAS  /tmp/ccB9thnJ.s 			page 136


1659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1785              		.loc 1 1659 7 view .LVU501
 1786 0070 9942     		cmp	r1, r3
 1787 0072 15D0     		beq	.L138
 1788              	.LVL136:
 1789              	.L130:
1679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1790              		.loc 1 1679 30 is_stmt 1 view .LVU502
1682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1791              		.loc 1 1682 5 view .LVU503
1682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1792              		.loc 1 1682 7 is_stmt 0 view .LVU504
 1793 0074 4FB1     		cbz	r7, .L125
1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1794              		.loc 1 1684 6 is_stmt 1 view .LVU505
 1795 0076 4FF0E023 		mov	r3, #-536813568
 1796 007a 4FF08052 		mov	r2, #268435456
 1797 007e C3F8042D 		str	r2, [r3, #3332]
1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1798              		.loc 1 1684 6 view .LVU506
 1799              		.syntax unified
 1800              	@ 1684 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1801 0082 BFF34F8F 		dsb
 1802              	@ 0 "" 2
1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1803              		.loc 1 1684 6 view .LVU507
 1804              	@ 1684 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1805 0086 BFF36F8F 		isb
 1806              	@ 0 "" 2
1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1807              		.loc 1 1684 37 view .LVU508
 1808              	.LVL137:
 1809              		.thumb
 1810              		.syntax unified
 1811              	.L125:
1688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1812              		.loc 1 1688 30 view .LVU509
1693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1813              		.loc 1 1693 5 view .LVU510
1696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1814              		.loc 1 1696 3 view .LVU511
 1815 008a FFF7FEFF 		bl	vPortExitCritical
 1816              	.LVL138:
1697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1817              		.loc 1 1697 2 is_stmt 0 view .LVU512
 1818 008e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1819              	.LVL139:
 1820              	.L132:
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1821              		.loc 1 1544 13 view .LVU513
 1822 0090 0027     		movs	r7, #0
 1823 0092 DDE7     		b	.L127
 1824              	.L133:
1589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 1825              		.loc 1 1589 23 view .LVU514
 1826 0094 0127     		movs	r7, #1
 1827 0096 DBE7     		b	.L127
ARM GAS  /tmp/ccB9thnJ.s 			page 137


 1828              	.L134:
1608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1829              		.loc 1 1608 21 view .LVU515
 1830 0098 0127     		movs	r7, #1
 1831 009a D9E7     		b	.L127
 1832              	.LVL140:
 1833              	.L137:
1628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1834              		.loc 1 1628 7 is_stmt 1 view .LVU516
1628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1835              		.loc 1 1628 25 is_stmt 0 view .LVU517
 1836 009c EC62     		str	r4, [r5, #44]
 1837 009e DAE7     		b	.L128
 1838              	.LVL141:
 1839              	.L138:
1664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1840              		.loc 1 1664 6 is_stmt 1 view .LVU518
1664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1841              		.loc 1 1664 10 is_stmt 0 view .LVU519
 1842 00a0 2C1D     		adds	r4, r5, #4
 1843 00a2 2046     		mov	r0, r4
 1844 00a4 FFF7FEFF 		bl	uxListRemove
 1845              	.LVL142:
1664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1846              		.loc 1 1664 8 view .LVU520
 1847 00a8 30B9     		cbnz	r0, .L131
1669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1848              		.loc 1 1669 7 is_stmt 1 view .LVU521
 1849 00aa 0122     		movs	r2, #1
 1850 00ac B240     		lsls	r2, r2, r6
 1851 00ae 0C49     		ldr	r1, .L139+8
 1852 00b0 0B68     		ldr	r3, [r1]
 1853 00b2 23EA0203 		bic	r3, r3, r2
 1854 00b6 0B60     		str	r3, [r1]
 1855              	.L131:
1673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1856              		.loc 1 1673 31 view .LVU522
1675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1857              		.loc 1 1675 6 view .LVU523
1675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1858              		.loc 1 1675 6 view .LVU524
 1859 00b8 E86A     		ldr	r0, [r5, #44]
 1860 00ba 0123     		movs	r3, #1
 1861 00bc 8340     		lsls	r3, r3, r0
 1862 00be 084A     		ldr	r2, .L139+8
 1863 00c0 1168     		ldr	r1, [r2]
 1864 00c2 0B43     		orrs	r3, r3, r1
 1865 00c4 1360     		str	r3, [r2]
1675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1866              		.loc 1 1675 6 view .LVU525
 1867 00c6 00EB8000 		add	r0, r0, r0, lsl #2
 1868 00ca 2146     		mov	r1, r4
 1869 00cc 034B     		ldr	r3, .L139+4
 1870 00ce 03EB8000 		add	r0, r3, r0, lsl #2
 1871 00d2 FFF7FEFF 		bl	vListInsertEnd
 1872              	.LVL143:
1675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/ccB9thnJ.s 			page 138


 1873              		.loc 1 1675 36 view .LVU526
 1874 00d6 CDE7     		b	.L130
 1875              	.L140:
 1876              		.align	2
 1877              	.L139:
 1878 00d8 00000000 		.word	pxCurrentTCB
 1879 00dc 00000000 		.word	pxReadyTasksLists
 1880 00e0 00000000 		.word	uxTopReadyPriority
 1881              		.cfi_endproc
 1882              	.LFE13:
 1884              		.section	.text.vTaskResume,"ax",%progbits
 1885              		.align	1
 1886              		.global	vTaskResume
 1887              		.syntax unified
 1888              		.thumb
 1889              		.thumb_func
 1891              	vTaskResume:
 1892              	.LVL144:
 1893              	.LFB16:
1852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 1894              		.loc 1 1852 2 view -0
 1895              		.cfi_startproc
 1896              		@ args = 0, pretend = 0, frame = 0
 1897              		@ frame_needed = 0, uses_anonymous_args = 0
1852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 1898              		.loc 1 1852 2 is_stmt 0 view .LVU528
 1899 0000 38B5     		push	{r3, r4, r5, lr}
 1900              	.LCFI18:
 1901              		.cfi_def_cfa_offset 16
 1902              		.cfi_offset 3, -16
 1903              		.cfi_offset 4, -12
 1904              		.cfi_offset 5, -8
 1905              		.cfi_offset 14, -4
1853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1906              		.loc 1 1853 2 is_stmt 1 view .LVU529
 1907              	.LVL145:
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1908              		.loc 1 1856 3 view .LVU530
 1909 0002 68B1     		cbz	r0, .L147
 1910 0004 0446     		mov	r4, r0
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1911              		.loc 1 1856 32 discriminator 2 view .LVU531
1860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1912              		.loc 1 1860 3 discriminator 2 view .LVU532
1860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1913              		.loc 1 1860 15 is_stmt 0 discriminator 2 view .LVU533
 1914 0006 1D4B     		ldr	r3, .L149
 1915 0008 1B68     		ldr	r3, [r3]
1860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1916              		.loc 1 1860 5 discriminator 2 view .LVU534
 1917 000a 8342     		cmp	r3, r0
 1918 000c 07D0     		beq	.L141
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1919              		.loc 1 1862 4 is_stmt 1 view .LVU535
 1920 000e FFF7FEFF 		bl	vPortEnterCritical
 1921              	.LVL146:
1864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/ccB9thnJ.s 			page 139


 1922              		.loc 1 1864 5 view .LVU536
1864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1923              		.loc 1 1864 9 is_stmt 0 view .LVU537
 1924 0012 2046     		mov	r0, r4
 1925 0014 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1926              	.LVL147:
1864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1927              		.loc 1 1864 7 view .LVU538
 1928 0018 58B9     		cbnz	r0, .L148
 1929              	.L145:
1888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1930              		.loc 1 1888 30 is_stmt 1 view .LVU539
1891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1931              		.loc 1 1891 4 view .LVU540
 1932 001a FFF7FEFF 		bl	vPortExitCritical
 1933              	.LVL148:
1895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1934              		.loc 1 1895 28 view .LVU541
 1935              	.L141:
1897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1936              		.loc 1 1897 2 is_stmt 0 view .LVU542
 1937 001e 38BD     		pop	{r3, r4, r5, pc}
 1938              	.LVL149:
 1939              	.L147:
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1940              		.loc 1 1856 3 is_stmt 1 view .LVU543
 1941              	.LBB134:
 1942              	.LBI134:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1943              		.loc 2 191 30 view .LVU544
 1944              	.LBB135:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1945              		.loc 2 193 1 view .LVU545
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1946              		.loc 2 195 2 view .LVU546
 1947              		.syntax unified
 1948              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1949 0020 4FF05003 			mov r3, #80												
 1950 0024 83F31188 		msr basepri, r3											
 1951 0028 BFF36F8F 		isb														
 1952 002c BFF34F8F 		dsb														
 1953              	
 1954              	@ 0 "" 2
 1955              	.LVL150:
 1956              		.thumb
 1957              		.syntax unified
 1958              	.L143:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1959              		.loc 2 195 2 is_stmt 0 view .LVU547
 1960              	.LBE135:
 1961              	.LBE134:
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1962              		.loc 1 1856 3 is_stmt 1 discriminator 1 view .LVU548
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1963              		.loc 1 1856 3 discriminator 1 view .LVU549
 1964 0030 FEE7     		b	.L143
 1965              	.LVL151:
ARM GAS  /tmp/ccB9thnJ.s 			page 140


 1966              	.L148:
1866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1967              		.loc 1 1866 31 view .LVU550
1870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1968              		.loc 1 1870 6 view .LVU551
1870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1969              		.loc 1 1870 15 is_stmt 0 view .LVU552
 1970 0032 251D     		adds	r5, r4, #4
 1971 0034 2846     		mov	r0, r5
 1972 0036 FFF7FEFF 		bl	uxListRemove
 1973              	.LVL152:
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1974              		.loc 1 1871 6 is_stmt 1 view .LVU553
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1975              		.loc 1 1871 6 view .LVU554
 1976 003a E06A     		ldr	r0, [r4, #44]
 1977 003c 0123     		movs	r3, #1
 1978 003e 8340     		lsls	r3, r3, r0
 1979 0040 0F4A     		ldr	r2, .L149+4
 1980 0042 1168     		ldr	r1, [r2]
 1981 0044 0B43     		orrs	r3, r3, r1
 1982 0046 1360     		str	r3, [r2]
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1983              		.loc 1 1871 6 view .LVU555
 1984 0048 00EB8000 		add	r0, r0, r0, lsl #2
 1985 004c 2946     		mov	r1, r5
 1986 004e 0D4B     		ldr	r3, .L149+8
 1987 0050 03EB8000 		add	r0, r3, r0, lsl #2
 1988 0054 FFF7FEFF 		bl	vListInsertEnd
 1989              	.LVL153:
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1990              		.loc 1 1871 36 view .LVU556
1874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1991              		.loc 1 1874 6 view .LVU557
1874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1992              		.loc 1 1874 15 is_stmt 0 view .LVU558
 1993 0058 E26A     		ldr	r2, [r4, #44]
1874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1994              		.loc 1 1874 43 view .LVU559
 1995 005a 084B     		ldr	r3, .L149
 1996 005c 1B68     		ldr	r3, [r3]
 1997 005e DB6A     		ldr	r3, [r3, #44]
1874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1998              		.loc 1 1874 8 view .LVU560
 1999 0060 9A42     		cmp	r2, r3
 2000 0062 DAD3     		bcc	.L145
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2001              		.loc 1 1879 7 is_stmt 1 view .LVU561
 2002 0064 4FF0E023 		mov	r3, #-536813568
 2003 0068 4FF08052 		mov	r2, #268435456
 2004 006c C3F8042D 		str	r2, [r3, #3332]
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2005              		.loc 1 1879 7 view .LVU562
 2006              		.syntax unified
 2007              	@ 1879 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2008 0070 BFF34F8F 		dsb
 2009              	@ 0 "" 2
ARM GAS  /tmp/ccB9thnJ.s 			page 141


1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2010              		.loc 1 1879 7 view .LVU563
 2011              	@ 1879 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2012 0074 BFF36F8F 		isb
 2013              	@ 0 "" 2
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2014              		.loc 1 1879 38 view .LVU564
 2015              		.thumb
 2016              		.syntax unified
 2017 0078 CFE7     		b	.L145
 2018              	.L150:
 2019 007a 00BF     		.align	2
 2020              	.L149:
 2021 007c 00000000 		.word	pxCurrentTCB
 2022 0080 00000000 		.word	uxTopReadyPriority
 2023 0084 00000000 		.word	pxReadyTasksLists
 2024              		.cfi_endproc
 2025              	.LFE16:
 2027              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 2028              		.align	1
 2029              		.global	xTaskResumeFromISR
 2030              		.syntax unified
 2031              		.thumb
 2032              		.thumb_func
 2034              	xTaskResumeFromISR:
 2035              	.LVL154:
 2036              	.LFB17:
1906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 2037              		.loc 1 1906 2 view -0
 2038              		.cfi_startproc
 2039              		@ args = 0, pretend = 0, frame = 0
 2040              		@ frame_needed = 0, uses_anonymous_args = 0
1906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 2041              		.loc 1 1906 2 is_stmt 0 view .LVU566
 2042 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2043              	.LCFI19:
 2044              		.cfi_def_cfa_offset 24
 2045              		.cfi_offset 3, -24
 2046              		.cfi_offset 4, -20
 2047              		.cfi_offset 5, -16
 2048              		.cfi_offset 6, -12
 2049              		.cfi_offset 7, -8
 2050              		.cfi_offset 14, -4
1907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 2051              		.loc 1 1907 2 is_stmt 1 view .LVU567
 2052              	.LVL155:
1908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 2053              		.loc 1 1908 2 view .LVU568
1909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2054              		.loc 1 1909 2 view .LVU569
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2055              		.loc 1 1911 3 view .LVU570
 2056 0002 90B3     		cbz	r0, .L159
 2057 0004 0546     		mov	r5, r0
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2058              		.loc 1 1911 32 discriminator 2 view .LVU571
1929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccB9thnJ.s 			page 142


 2059              		.loc 1 1929 3 discriminator 2 view .LVU572
 2060 0006 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2061              	.LVL156:
1931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2062              		.loc 1 1931 3 discriminator 2 view .LVU573
 2063              	.LBB136:
 2064              	.LBI136:
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2065              		.loc 2 207 34 discriminator 2 view .LVU574
 2066              	.LBB137:
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2067              		.loc 2 209 1 discriminator 2 view .LVU575
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2068              		.loc 2 211 2 discriminator 2 view .LVU576
 2069              		.syntax unified
 2070              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2071 000a EFF31184 			mrs r4, basepri											
 2072 000e 4FF05003 		mov r3, #80												
 2073 0012 83F31188 		msr basepri, r3											
 2074 0016 BFF36F8F 		isb														
 2075 001a BFF34F8F 		dsb														
 2076              	
 2077              	@ 0 "" 2
 2078              	.LVL157:
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 2079              		.loc 2 223 2 discriminator 2 view .LVU577
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 2080              		.loc 2 223 2 is_stmt 0 discriminator 2 view .LVU578
 2081              		.thumb
 2082              		.syntax unified
 2083              	.LBE137:
 2084              	.LBE136:
1933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2085              		.loc 1 1933 4 is_stmt 1 discriminator 2 view .LVU579
1933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2086              		.loc 1 1933 8 is_stmt 0 discriminator 2 view .LVU580
 2087 001e 2846     		mov	r0, r5
 2088 0020 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 2089              	.LVL158:
1933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2090              		.loc 1 1933 6 discriminator 2 view .LVU581
 2091 0024 0646     		mov	r6, r0
 2092 0026 E0B1     		cbz	r0, .L154
1935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2093              		.loc 1 1935 39 is_stmt 1 view .LVU582
1938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2094              		.loc 1 1938 5 view .LVU583
1938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2095              		.loc 1 1938 30 is_stmt 0 view .LVU584
 2096 0028 194B     		ldr	r3, .L160
 2097 002a 1B68     		ldr	r3, [r3]
1938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2098              		.loc 1 1938 7 view .LVU585
 2099 002c 43BB     		cbnz	r3, .L155
1942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2100              		.loc 1 1942 6 is_stmt 1 view .LVU586
1942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
ARM GAS  /tmp/ccB9thnJ.s 			page 143


 2101              		.loc 1 1942 15 is_stmt 0 view .LVU587
 2102 002e EA6A     		ldr	r2, [r5, #44]
1942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2103              		.loc 1 1942 43 view .LVU588
 2104 0030 184B     		ldr	r3, .L160+4
 2105 0032 1B68     		ldr	r3, [r3]
 2106 0034 DB6A     		ldr	r3, [r3, #44]
1942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2107              		.loc 1 1942 8 view .LVU589
 2108 0036 9A42     		cmp	r2, r3
 2109 0038 20D2     		bcs	.L157
1907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 2110              		.loc 1 1907 13 view .LVU590
 2111 003a 0026     		movs	r6, #0
 2112              	.L156:
 2113              	.LVL159:
1948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2114              		.loc 1 1948 31 is_stmt 1 view .LVU591
1951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2115              		.loc 1 1951 6 view .LVU592
1951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2116              		.loc 1 1951 15 is_stmt 0 view .LVU593
 2117 003c 2F1D     		adds	r7, r5, #4
 2118 003e 3846     		mov	r0, r7
 2119 0040 FFF7FEFF 		bl	uxListRemove
 2120              	.LVL160:
1952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2121              		.loc 1 1952 6 is_stmt 1 view .LVU594
1952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2122              		.loc 1 1952 6 view .LVU595
 2123 0044 E86A     		ldr	r0, [r5, #44]
 2124 0046 0123     		movs	r3, #1
 2125 0048 8340     		lsls	r3, r3, r0
 2126 004a 134A     		ldr	r2, .L160+8
 2127 004c 1168     		ldr	r1, [r2]
 2128 004e 0B43     		orrs	r3, r3, r1
 2129 0050 1360     		str	r3, [r2]
1952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2130              		.loc 1 1952 6 view .LVU596
 2131 0052 00EB8000 		add	r0, r0, r0, lsl #2
 2132 0056 3946     		mov	r1, r7
 2133 0058 104B     		ldr	r3, .L160+12
 2134 005a 03EB8000 		add	r0, r3, r0, lsl #2
 2135 005e FFF7FEFF 		bl	vListInsertEnd
 2136              	.LVL161:
1952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2137              		.loc 1 1952 36 view .LVU597
 2138              	.L154:
1964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2139              		.loc 1 1964 29 view .LVU598
1967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2140              		.loc 1 1967 3 view .LVU599
 2141              	.LBB138:
 2142              	.LBI138:
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2143              		.loc 2 227 30 view .LVU600
 2144              	.LBB139:
ARM GAS  /tmp/ccB9thnJ.s 			page 144


 2145              		.loc 2 229 2 view .LVU601
 2146              		.syntax unified
 2147              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2148 0062 84F31188 			msr basepri, r4	
 2149              	@ 0 "" 2
 2150              		.thumb
 2151              		.syntax unified
 2152              	.LBE139:
 2153              	.LBE138:
1969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2154              		.loc 1 1969 3 view .LVU602
1970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2155              		.loc 1 1970 2 is_stmt 0 view .LVU603
 2156 0066 3046     		mov	r0, r6
 2157 0068 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2158              	.LVL162:
 2159              	.L159:
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2160              		.loc 1 1911 3 is_stmt 1 view .LVU604
 2161              	.LBB140:
 2162              	.LBI140:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2163              		.loc 2 191 30 view .LVU605
 2164              	.LBB141:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2165              		.loc 2 193 1 view .LVU606
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2166              		.loc 2 195 2 view .LVU607
 2167              		.syntax unified
 2168              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2169 006a 4FF05003 			mov r3, #80												
 2170 006e 83F31188 		msr basepri, r3											
 2171 0072 BFF36F8F 		isb														
 2172 0076 BFF34F8F 		dsb														
 2173              	
 2174              	@ 0 "" 2
 2175              	.LVL163:
 2176              		.thumb
 2177              		.syntax unified
 2178              	.L153:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2179              		.loc 2 195 2 is_stmt 0 view .LVU608
 2180              	.LBE141:
 2181              	.LBE140:
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2182              		.loc 1 1911 3 is_stmt 1 discriminator 1 view .LVU609
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2183              		.loc 1 1911 3 discriminator 1 view .LVU610
 2184 007a FEE7     		b	.L153
 2185              	.LVL164:
 2186              	.L157:
1944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2187              		.loc 1 1944 22 is_stmt 0 view .LVU611
 2188 007c 0126     		movs	r6, #1
 2189 007e DDE7     		b	.L156
 2190              	.L155:
1959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/ccB9thnJ.s 			page 145


 2191              		.loc 1 1959 6 is_stmt 1 view .LVU612
 2192 0080 05F11801 		add	r1, r5, #24
 2193 0084 0648     		ldr	r0, .L160+16
 2194 0086 FFF7FEFF 		bl	vListInsertEnd
 2195              	.LVL165:
1907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 2196              		.loc 1 1907 13 is_stmt 0 view .LVU613
 2197 008a 0026     		movs	r6, #0
 2198 008c E9E7     		b	.L154
 2199              	.L161:
 2200 008e 00BF     		.align	2
 2201              	.L160:
 2202 0090 00000000 		.word	uxSchedulerSuspended
 2203 0094 00000000 		.word	pxCurrentTCB
 2204 0098 00000000 		.word	uxTopReadyPriority
 2205 009c 00000000 		.word	pxReadyTasksLists
 2206 00a0 00000000 		.word	xPendingReadyList
 2207              		.cfi_endproc
 2208              	.LFE17:
 2210              		.section	.rodata.vTaskStartScheduler.str1.4,"aMS",%progbits,1
 2211              		.align	2
 2212              	.LC0:
 2213 0000 49444C45 		.ascii	"IDLE\000"
 2213      00
 2214              		.section	.text.vTaskStartScheduler,"ax",%progbits
 2215              		.align	1
 2216              		.global	vTaskStartScheduler
 2217              		.syntax unified
 2218              		.thumb
 2219              		.thumb_func
 2221              	vTaskStartScheduler:
 2222              	.LFB18:
1976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 2223              		.loc 1 1976 1 is_stmt 1 view -0
 2224              		.cfi_startproc
 2225              		@ args = 0, pretend = 0, frame = 16
 2226              		@ frame_needed = 0, uses_anonymous_args = 0
 2227 0000 10B5     		push	{r4, lr}
 2228              	.LCFI20:
 2229              		.cfi_def_cfa_offset 8
 2230              		.cfi_offset 4, -8
 2231              		.cfi_offset 14, -4
 2232 0002 88B0     		sub	sp, sp, #32
 2233              	.LCFI21:
 2234              		.cfi_def_cfa_offset 40
1977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2235              		.loc 1 1977 1 view .LVU615
 2236              	.LBB142:
1982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
 2237              		.loc 1 1982 3 view .LVU616
1982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
 2238              		.loc 1 1982 17 is_stmt 0 view .LVU617
 2239 0004 0024     		movs	r4, #0
 2240 0006 0594     		str	r4, [sp, #20]
1983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
 2241              		.loc 1 1983 3 is_stmt 1 view .LVU618
1983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
ARM GAS  /tmp/ccB9thnJ.s 			page 146


 2242              		.loc 1 1983 16 is_stmt 0 view .LVU619
 2243 0008 0694     		str	r4, [sp, #24]
1984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2244              		.loc 1 1984 3 is_stmt 1 view .LVU620
1988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 2245              		.loc 1 1988 3 view .LVU621
 2246 000a 07AA     		add	r2, sp, #28
 2247 000c 06A9     		add	r1, sp, #24
 2248 000e 05A8     		add	r0, sp, #20
 2249 0010 FFF7FEFF 		bl	vApplicationGetIdleTaskMemory
 2250              	.LVL166:
1989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
 2251              		.loc 1 1989 3 view .LVU622
1989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
 2252              		.loc 1 1989 21 is_stmt 0 view .LVU623
 2253 0014 059B     		ldr	r3, [sp, #20]
 2254 0016 0293     		str	r3, [sp, #8]
 2255 0018 069B     		ldr	r3, [sp, #24]
 2256 001a 0193     		str	r3, [sp, #4]
 2257 001c 0094     		str	r4, [sp]
 2258 001e 2346     		mov	r3, r4
 2259 0020 079A     		ldr	r2, [sp, #28]
 2260 0022 1049     		ldr	r1, .L166
 2261 0024 1048     		ldr	r0, .L166+4
 2262 0026 FFF7FEFF 		bl	xTaskCreateStatic
 2263              	.LVL167:
1989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
 2264              		.loc 1 1989 19 view .LVU624
 2265 002a 104B     		ldr	r3, .L166+8
 2266 002c 1860     		str	r0, [r3]
1997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2267              		.loc 1 1997 3 is_stmt 1 view .LVU625
1997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2268              		.loc 1 1997 5 is_stmt 0 view .LVU626
 2269 002e B8B1     		cbz	r0, .L162
 2270              	.LVL168:
1997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2271              		.loc 1 1997 5 view .LVU627
 2272              	.LBE142:
2031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2273              		.loc 1 2031 2 is_stmt 1 view .LVU628
2047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2274              		.loc 1 2047 3 view .LVU629
 2275              	.LBB143:
 2276              	.LBI143:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2277              		.loc 2 191 30 view .LVU630
 2278              	.LBB144:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2279              		.loc 2 193 1 view .LVU631
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2280              		.loc 2 195 2 view .LVU632
 2281              		.syntax unified
 2282              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2283 0030 4FF05003 			mov r3, #80												
 2284 0034 83F31188 		msr basepri, r3											
 2285 0038 BFF36F8F 		isb														
ARM GAS  /tmp/ccB9thnJ.s 			page 147


 2286 003c BFF34F8F 		dsb														
 2287              	
 2288              	@ 0 "" 2
 2289              		.thumb
 2290              		.syntax unified
 2291              	.LBE144:
 2292              	.LBE143:
2055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2293              		.loc 1 2055 4 view .LVU633
2055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2294              		.loc 1 2055 33 is_stmt 0 view .LVU634
 2295 0040 0B4B     		ldr	r3, .L166+12
 2296 0042 1B68     		ldr	r3, [r3]
2055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2297              		.loc 1 2055 18 view .LVU635
 2298 0044 5033     		adds	r3, r3, #80
2055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2299              		.loc 1 2055 16 view .LVU636
 2300 0046 0B4A     		ldr	r2, .L166+16
 2301 0048 1360     		str	r3, [r2]
2059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 2302              		.loc 1 2059 3 is_stmt 1 view .LVU637
2059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 2303              		.loc 1 2059 24 is_stmt 0 view .LVU638
 2304 004a 0B4B     		ldr	r3, .L166+20
 2305 004c 4FF0FF32 		mov	r2, #-1
 2306 0050 1A60     		str	r2, [r3]
2060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 2307              		.loc 1 2060 3 is_stmt 1 view .LVU639
2060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 2308              		.loc 1 2060 21 is_stmt 0 view .LVU640
 2309 0052 0A4B     		ldr	r3, .L166+24
 2310 0054 0122     		movs	r2, #1
 2311 0056 1A60     		str	r2, [r3]
2061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2312              		.loc 1 2061 3 is_stmt 1 view .LVU641
2061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2313              		.loc 1 2061 14 is_stmt 0 view .LVU642
 2314 0058 094B     		ldr	r3, .L166+28
 2315 005a 1C60     		str	r4, [r3]
2069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2316              		.loc 1 2069 43 is_stmt 1 view .LVU643
2071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2317              		.loc 1 2071 26 view .LVU644
2075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2318              		.loc 1 2075 3 view .LVU645
2075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2319              		.loc 1 2075 7 is_stmt 0 view .LVU646
 2320 005c FFF7FEFF 		bl	xPortStartScheduler
 2321              	.LVL169:
 2322              	.L162:
2096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2323              		.loc 1 2096 1 view .LVU647
 2324 0060 08B0     		add	sp, sp, #32
 2325              	.LCFI22:
 2326              		.cfi_def_cfa_offset 8
 2327              		@ sp needed
ARM GAS  /tmp/ccB9thnJ.s 			page 148


 2328 0062 10BD     		pop	{r4, pc}
 2329              	.L167:
 2330              		.align	2
 2331              	.L166:
 2332 0064 00000000 		.word	.LC0
 2333 0068 00000000 		.word	prvIdleTask
 2334 006c 00000000 		.word	xIdleTaskHandle
 2335 0070 00000000 		.word	pxCurrentTCB
 2336 0074 00000000 		.word	_impure_ptr
 2337 0078 00000000 		.word	xNextTaskUnblockTime
 2338 007c 00000000 		.word	xSchedulerRunning
 2339 0080 00000000 		.word	xTickCount
 2340              		.cfi_endproc
 2341              	.LFE18:
 2343              		.section	.text.vTaskEndScheduler,"ax",%progbits
 2344              		.align	1
 2345              		.global	vTaskEndScheduler
 2346              		.syntax unified
 2347              		.thumb
 2348              		.thumb_func
 2350              	vTaskEndScheduler:
 2351              	.LFB19:
2100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
 2352              		.loc 1 2100 1 is_stmt 1 view -0
 2353              		.cfi_startproc
 2354              		@ args = 0, pretend = 0, frame = 0
 2355              		@ frame_needed = 0, uses_anonymous_args = 0
 2356 0000 08B5     		push	{r3, lr}
 2357              	.LCFI23:
 2358              		.cfi_def_cfa_offset 8
 2359              		.cfi_offset 3, -8
 2360              		.cfi_offset 14, -4
2104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
 2361              		.loc 1 2104 2 view .LVU649
 2362              	.LBB145:
 2363              	.LBI145:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2364              		.loc 2 191 30 view .LVU650
 2365              	.LBB146:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2366              		.loc 2 193 1 view .LVU651
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2367              		.loc 2 195 2 view .LVU652
 2368              		.syntax unified
 2369              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2370 0002 4FF05003 			mov r3, #80												
 2371 0006 83F31188 		msr basepri, r3											
 2372 000a BFF36F8F 		isb														
 2373 000e BFF34F8F 		dsb														
 2374              	
 2375              	@ 0 "" 2
 2376              		.thumb
 2377              		.syntax unified
 2378              	.LBE146:
 2379              	.LBE145:
2105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
 2380              		.loc 1 2105 2 view .LVU653
ARM GAS  /tmp/ccB9thnJ.s 			page 149


2105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
 2381              		.loc 1 2105 20 is_stmt 0 view .LVU654
 2382 0012 034B     		ldr	r3, .L170
 2383 0014 0022     		movs	r2, #0
 2384 0016 1A60     		str	r2, [r3]
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2385              		.loc 1 2106 2 is_stmt 1 view .LVU655
 2386 0018 FFF7FEFF 		bl	vPortEndScheduler
 2387              	.LVL170:
2107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 2388              		.loc 1 2107 1 is_stmt 0 view .LVU656
 2389 001c 08BD     		pop	{r3, pc}
 2390              	.L171:
 2391 001e 00BF     		.align	2
 2392              	.L170:
 2393 0020 00000000 		.word	xSchedulerRunning
 2394              		.cfi_endproc
 2395              	.LFE19:
 2397              		.section	.text.vTaskSuspendAll,"ax",%progbits
 2398              		.align	1
 2399              		.global	vTaskSuspendAll
 2400              		.syntax unified
 2401              		.thumb
 2402              		.thumb_func
 2404              	vTaskSuspendAll:
 2405              	.LFB20:
2111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required as the variable is of type
 2406              		.loc 1 2111 1 is_stmt 1 view -0
 2407              		.cfi_startproc
 2408              		@ args = 0, pretend = 0, frame = 0
 2409              		@ frame_needed = 0, uses_anonymous_args = 0
 2410              		@ link register save eliminated.
2119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2411              		.loc 1 2119 24 view .LVU658
2123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2412              		.loc 1 2123 2 view .LVU659
 2413 0000 024A     		ldr	r2, .L173
 2414 0002 1368     		ldr	r3, [r2]
 2415 0004 0133     		adds	r3, r3, #1
 2416 0006 1360     		str	r3, [r2]
2127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2417              		.loc 1 2127 2 view .LVU660
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 2418              		.loc 1 2128 1 is_stmt 0 view .LVU661
 2419 0008 7047     		bx	lr
 2420              	.L174:
 2421 000a 00BF     		.align	2
 2422              	.L173:
 2423 000c 00000000 		.word	uxSchedulerSuspended
 2424              		.cfi_endproc
 2425              	.LFE20:
 2427              		.section	.text.xTaskGetTickCount,"ax",%progbits
 2428              		.align	1
 2429              		.global	xTaskGetTickCount
 2430              		.syntax unified
 2431              		.thumb
 2432              		.thumb_func
ARM GAS  /tmp/ccB9thnJ.s 			page 150


 2434              	xTaskGetTickCount:
 2435              	.LFB22:
2305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTicks;
 2436              		.loc 1 2305 1 is_stmt 1 view -0
 2437              		.cfi_startproc
 2438              		@ args = 0, pretend = 0, frame = 0
 2439              		@ frame_needed = 0, uses_anonymous_args = 0
 2440              		@ link register save eliminated.
2306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2441              		.loc 1 2306 1 view .LVU663
2309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2442              		.loc 1 2309 32 view .LVU664
2311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2443              		.loc 1 2311 3 view .LVU665
2311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2444              		.loc 1 2311 10 is_stmt 0 view .LVU666
 2445 0000 014B     		ldr	r3, .L176
 2446 0002 1868     		ldr	r0, [r3]
 2447              	.LVL171:
2313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2448              		.loc 1 2313 31 is_stmt 1 view .LVU667
2315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2449              		.loc 1 2315 2 view .LVU668
2316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2450              		.loc 1 2316 1 is_stmt 0 view .LVU669
 2451 0004 7047     		bx	lr
 2452              	.L177:
 2453 0006 00BF     		.align	2
 2454              	.L176:
 2455 0008 00000000 		.word	xTickCount
 2456              		.cfi_endproc
 2457              	.LFE22:
 2459              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 2460              		.align	1
 2461              		.global	xTaskGetTickCountFromISR
 2462              		.syntax unified
 2463              		.thumb
 2464              		.thumb_func
 2466              	xTaskGetTickCountFromISR:
 2467              	.LFB23:
2320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xReturn;
 2468              		.loc 1 2320 1 is_stmt 1 view -0
 2469              		.cfi_startproc
 2470              		@ args = 0, pretend = 0, frame = 0
 2471              		@ frame_needed = 0, uses_anonymous_args = 0
 2472 0000 08B5     		push	{r3, lr}
 2473              	.LCFI24:
 2474              		.cfi_def_cfa_offset 8
 2475              		.cfi_offset 3, -8
 2476              		.cfi_offset 14, -4
2321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
 2477              		.loc 1 2321 1 view .LVU671
2322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2478              		.loc 1 2322 1 view .LVU672
2338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2479              		.loc 1 2338 2 view .LVU673
 2480 0002 FFF7FEFF 		bl	vPortValidateInterruptPriority
ARM GAS  /tmp/ccB9thnJ.s 			page 151


 2481              	.LVL172:
2340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2482              		.loc 1 2340 2 view .LVU674
2342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2483              		.loc 1 2342 3 view .LVU675
2342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2484              		.loc 1 2342 11 is_stmt 0 view .LVU676
 2485 0006 014B     		ldr	r3, .L180
 2486 0008 1868     		ldr	r0, [r3]
 2487              	.LVL173:
2344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2488              		.loc 1 2344 2 is_stmt 1 view .LVU677
2346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2489              		.loc 1 2346 2 view .LVU678
2347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2490              		.loc 1 2347 1 is_stmt 0 view .LVU679
 2491 000a 08BD     		pop	{r3, pc}
 2492              	.L181:
 2493              		.align	2
 2494              	.L180:
 2495 000c 00000000 		.word	xTickCount
 2496              		.cfi_endproc
 2497              	.LFE23:
 2499              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 2500              		.align	1
 2501              		.global	uxTaskGetNumberOfTasks
 2502              		.syntax unified
 2503              		.thumb
 2504              		.thumb_func
 2506              	uxTaskGetNumberOfTasks:
 2507              	.LFB24:
2351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required because the variables are of type
 2508              		.loc 1 2351 1 is_stmt 1 view -0
 2509              		.cfi_startproc
 2510              		@ args = 0, pretend = 0, frame = 0
 2511              		@ frame_needed = 0, uses_anonymous_args = 0
 2512              		@ link register save eliminated.
2354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2513              		.loc 1 2354 2 view .LVU681
2354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2514              		.loc 1 2354 9 is_stmt 0 view .LVU682
 2515 0000 014B     		ldr	r3, .L183
 2516 0002 1868     		ldr	r0, [r3]
2355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2517              		.loc 1 2355 1 view .LVU683
 2518 0004 7047     		bx	lr
 2519              	.L184:
 2520 0006 00BF     		.align	2
 2521              	.L183:
 2522 0008 00000000 		.word	uxCurrentNumberOfTasks
 2523              		.cfi_endproc
 2524              	.LFE24:
 2526              		.section	.text.pcTaskGetName,"ax",%progbits
 2527              		.align	1
 2528              		.global	pcTaskGetName
 2529              		.syntax unified
 2530              		.thumb
ARM GAS  /tmp/ccB9thnJ.s 			page 152


 2531              		.thumb_func
 2533              	pcTaskGetName:
 2534              	.LVL174:
 2535              	.LFB25:
2359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
 2536              		.loc 1 2359 1 is_stmt 1 view -0
 2537              		.cfi_startproc
 2538              		@ args = 0, pretend = 0, frame = 0
 2539              		@ frame_needed = 0, uses_anonymous_args = 0
 2540              		@ link register save eliminated.
2360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2541              		.loc 1 2360 1 view .LVU685
2364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2542              		.loc 1 2364 2 view .LVU686
2364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2543              		.loc 1 2364 10 is_stmt 0 view .LVU687
 2544 0000 0346     		mov	r3, r0
 2545 0002 10B1     		cbz	r0, .L188
 2546              	.LVL175:
 2547              	.L186:
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2548              		.loc 1 2365 23 is_stmt 1 discriminator 2 view .LVU688
2366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2549              		.loc 1 2366 2 discriminator 2 view .LVU689
2367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2550              		.loc 1 2367 1 is_stmt 0 discriminator 2 view .LVU690
 2551 0004 03F13400 		add	r0, r3, #52
 2552 0008 7047     		bx	lr
 2553              	.LVL176:
 2554              	.L188:
2364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2555              		.loc 1 2364 10 discriminator 1 view .LVU691
 2556 000a 064B     		ldr	r3, .L189
 2557 000c 1B68     		ldr	r3, [r3]
 2558              	.LVL177:
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2559              		.loc 1 2365 2 is_stmt 1 discriminator 1 view .LVU692
 2560 000e 002B     		cmp	r3, #0
 2561 0010 F8D1     		bne	.L186
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2562              		.loc 1 2365 2 view .LVU693
 2563              	.LBB147:
 2564              	.LBI147:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2565              		.loc 2 191 30 view .LVU694
 2566              	.LBB148:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2567              		.loc 2 193 1 view .LVU695
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2568              		.loc 2 195 2 view .LVU696
 2569              		.syntax unified
 2570              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2571 0012 4FF05003 			mov r3, #80												
 2572 0016 83F31188 		msr basepri, r3											
 2573 001a BFF36F8F 		isb														
 2574 001e BFF34F8F 		dsb														
 2575              	
ARM GAS  /tmp/ccB9thnJ.s 			page 153


 2576              	@ 0 "" 2
 2577              	.LVL178:
 2578              		.thumb
 2579              		.syntax unified
 2580              	.L187:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2581              		.loc 2 195 2 is_stmt 0 view .LVU697
 2582              	.LBE148:
 2583              	.LBE147:
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2584              		.loc 1 2365 2 is_stmt 1 discriminator 1 view .LVU698
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2585              		.loc 1 2365 2 discriminator 1 view .LVU699
 2586 0022 FEE7     		b	.L187
 2587              	.L190:
 2588              		.align	2
 2589              	.L189:
 2590 0024 00000000 		.word	pxCurrentTCB
 2591              		.cfi_endproc
 2592              	.LFE25:
 2594              		.section	.text.xTaskIncrementTick,"ax",%progbits
 2595              		.align	1
 2596              		.global	xTaskIncrementTick
 2597              		.syntax unified
 2598              		.thumb
 2599              		.thumb_func
 2601              	xTaskIncrementTick:
 2602              	.LFB27:
2708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t * pxTCB;
 2603              		.loc 1 2708 1 view -0
 2604              		.cfi_startproc
 2605              		@ args = 0, pretend = 0, frame = 0
 2606              		@ frame_needed = 0, uses_anonymous_args = 0
 2607 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2608              	.LCFI25:
 2609              		.cfi_def_cfa_offset 24
 2610              		.cfi_offset 3, -24
 2611              		.cfi_offset 4, -20
 2612              		.cfi_offset 5, -16
 2613              		.cfi_offset 6, -12
 2614              		.cfi_offset 7, -8
 2615              		.cfi_offset 14, -4
2709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xItemValue;
 2616              		.loc 1 2709 1 view .LVU701
2710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
 2617              		.loc 1 2710 1 view .LVU702
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2618              		.loc 1 2711 1 view .LVU703
 2619              	.LVL179:
2716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 2620              		.loc 1 2716 40 view .LVU704
2717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2621              		.loc 1 2717 2 view .LVU705
2717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2622              		.loc 1 2717 27 is_stmt 0 view .LVU706
 2623 0002 3A4B     		ldr	r3, .L212
 2624 0004 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccB9thnJ.s 			page 154


2717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2625              		.loc 1 2717 4 view .LVU707
 2626 0006 002B     		cmp	r3, #0
 2627 0008 69D1     		bne	.L192
 2628              	.LBB149:
2721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2629              		.loc 1 2721 3 is_stmt 1 view .LVU708
2721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2630              		.loc 1 2721 49 is_stmt 0 view .LVU709
 2631 000a 394B     		ldr	r3, .L212+4
 2632 000c 1D68     		ldr	r5, [r3]
2721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2633              		.loc 1 2721 20 view .LVU710
 2634 000e 0135     		adds	r5, r5, #1
 2635              	.LVL180:
2725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2636              		.loc 1 2725 3 is_stmt 1 view .LVU711
2725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2637              		.loc 1 2725 14 is_stmt 0 view .LVU712
 2638 0010 1D60     		str	r5, [r3]
2727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2639              		.loc 1 2727 3 is_stmt 1 view .LVU713
2727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2640              		.loc 1 2727 5 is_stmt 0 view .LVU714
 2641 0012 C5B9     		cbnz	r5, .L193
 2642              	.LBB150:
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2643              		.loc 1 2729 4 is_stmt 1 view .LVU715
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2644              		.loc 1 2729 4 view .LVU716
 2645 0014 374B     		ldr	r3, .L212+8
 2646 0016 1B68     		ldr	r3, [r3]
 2647 0018 1B68     		ldr	r3, [r3]
 2648 001a 43B1     		cbz	r3, .L194
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2649              		.loc 1 2729 4 view .LVU717
 2650              	.LBB151:
 2651              	.LBI151:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2652              		.loc 2 191 30 view .LVU718
 2653              	.LBB152:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2654              		.loc 2 193 1 view .LVU719
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2655              		.loc 2 195 2 view .LVU720
 2656              		.syntax unified
 2657              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2658 001c 4FF05003 			mov r3, #80												
 2659 0020 83F31188 		msr basepri, r3											
 2660 0024 BFF36F8F 		isb														
 2661 0028 BFF34F8F 		dsb														
 2662              	
 2663              	@ 0 "" 2
 2664              	.LVL181:
 2665              		.thumb
 2666              		.syntax unified
 2667              	.L195:
ARM GAS  /tmp/ccB9thnJ.s 			page 155


 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2668              		.loc 2 195 2 is_stmt 0 view .LVU721
 2669              	.LBE152:
 2670              	.LBE151:
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2671              		.loc 1 2729 4 is_stmt 1 discriminator 1 view .LVU722
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2672              		.loc 1 2729 4 discriminator 1 view .LVU723
 2673 002c FEE7     		b	.L195
 2674              	.L194:
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2675              		.loc 1 2729 4 discriminator 2 view .LVU724
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2676              		.loc 1 2729 4 discriminator 2 view .LVU725
 2677 002e 314A     		ldr	r2, .L212+8
 2678 0030 1168     		ldr	r1, [r2]
 2679              	.LVL182:
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2680              		.loc 1 2729 4 discriminator 2 view .LVU726
 2681 0032 314B     		ldr	r3, .L212+12
 2682 0034 1868     		ldr	r0, [r3]
 2683 0036 1060     		str	r0, [r2]
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2684              		.loc 1 2729 4 discriminator 2 view .LVU727
 2685 0038 1960     		str	r1, [r3]
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2686              		.loc 1 2729 4 discriminator 2 view .LVU728
 2687 003a 304A     		ldr	r2, .L212+16
 2688 003c 1368     		ldr	r3, [r2]
 2689 003e 0133     		adds	r3, r3, #1
 2690 0040 1360     		str	r3, [r2]
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2691              		.loc 1 2729 4 discriminator 2 view .LVU729
 2692 0042 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2693              	.LVL183:
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2694              		.loc 1 2729 4 is_stmt 0 discriminator 2 view .LVU730
 2695              	.LBE150:
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2696              		.loc 1 2729 30 is_stmt 1 discriminator 2 view .LVU731
 2697              	.L193:
2733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2698              		.loc 1 2733 28 view .LVU732
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2699              		.loc 1 2740 3 view .LVU733
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2700              		.loc 1 2740 23 is_stmt 0 view .LVU734
 2701 0046 2E4B     		ldr	r3, .L212+20
 2702 0048 1B68     		ldr	r3, [r3]
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2703              		.loc 1 2740 5 view .LVU735
 2704 004a AB42     		cmp	r3, r5
 2705 004c 3DD9     		bls	.L205
 2706              	.LBE149:
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2707              		.loc 1 2711 12 view .LVU736
 2708 004e 0027     		movs	r7, #0
ARM GAS  /tmp/ccB9thnJ.s 			page 156


 2709              	.LVL184:
 2710              	.L197:
 2711              	.LBB153:
2823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2712              		.loc 1 2823 4 is_stmt 1 view .LVU737
2823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2713              		.loc 1 2823 8 is_stmt 0 view .LVU738
 2714 0050 2C4B     		ldr	r3, .L212+24
 2715 0052 1B68     		ldr	r3, [r3]
 2716 0054 DB6A     		ldr	r3, [r3, #44]
 2717 0056 03EB8303 		add	r3, r3, r3, lsl #2
 2718 005a 9A00     		lsls	r2, r3, #2
 2719 005c 2A4B     		ldr	r3, .L212+28
 2720 005e 9B58     		ldr	r3, [r3, r2]
2823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2721              		.loc 1 2823 6 view .LVU739
 2722 0060 012B     		cmp	r3, #1
 2723 0062 00D9     		bls	.L203
2825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2724              		.loc 1 2825 21 view .LVU740
 2725 0064 0127     		movs	r7, #1
 2726              	.LVL185:
 2727              	.L203:
2829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2728              		.loc 1 2829 29 is_stmt 1 view .LVU741
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2729              		.loc 1 2851 4 view .LVU742
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2730              		.loc 1 2851 22 is_stmt 0 view .LVU743
 2731 0066 294B     		ldr	r3, .L212+32
 2732 0068 1B68     		ldr	r3, [r3]
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2733              		.loc 1 2851 6 view .LVU744
 2734 006a 002B     		cmp	r3, #0
 2735 006c 3CD0     		beq	.L191
2853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2736              		.loc 1 2853 21 view .LVU745
 2737 006e 0127     		movs	r7, #1
 2738              	.LVL186:
2853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2739              		.loc 1 2853 21 view .LVU746
 2740              	.LBE153:
2875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2741              		.loc 1 2875 2 is_stmt 1 view .LVU747
2875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2742              		.loc 1 2875 9 is_stmt 0 view .LVU748
 2743 0070 3AE0     		b	.L191
 2744              	.LVL187:
 2745              	.L206:
 2746              	.LBB154:
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 2747              		.loc 1 2806 24 view .LVU749
 2748 0072 0127     		movs	r7, #1
 2749              	.LVL188:
 2750              	.L196:
2742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2751              		.loc 1 2742 4 is_stmt 1 view .LVU750
ARM GAS  /tmp/ccB9thnJ.s 			page 157


2744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2752              		.loc 1 2744 5 view .LVU751
2744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2753              		.loc 1 2744 9 is_stmt 0 view .LVU752
 2754 0074 1F4B     		ldr	r3, .L212+8
 2755 0076 1B68     		ldr	r3, [r3]
 2756 0078 1B68     		ldr	r3, [r3]
2744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2757              		.loc 1 2744 7 view .LVU753
 2758 007a 43B3     		cbz	r3, .L210
2760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2759              		.loc 1 2760 6 is_stmt 1 view .LVU754
2760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2760              		.loc 1 2760 14 is_stmt 0 view .LVU755
 2761 007c 1D4B     		ldr	r3, .L212+8
 2762 007e 1B68     		ldr	r3, [r3]
 2763 0080 DB68     		ldr	r3, [r3, #12]
2760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2764              		.loc 1 2760 12 view .LVU756
 2765 0082 DC68     		ldr	r4, [r3, #12]
 2766              	.LVL189:
2761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2767              		.loc 1 2761 6 is_stmt 1 view .LVU757
2761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2768              		.loc 1 2761 17 is_stmt 0 view .LVU758
 2769 0084 6368     		ldr	r3, [r4, #4]
 2770              	.LVL190:
2763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2771              		.loc 1 2763 6 is_stmt 1 view .LVU759
2763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2772              		.loc 1 2763 8 is_stmt 0 view .LVU760
 2773 0086 9D42     		cmp	r5, r3
 2774 0088 26D3     		bcc	.L211
2775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2775              		.loc 1 2775 31 is_stmt 1 view .LVU761
2779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2776              		.loc 1 2779 6 view .LVU762
2779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2777              		.loc 1 2779 15 is_stmt 0 view .LVU763
 2778 008a 261D     		adds	r6, r4, #4
 2779 008c 3046     		mov	r0, r6
 2780 008e FFF7FEFF 		bl	uxListRemove
 2781              	.LVL191:
2783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2782              		.loc 1 2783 6 is_stmt 1 view .LVU764
2783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2783              		.loc 1 2783 10 is_stmt 0 view .LVU765
 2784 0092 A36A     		ldr	r3, [r4, #40]
2783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2785              		.loc 1 2783 8 view .LVU766
 2786 0094 1BB1     		cbz	r3, .L200
2785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2787              		.loc 1 2785 7 is_stmt 1 view .LVU767
2785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2788              		.loc 1 2785 16 is_stmt 0 view .LVU768
 2789 0096 04F11800 		add	r0, r4, #24
 2790 009a FFF7FEFF 		bl	uxListRemove
ARM GAS  /tmp/ccB9thnJ.s 			page 158


 2791              	.LVL192:
 2792              	.L200:
2789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2793              		.loc 1 2789 31 is_stmt 1 view .LVU769
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2794              		.loc 1 2794 6 view .LVU770
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2795              		.loc 1 2794 6 view .LVU771
 2796 009e E36A     		ldr	r3, [r4, #44]
 2797 00a0 0122     		movs	r2, #1
 2798 00a2 9A40     		lsls	r2, r2, r3
 2799 00a4 1A49     		ldr	r1, .L212+36
 2800 00a6 0868     		ldr	r0, [r1]
 2801 00a8 0243     		orrs	r2, r2, r0
 2802 00aa 0A60     		str	r2, [r1]
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2803              		.loc 1 2794 6 view .LVU772
 2804 00ac 03EB8303 		add	r3, r3, r3, lsl #2
 2805 00b0 9A00     		lsls	r2, r3, #2
 2806 00b2 3146     		mov	r1, r6
 2807 00b4 1448     		ldr	r0, .L212+28
 2808 00b6 1044     		add	r0, r0, r2
 2809 00b8 FFF7FEFF 		bl	vListInsertEnd
 2810              	.LVL193:
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2811              		.loc 1 2794 36 view .LVU773
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2812              		.loc 1 2804 7 view .LVU774
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2813              		.loc 1 2804 16 is_stmt 0 view .LVU775
 2814 00bc E26A     		ldr	r2, [r4, #44]
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2815              		.loc 1 2804 44 view .LVU776
 2816 00be 114B     		ldr	r3, .L212+24
 2817 00c0 1B68     		ldr	r3, [r3]
 2818 00c2 DB6A     		ldr	r3, [r3, #44]
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2819              		.loc 1 2804 9 view .LVU777
 2820 00c4 9A42     		cmp	r2, r3
 2821 00c6 D4D2     		bcs	.L206
 2822 00c8 D4E7     		b	.L196
 2823              	.LVL194:
 2824              	.L205:
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2825              		.loc 1 2804 9 view .LVU778
 2826              	.LBE154:
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2827              		.loc 1 2711 12 view .LVU779
 2828 00ca 0027     		movs	r7, #0
 2829 00cc D2E7     		b	.L196
 2830              	.LVL195:
 2831              	.L210:
 2832              	.LBB155:
2751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 2833              		.loc 1 2751 6 is_stmt 1 view .LVU780
2751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 2834              		.loc 1 2751 27 is_stmt 0 view .LVU781
ARM GAS  /tmp/ccB9thnJ.s 			page 159


 2835 00ce 0C4B     		ldr	r3, .L212+20
 2836 00d0 4FF0FF32 		mov	r2, #-1
 2837 00d4 1A60     		str	r2, [r3]
2752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2838              		.loc 1 2752 6 is_stmt 1 view .LVU782
 2839 00d6 BBE7     		b	.L197
 2840              	.LVL196:
 2841              	.L211:
2770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks
 2842              		.loc 1 2770 7 view .LVU783
2770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks
 2843              		.loc 1 2770 28 is_stmt 0 view .LVU784
 2844 00d8 094A     		ldr	r2, .L212+20
 2845 00da 1360     		str	r3, [r2]
2771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2846              		.loc 1 2771 7 is_stmt 1 view .LVU785
 2847 00dc B8E7     		b	.L197
 2848              	.LVL197:
 2849              	.L192:
2771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2850              		.loc 1 2771 7 is_stmt 0 view .LVU786
 2851              	.LBE155:
2864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2852              		.loc 1 2864 3 is_stmt 1 view .LVU787
 2853 00de 0D4A     		ldr	r2, .L212+40
 2854 00e0 1368     		ldr	r3, [r2]
 2855 00e2 0133     		adds	r3, r3, #1
 2856 00e4 1360     		str	r3, [r2]
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2857              		.loc 1 2711 12 is_stmt 0 view .LVU788
 2858 00e6 0027     		movs	r7, #0
 2859              	.LVL198:
 2860              	.L191:
2876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2861              		.loc 1 2876 1 view .LVU789
 2862 00e8 3846     		mov	r0, r7
 2863 00ea F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2864              	.L213:
 2865              		.align	2
 2866              	.L212:
 2867 00ec 00000000 		.word	uxSchedulerSuspended
 2868 00f0 00000000 		.word	xTickCount
 2869 00f4 00000000 		.word	pxDelayedTaskList
 2870 00f8 00000000 		.word	pxOverflowDelayedTaskList
 2871 00fc 00000000 		.word	xNumOfOverflows
 2872 0100 00000000 		.word	xNextTaskUnblockTime
 2873 0104 00000000 		.word	pxCurrentTCB
 2874 0108 00000000 		.word	pxReadyTasksLists
 2875 010c 00000000 		.word	xYieldPending
 2876 0110 00000000 		.word	uxTopReadyPriority
 2877 0114 00000000 		.word	xPendedTicks
 2878              		.cfi_endproc
 2879              	.LFE27:
 2881              		.section	.text.xTaskResumeAll,"ax",%progbits
 2882              		.align	1
 2883              		.global	xTaskResumeAll
 2884              		.syntax unified
ARM GAS  /tmp/ccB9thnJ.s 			page 160


 2885              		.thumb
 2886              		.thumb_func
 2888              	xTaskResumeAll:
 2889              	.LFB21:
2195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB = NULL;
 2890              		.loc 1 2195 1 is_stmt 1 view -0
 2891              		.cfi_startproc
 2892              		@ args = 0, pretend = 0, frame = 0
 2893              		@ frame_needed = 0, uses_anonymous_args = 0
 2894 0000 38B5     		push	{r3, r4, r5, lr}
 2895              	.LCFI26:
 2896              		.cfi_def_cfa_offset 16
 2897              		.cfi_offset 3, -16
 2898              		.cfi_offset 4, -12
 2899              		.cfi_offset 5, -8
 2900              		.cfi_offset 14, -4
2196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 2901              		.loc 1 2196 1 view .LVU791
 2902              	.LVL199:
2197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2903              		.loc 1 2197 1 view .LVU792
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2904              		.loc 1 2201 2 view .LVU793
 2905 0002 354B     		ldr	r3, .L230
 2906 0004 1B68     		ldr	r3, [r3]
 2907 0006 43B9     		cbnz	r3, .L215
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2908              		.loc 1 2201 2 view .LVU794
 2909              	.LBB156:
 2910              	.LBI156:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2911              		.loc 2 191 30 view .LVU795
 2912              	.LBB157:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2913              		.loc 2 193 1 view .LVU796
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2914              		.loc 2 195 2 view .LVU797
 2915              		.syntax unified
 2916              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2917 0008 4FF05003 			mov r3, #80												
 2918 000c 83F31188 		msr basepri, r3											
 2919 0010 BFF36F8F 		isb														
 2920 0014 BFF34F8F 		dsb														
 2921              	
 2922              	@ 0 "" 2
 2923              	.LVL200:
 2924              		.thumb
 2925              		.syntax unified
 2926              	.L216:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2927              		.loc 2 195 2 is_stmt 0 view .LVU798
 2928              	.LBE157:
 2929              	.LBE156:
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2930              		.loc 1 2201 2 is_stmt 1 discriminator 1 view .LVU799
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2931              		.loc 1 2201 2 discriminator 1 view .LVU800
ARM GAS  /tmp/ccB9thnJ.s 			page 161


 2932 0018 FEE7     		b	.L216
 2933              	.L215:
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2934              		.loc 1 2201 38 discriminator 2 view .LVU801
2208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2935              		.loc 1 2208 2 discriminator 2 view .LVU802
 2936 001a FFF7FEFF 		bl	vPortEnterCritical
 2937              	.LVL201:
2210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2938              		.loc 1 2210 3 discriminator 2 view .LVU803
 2939 001e 2E4B     		ldr	r3, .L230
 2940 0020 1A68     		ldr	r2, [r3]
 2941 0022 013A     		subs	r2, r2, #1
 2942 0024 1A60     		str	r2, [r3]
2212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2943              		.loc 1 2212 3 discriminator 2 view .LVU804
2212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2944              		.loc 1 2212 28 is_stmt 0 discriminator 2 view .LVU805
 2945 0026 1B68     		ldr	r3, [r3]
2212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2946              		.loc 1 2212 5 discriminator 2 view .LVU806
 2947 0028 002B     		cmp	r3, #0
 2948 002a 4FD1     		bne	.L225
2214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2949              		.loc 1 2214 4 is_stmt 1 view .LVU807
2214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2950              		.loc 1 2214 31 is_stmt 0 view .LVU808
 2951 002c 2B4B     		ldr	r3, .L230+4
 2952 002e 1B68     		ldr	r3, [r3]
2214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2953              		.loc 1 2214 6 view .LVU809
 2954 0030 0BB9     		cbnz	r3, .L226
2197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2955              		.loc 1 2197 12 view .LVU810
 2956 0032 0024     		movs	r4, #0
 2957 0034 4BE0     		b	.L217
 2958              	.L226:
2196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 2959              		.loc 1 2196 8 view .LVU811
 2960 0036 0024     		movs	r4, #0
 2961              	.LVL202:
 2962              	.L218:
2233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2963              		.loc 1 2233 31 is_stmt 1 view .LVU812
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2964              		.loc 1 2218 52 view .LVU813
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2965              		.loc 1 2218 12 is_stmt 0 view .LVU814
 2966 0038 294B     		ldr	r3, .L230+8
 2967 003a 1B68     		ldr	r3, [r3]
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2968              		.loc 1 2218 52 view .LVU815
 2969 003c 1BB3     		cbz	r3, .L228
2220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2970              		.loc 1 2220 6 is_stmt 1 view .LVU816
2220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2971              		.loc 1 2220 14 is_stmt 0 view .LVU817
ARM GAS  /tmp/ccB9thnJ.s 			page 162


 2972 003e 284B     		ldr	r3, .L230+8
 2973 0040 DB68     		ldr	r3, [r3, #12]
2220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2974              		.loc 1 2220 12 view .LVU818
 2975 0042 DC68     		ldr	r4, [r3, #12]
 2976              	.LVL203:
2221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2977              		.loc 1 2221 6 is_stmt 1 view .LVU819
2221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2978              		.loc 1 2221 15 is_stmt 0 view .LVU820
 2979 0044 04F11800 		add	r0, r4, #24
 2980 0048 FFF7FEFF 		bl	uxListRemove
 2981              	.LVL204:
2222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2982              		.loc 1 2222 6 is_stmt 1 view .LVU821
2222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2983              		.loc 1 2222 15 is_stmt 0 view .LVU822
 2984 004c 251D     		adds	r5, r4, #4
 2985 004e 2846     		mov	r0, r5
 2986 0050 FFF7FEFF 		bl	uxListRemove
 2987              	.LVL205:
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2988              		.loc 1 2223 6 is_stmt 1 view .LVU823
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2989              		.loc 1 2223 6 view .LVU824
 2990 0054 E06A     		ldr	r0, [r4, #44]
 2991 0056 0123     		movs	r3, #1
 2992 0058 8340     		lsls	r3, r3, r0
 2993 005a 224A     		ldr	r2, .L230+12
 2994 005c 1168     		ldr	r1, [r2]
 2995 005e 0B43     		orrs	r3, r3, r1
 2996 0060 1360     		str	r3, [r2]
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2997              		.loc 1 2223 6 view .LVU825
 2998 0062 00EB8000 		add	r0, r0, r0, lsl #2
 2999 0066 2946     		mov	r1, r5
 3000 0068 1F4B     		ldr	r3, .L230+16
 3001 006a 03EB8000 		add	r0, r3, r0, lsl #2
 3002 006e FFF7FEFF 		bl	vListInsertEnd
 3003              	.LVL206:
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3004              		.loc 1 2223 36 view .LVU826
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3005              		.loc 1 2227 6 view .LVU827
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3006              		.loc 1 2227 15 is_stmt 0 view .LVU828
 3007 0072 E26A     		ldr	r2, [r4, #44]
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3008              		.loc 1 2227 43 view .LVU829
 3009 0074 1D4B     		ldr	r3, .L230+20
 3010 0076 1B68     		ldr	r3, [r3]
 3011 0078 DB6A     		ldr	r3, [r3, #44]
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3012              		.loc 1 2227 8 view .LVU830
 3013 007a 9A42     		cmp	r2, r3
 3014 007c DCD3     		bcc	.L218
2229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
ARM GAS  /tmp/ccB9thnJ.s 			page 163


 3015              		.loc 1 2229 7 is_stmt 1 view .LVU831
2229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3016              		.loc 1 2229 21 is_stmt 0 view .LVU832
 3017 007e 1C4B     		ldr	r3, .L230+24
 3018 0080 0122     		movs	r2, #1
 3019 0082 1A60     		str	r2, [r3]
 3020 0084 D8E7     		b	.L218
 3021              	.L228:
2237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3022              		.loc 1 2237 5 is_stmt 1 view .LVU833
2237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3023              		.loc 1 2237 7 is_stmt 0 view .LVU834
 3024 0086 0CB1     		cbz	r4, .L221
2245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3025              		.loc 1 2245 6 is_stmt 1 view .LVU835
 3026 0088 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 3027              	.LVL207:
 3028              	.L221:
 3029              	.LBB158:
2253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3030              		.loc 1 2253 6 view .LVU836
2253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3031              		.loc 1 2253 17 is_stmt 0 view .LVU837
 3032 008c 194B     		ldr	r3, .L230+28
 3033 008e 1C68     		ldr	r4, [r3]
 3034              	.LVL208:
2255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3035              		.loc 1 2255 6 is_stmt 1 view .LVU838
2255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3036              		.loc 1 2255 8 is_stmt 0 view .LVU839
 3037 0090 84B9     		cbnz	r4, .L224
 3038              	.L222:
2274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3039              		.loc 1 2274 31 is_stmt 1 view .LVU840
 3040              	.LBE158:
2278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3041              		.loc 1 2278 5 view .LVU841
2278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3042              		.loc 1 2278 23 is_stmt 0 view .LVU842
 3043 0092 174B     		ldr	r3, .L230+24
 3044 0094 1C68     		ldr	r4, [r3]
 3045              	.LVL209:
2278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3046              		.loc 1 2278 7 view .LVU843
 3047 0096 D4B1     		cbz	r4, .L217
2282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3048              		.loc 1 2282 7 is_stmt 1 view .LVU844
 3049              	.LVL210:
2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3050              		.loc 1 2285 6 view .LVU845
 3051 0098 4FF0E023 		mov	r3, #-536813568
 3052 009c 4FF08052 		mov	r2, #268435456
 3053 00a0 C3F8042D 		str	r2, [r3, #3332]
2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3054              		.loc 1 2285 6 view .LVU846
 3055              		.syntax unified
 3056              	@ 2285 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
ARM GAS  /tmp/ccB9thnJ.s 			page 164


 3057 00a4 BFF34F8F 		dsb
 3058              	@ 0 "" 2
2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3059              		.loc 1 2285 6 view .LVU847
 3060              	@ 2285 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3061 00a8 BFF36F8F 		isb
 3062              	@ 0 "" 2
2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3063              		.loc 1 2285 37 view .LVU848
2282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3064              		.loc 1 2282 23 is_stmt 0 view .LVU849
 3065              		.thumb
 3066              		.syntax unified
 3067 00ac 0124     		movs	r4, #1
 3068 00ae 0EE0     		b	.L217
 3069              	.LVL211:
 3070              	.L223:
 3071              	.LBB159:
2265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 3072              		.loc 1 2265 33 is_stmt 1 view .LVU850
2267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						} while( xPendedCounts > ( TickType_t ) 0U );
 3073              		.loc 1 2267 8 view .LVU851
2268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3074              		.loc 1 2268 30 view .LVU852
 3075 00b0 013C     		subs	r4, r4, #1
 3076              	.LVL212:
2268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3077              		.loc 1 2268 30 is_stmt 0 view .LVU853
 3078 00b2 07D0     		beq	.L229
 3079              	.L224:
2257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 3080              		.loc 1 2257 7 is_stmt 1 view .LVU854
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 3081              		.loc 1 2259 8 view .LVU855
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 3082              		.loc 1 2259 12 is_stmt 0 view .LVU856
 3083 00b4 FFF7FEFF 		bl	xTaskIncrementTick
 3084              	.LVL213:
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 3085              		.loc 1 2259 10 view .LVU857
 3086 00b8 0028     		cmp	r0, #0
 3087 00ba F9D0     		beq	.L223
2261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 3088              		.loc 1 2261 9 is_stmt 1 view .LVU858
2261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 3089              		.loc 1 2261 23 is_stmt 0 view .LVU859
 3090 00bc 0C4B     		ldr	r3, .L230+24
 3091 00be 0122     		movs	r2, #1
 3092 00c0 1A60     		str	r2, [r3]
 3093 00c2 F5E7     		b	.L223
 3094              	.L229:
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3095              		.loc 1 2270 7 is_stmt 1 view .LVU860
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3096              		.loc 1 2270 20 is_stmt 0 view .LVU861
 3097 00c4 0B4B     		ldr	r3, .L230+28
 3098 00c6 0022     		movs	r2, #0
ARM GAS  /tmp/ccB9thnJ.s 			page 165


 3099 00c8 1A60     		str	r2, [r3]
 3100 00ca E2E7     		b	.L222
 3101              	.LVL214:
 3102              	.L225:
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3103              		.loc 1 2270 20 view .LVU862
 3104              	.LBE159:
2197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3105              		.loc 1 2197 12 view .LVU863
 3106 00cc 0024     		movs	r4, #0
 3107              	.LVL215:
 3108              	.L217:
2295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3109              		.loc 1 2295 28 is_stmt 1 view .LVU864
2298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3110              		.loc 1 2298 2 view .LVU865
 3111 00ce FFF7FEFF 		bl	vPortExitCritical
 3112              	.LVL216:
2300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3113              		.loc 1 2300 2 view .LVU866
2301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3114              		.loc 1 2301 1 is_stmt 0 view .LVU867
 3115 00d2 2046     		mov	r0, r4
 3116 00d4 38BD     		pop	{r3, r4, r5, pc}
 3117              	.LVL217:
 3118              	.L231:
2301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3119              		.loc 1 2301 1 view .LVU868
 3120 00d6 00BF     		.align	2
 3121              	.L230:
 3122 00d8 00000000 		.word	uxSchedulerSuspended
 3123 00dc 00000000 		.word	uxCurrentNumberOfTasks
 3124 00e0 00000000 		.word	xPendingReadyList
 3125 00e4 00000000 		.word	uxTopReadyPriority
 3126 00e8 00000000 		.word	pxReadyTasksLists
 3127 00ec 00000000 		.word	pxCurrentTCB
 3128 00f0 00000000 		.word	xYieldPending
 3129 00f4 00000000 		.word	xPendedTicks
 3130              		.cfi_endproc
 3131              	.LFE21:
 3133              		.section	.text.vTaskDelay,"ax",%progbits
 3134              		.align	1
 3135              		.global	vTaskDelay
 3136              		.syntax unified
 3137              		.thumb
 3138              		.thumb_func
 3140              	vTaskDelay:
 3141              	.LVL218:
 3142              	.LFB10:
1342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 3143              		.loc 1 1342 2 is_stmt 1 view -0
 3144              		.cfi_startproc
 3145              		@ args = 0, pretend = 0, frame = 0
 3146              		@ frame_needed = 0, uses_anonymous_args = 0
1342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 3147              		.loc 1 1342 2 is_stmt 0 view .LVU870
 3148 0000 10B5     		push	{r4, lr}
ARM GAS  /tmp/ccB9thnJ.s 			page 166


 3149              	.LCFI27:
 3150              		.cfi_def_cfa_offset 8
 3151              		.cfi_offset 4, -8
 3152              		.cfi_offset 14, -4
1343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3153              		.loc 1 1343 2 is_stmt 1 view .LVU871
 3154              	.LVL219:
1346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3155              		.loc 1 1346 3 view .LVU872
1346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3156              		.loc 1 1346 5 is_stmt 0 view .LVU873
 3157 0002 A8B1     		cbz	r0, .L233
 3158 0004 0446     		mov	r4, r0
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3159              		.loc 1 1348 4 is_stmt 1 view .LVU874
 3160 0006 104B     		ldr	r3, .L238
 3161 0008 1B68     		ldr	r3, [r3]
 3162 000a 43B1     		cbz	r3, .L234
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3163              		.loc 1 1348 4 view .LVU875
 3164              	.LBB160:
 3165              	.LBI160:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3166              		.loc 2 191 30 view .LVU876
 3167              	.LBB161:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3168              		.loc 2 193 1 view .LVU877
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3169              		.loc 2 195 2 view .LVU878
 3170              		.syntax unified
 3171              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3172 000c 4FF05003 			mov r3, #80												
 3173 0010 83F31188 		msr basepri, r3											
 3174 0014 BFF36F8F 		isb														
 3175 0018 BFF34F8F 		dsb														
 3176              	
 3177              	@ 0 "" 2
 3178              	.LVL220:
 3179              		.thumb
 3180              		.syntax unified
 3181              	.L235:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3182              		.loc 2 195 2 is_stmt 0 view .LVU879
 3183              	.LBE161:
 3184              	.LBE160:
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3185              		.loc 1 1348 4 is_stmt 1 discriminator 1 view .LVU880
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3186              		.loc 1 1348 4 discriminator 1 view .LVU881
 3187 001c FEE7     		b	.L235
 3188              	.L234:
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3189              		.loc 1 1348 45 discriminator 2 view .LVU882
1349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3190              		.loc 1 1349 4 discriminator 2 view .LVU883
 3191 001e FFF7FEFF 		bl	vTaskSuspendAll
 3192              	.LVL221:
ARM GAS  /tmp/ccB9thnJ.s 			page 167


1351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3193              		.loc 1 1351 22 discriminator 2 view .LVU884
1360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3194              		.loc 1 1360 5 discriminator 2 view .LVU885
 3195 0022 0021     		movs	r1, #0
 3196 0024 2046     		mov	r0, r4
 3197 0026 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3198              	.LVL222:
1362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3199              		.loc 1 1362 4 discriminator 2 view .LVU886
1362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3200              		.loc 1 1362 22 is_stmt 0 discriminator 2 view .LVU887
 3201 002a FFF7FEFF 		bl	xTaskResumeAll
 3202              	.LVL223:
1366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3203              		.loc 1 1366 28 is_stmt 1 discriminator 2 view .LVU888
1371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3204              		.loc 1 1371 3 discriminator 2 view .LVU889
1371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3205              		.loc 1 1371 5 is_stmt 0 discriminator 2 view .LVU890
 3206 002e 48B9     		cbnz	r0, .L232
 3207              	.LVL224:
 3208              	.L233:
1373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3209              		.loc 1 1373 4 is_stmt 1 view .LVU891
 3210 0030 4FF0E023 		mov	r3, #-536813568
 3211 0034 4FF08052 		mov	r2, #268435456
 3212 0038 C3F8042D 		str	r2, [r3, #3332]
1373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3213              		.loc 1 1373 4 view .LVU892
 3214              		.syntax unified
 3215              	@ 1373 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3216 003c BFF34F8F 		dsb
 3217              	@ 0 "" 2
1373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3218              		.loc 1 1373 4 view .LVU893
 3219              	@ 1373 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3220 0040 BFF36F8F 		isb
 3221              	@ 0 "" 2
1373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3222              		.loc 1 1373 26 view .LVU894
1377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3223              		.loc 1 1377 28 view .LVU895
 3224              		.thumb
 3225              		.syntax unified
 3226              	.L232:
1379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3227              		.loc 1 1379 2 is_stmt 0 view .LVU896
 3228 0044 10BD     		pop	{r4, pc}
 3229              	.L239:
 3230 0046 00BF     		.align	2
 3231              	.L238:
 3232 0048 00000000 		.word	uxSchedulerSuspended
 3233              		.cfi_endproc
 3234              	.LFE10:
 3236              		.section	.text.xTaskCatchUpTicks,"ax",%progbits
 3237              		.align	1
ARM GAS  /tmp/ccB9thnJ.s 			page 168


 3238              		.global	xTaskCatchUpTicks
 3239              		.syntax unified
 3240              		.thumb
 3241              		.thumb_func
 3243              	xTaskCatchUpTicks:
 3244              	.LVL225:
 3245              	.LFB26:
2610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xYieldRequired = pdFALSE;
 3246              		.loc 1 2610 1 is_stmt 1 view -0
 3247              		.cfi_startproc
 3248              		@ args = 0, pretend = 0, frame = 0
 3249              		@ frame_needed = 0, uses_anonymous_args = 0
2611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3250              		.loc 1 2611 1 view .LVU898
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3251              		.loc 1 2615 2 view .LVU899
 3252 0000 0B4B     		ldr	r3, .L245
 3253 0002 1B68     		ldr	r3, [r3]
 3254 0004 43B1     		cbz	r3, .L241
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3255              		.loc 1 2615 2 view .LVU900
 3256              	.LBB162:
 3257              	.LBI162:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3258              		.loc 2 191 30 view .LVU901
 3259              	.LBB163:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3260              		.loc 2 193 1 view .LVU902
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3261              		.loc 2 195 2 view .LVU903
 3262              		.syntax unified
 3263              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3264 0006 4FF05003 			mov r3, #80												
 3265 000a 83F31188 		msr basepri, r3											
 3266 000e BFF36F8F 		isb														
 3267 0012 BFF34F8F 		dsb														
 3268              	
 3269              	@ 0 "" 2
 3270              	.LVL226:
 3271              		.thumb
 3272              		.syntax unified
 3273              	.L242:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3274              		.loc 2 195 2 is_stmt 0 view .LVU904
 3275              	.LBE163:
 3276              	.LBE162:
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3277              		.loc 1 2615 2 is_stmt 1 discriminator 1 view .LVU905
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3278              		.loc 1 2615 2 discriminator 1 view .LVU906
 3279 0016 FEE7     		b	.L242
 3280              	.L241:
2610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xYieldRequired = pdFALSE;
 3281              		.loc 1 2610 1 is_stmt 0 discriminator 2 view .LVU907
 3282 0018 10B5     		push	{r4, lr}
 3283              	.LCFI28:
 3284              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccB9thnJ.s 			page 169


 3285              		.cfi_offset 4, -8
 3286              		.cfi_offset 14, -4
 3287 001a 0446     		mov	r4, r0
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3288              		.loc 1 2615 43 is_stmt 1 discriminator 2 view .LVU908
2619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xPendedTicks += xTicksToCatchUp;
 3289              		.loc 1 2619 2 discriminator 2 view .LVU909
 3290 001c FFF7FEFF 		bl	vTaskSuspendAll
 3291              	.LVL227:
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldRequired = xTaskResumeAll();
 3292              		.loc 1 2620 2 discriminator 2 view .LVU910
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldRequired = xTaskResumeAll();
 3293              		.loc 1 2620 15 is_stmt 0 discriminator 2 view .LVU911
 3294 0020 044A     		ldr	r2, .L245+4
 3295 0022 1368     		ldr	r3, [r2]
 3296 0024 2344     		add	r3, r3, r4
 3297 0026 1360     		str	r3, [r2]
2621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3298              		.loc 1 2621 2 is_stmt 1 discriminator 2 view .LVU912
2621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3299              		.loc 1 2621 19 is_stmt 0 discriminator 2 view .LVU913
 3300 0028 FFF7FEFF 		bl	xTaskResumeAll
 3301              	.LVL228:
2623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3302              		.loc 1 2623 2 is_stmt 1 discriminator 2 view .LVU914
2624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 3303              		.loc 1 2624 1 is_stmt 0 discriminator 2 view .LVU915
 3304 002c 10BD     		pop	{r4, pc}
 3305              	.LVL229:
 3306              	.L246:
2624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 3307              		.loc 1 2624 1 discriminator 2 view .LVU916
 3308 002e 00BF     		.align	2
 3309              	.L245:
 3310 0030 00000000 		.word	uxSchedulerSuspended
 3311 0034 00000000 		.word	xPendedTicks
 3312              		.cfi_endproc
 3313              	.LFE26:
 3315              		.section	.text.vTaskSwitchContext,"ax",%progbits
 3316              		.align	1
 3317              		.global	vTaskSwitchContext
 3318              		.syntax unified
 3319              		.thumb
 3320              		.thumb_func
 3322              	vTaskSwitchContext:
 3323              	.LFB28:
2990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 3324              		.loc 1 2990 1 is_stmt 1 view -0
 3325              		.cfi_startproc
 3326              		@ args = 0, pretend = 0, frame = 0
 3327              		@ frame_needed = 0, uses_anonymous_args = 0
 3328              		@ link register save eliminated.
2991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3329              		.loc 1 2991 2 view .LVU918
2991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3330              		.loc 1 2991 27 is_stmt 0 view .LVU919
 3331 0000 224B     		ldr	r3, .L254
ARM GAS  /tmp/ccB9thnJ.s 			page 170


 3332 0002 1B68     		ldr	r3, [r3]
2991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3333              		.loc 1 2991 4 view .LVU920
 3334 0004 1BB1     		cbz	r3, .L248
2995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3335              		.loc 1 2995 3 is_stmt 1 view .LVU921
2995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3336              		.loc 1 2995 17 is_stmt 0 view .LVU922
 3337 0006 224B     		ldr	r3, .L254+4
 3338 0008 0122     		movs	r2, #1
 3339 000a 1A60     		str	r2, [r3]
 3340 000c 7047     		bx	lr
 3341              	.L248:
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 3342              		.loc 1 2999 3 is_stmt 1 view .LVU923
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 3343              		.loc 1 2999 17 is_stmt 0 view .LVU924
 3344 000e 204B     		ldr	r3, .L254+4
 3345 0010 0022     		movs	r2, #0
 3346 0012 1A60     		str	r2, [r3]
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3347              		.loc 1 3000 27 is_stmt 1 view .LVU925
3030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3348              		.loc 1 3030 33 view .LVU926
 3349              	.LBB164:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3350              		.loc 1 3041 3 view .LVU927
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3351              		.loc 1 3041 3 view .LVU928
 3352 0014 1F4B     		ldr	r3, .L254+8
 3353 0016 1B68     		ldr	r3, [r3]
 3354              	.LVL230:
 3355              	.LBB165:
 3356              	.LBI165:
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 3357              		.loc 2 130 59 view .LVU929
 3358              	.LBB166:
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3359              		.loc 2 132 2 view .LVU930
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 3360              		.loc 2 134 3 view .LVU931
 3361              		.syntax unified
 3362              	@ 134 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3363 0018 B3FA83F3 		clz r3, r3
 3364              	@ 0 "" 2
 3365              	.LVL231:
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 3366              		.loc 2 134 3 is_stmt 0 view .LVU932
 3367              		.thumb
 3368              		.syntax unified
 3369 001c DBB2     		uxtb	r3, r3
 3370              	.LVL232:
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 3371              		.loc 2 135 3 is_stmt 1 view .LVU933
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 3372              		.loc 2 135 3 is_stmt 0 view .LVU934
 3373              	.LBE166:
ARM GAS  /tmp/ccB9thnJ.s 			page 171


 3374              	.LBE165:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3375              		.loc 1 3041 3 view .LVU935
 3376 001e C3F11F03 		rsb	r3, r3, #31
 3377              	.LVL233:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3378              		.loc 1 3041 3 is_stmt 1 view .LVU936
 3379 0022 03EB8301 		add	r1, r3, r3, lsl #2
 3380 0026 8A00     		lsls	r2, r1, #2
 3381 0028 1B49     		ldr	r1, .L254+12
 3382 002a 8A58     		ldr	r2, [r1, r2]
 3383 002c 42B9     		cbnz	r2, .L250
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3384              		.loc 1 3041 3 view .LVU937
 3385              	.LBB167:
 3386              	.LBI167:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3387              		.loc 2 191 30 view .LVU938
 3388              	.LBB168:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3389              		.loc 2 193 1 view .LVU939
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3390              		.loc 2 195 2 view .LVU940
 3391              		.syntax unified
 3392              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3393 002e 4FF05003 			mov r3, #80												
 3394 0032 83F31188 		msr basepri, r3											
 3395 0036 BFF36F8F 		isb														
 3396 003a BFF34F8F 		dsb														
 3397              	
 3398              	@ 0 "" 2
 3399              	.LVL234:
 3400              		.thumb
 3401              		.syntax unified
 3402              	.L251:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3403              		.loc 2 195 2 is_stmt 0 view .LVU941
 3404              	.LBE168:
 3405              	.LBE167:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3406              		.loc 1 3041 3 is_stmt 1 discriminator 1 view .LVU942
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3407              		.loc 1 3041 3 discriminator 1 view .LVU943
 3408 003e FEE7     		b	.L251
 3409              	.LVL235:
 3410              	.L250:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3411              		.loc 1 3041 3 discriminator 2 view .LVU944
 3412              	.LBB169:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3413              		.loc 1 3041 3 discriminator 2 view .LVU945
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3414              		.loc 1 3041 3 discriminator 2 view .LVU946
 3415 0040 1548     		ldr	r0, .L254+12
 3416 0042 03EB8301 		add	r1, r3, r3, lsl #2
 3417 0046 8A00     		lsls	r2, r1, #2
 3418 0048 0244     		add	r2, r2, r0
ARM GAS  /tmp/ccB9thnJ.s 			page 172


 3419 004a 5168     		ldr	r1, [r2, #4]
 3420 004c 4968     		ldr	r1, [r1, #4]
 3421 004e 5160     		str	r1, [r2, #4]
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3422              		.loc 1 3041 3 discriminator 2 view .LVU947
 3423 0050 03EB830C 		add	ip, r3, r3, lsl #2
 3424 0054 4FEA8C02 		lsl	r2, ip, #2
 3425 0058 0832     		adds	r2, r2, #8
 3426 005a 0244     		add	r2, r2, r0
 3427 005c 9142     		cmp	r1, r2
 3428 005e 0DD0     		beq	.L253
 3429              	.L252:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3430              		.loc 1 3041 3 discriminator 6 view .LVU948
 3431 0060 03EB8303 		add	r3, r3, r3, lsl #2
 3432              	.LVL236:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3433              		.loc 1 3041 3 is_stmt 0 discriminator 6 view .LVU949
 3434 0064 9A00     		lsls	r2, r3, #2
 3435 0066 0C4B     		ldr	r3, .L254+12
 3436 0068 1344     		add	r3, r3, r2
 3437 006a 5B68     		ldr	r3, [r3, #4]
 3438 006c DA68     		ldr	r2, [r3, #12]
 3439 006e 0B4B     		ldr	r3, .L254+16
 3440 0070 1A60     		str	r2, [r3]
 3441              	.LBE169:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3442              		.loc 1 3041 3 is_stmt 1 discriminator 6 view .LVU950
 3443              	.LBE164:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3444              		.loc 1 3041 37 discriminator 6 view .LVU951
3042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3445              		.loc 1 3042 26 discriminator 6 view .LVU952
3057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3446              		.loc 1 3057 4 discriminator 6 view .LVU953
3057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3447              		.loc 1 3057 33 is_stmt 0 discriminator 6 view .LVU954
 3448 0072 1B68     		ldr	r3, [r3]
3057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3449              		.loc 1 3057 18 discriminator 6 view .LVU955
 3450 0074 5033     		adds	r3, r3, #80
3057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3451              		.loc 1 3057 16 discriminator 6 view .LVU956
 3452 0076 0A4A     		ldr	r2, .L254+20
 3453 0078 1360     		str	r3, [r2]
3061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3454              		.loc 1 3061 1 discriminator 6 view .LVU957
 3455 007a 7047     		bx	lr
 3456              	.LVL237:
 3457              	.L253:
 3458              	.LBB171:
 3459              	.LBB170:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3460              		.loc 1 3041 3 is_stmt 1 discriminator 4 view .LVU958
 3461 007c 4868     		ldr	r0, [r1, #4]
 3462 007e 6246     		mov	r2, ip
 3463 0080 9100     		lsls	r1, r2, #2
ARM GAS  /tmp/ccB9thnJ.s 			page 173


 3464 0082 054A     		ldr	r2, .L254+12
 3465 0084 0A44     		add	r2, r2, r1
 3466 0086 5060     		str	r0, [r2, #4]
 3467 0088 EAE7     		b	.L252
 3468              	.L255:
 3469 008a 00BF     		.align	2
 3470              	.L254:
 3471 008c 00000000 		.word	uxSchedulerSuspended
 3472 0090 00000000 		.word	xYieldPending
 3473 0094 00000000 		.word	uxTopReadyPriority
 3474 0098 00000000 		.word	pxReadyTasksLists
 3475 009c 00000000 		.word	pxCurrentTCB
 3476 00a0 00000000 		.word	_impure_ptr
 3477              	.LBE170:
 3478              	.LBE171:
 3479              		.cfi_endproc
 3480              	.LFE28:
 3482              		.section	.text.vTaskSuspend,"ax",%progbits
 3483              		.align	1
 3484              		.global	vTaskSuspend
 3485              		.syntax unified
 3486              		.thumb
 3487              		.thumb_func
 3489              	vTaskSuspend:
 3490              	.LVL238:
 3491              	.LFB14:
1705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 3492              		.loc 1 1705 2 view -0
 3493              		.cfi_startproc
 3494              		@ args = 0, pretend = 0, frame = 0
 3495              		@ frame_needed = 0, uses_anonymous_args = 0
1705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 3496              		.loc 1 1705 2 is_stmt 0 view .LVU960
 3497 0000 38B5     		push	{r3, r4, r5, lr}
 3498              	.LCFI29:
 3499              		.cfi_def_cfa_offset 16
 3500              		.cfi_offset 3, -16
 3501              		.cfi_offset 4, -12
 3502              		.cfi_offset 5, -8
 3503              		.cfi_offset 14, -4
 3504 0002 0446     		mov	r4, r0
1706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3505              		.loc 1 1706 2 is_stmt 1 view .LVU961
1708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3506              		.loc 1 1708 3 view .LVU962
 3507 0004 FFF7FEFF 		bl	vPortEnterCritical
 3508              	.LVL239:
1712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3509              		.loc 1 1712 4 view .LVU963
1712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3510              		.loc 1 1712 12 is_stmt 0 view .LVU964
 3511 0008 64B3     		cbz	r4, .L268
 3512              	.LVL240:
 3513              	.L257:
1714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3514              		.loc 1 1714 30 is_stmt 1 discriminator 4 view .LVU965
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccB9thnJ.s 			page 174


 3515              		.loc 1 1718 4 discriminator 4 view .LVU966
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3516              		.loc 1 1718 8 is_stmt 0 discriminator 4 view .LVU967
 3517 000a 251D     		adds	r5, r4, #4
 3518 000c 2846     		mov	r0, r5
 3519 000e FFF7FEFF 		bl	uxListRemove
 3520              	.LVL241:
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3521              		.loc 1 1718 6 discriminator 4 view .LVU968
 3522 0012 70B9     		cbnz	r0, .L258
1720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3523              		.loc 1 1720 5 is_stmt 1 view .LVU969
 3524 0014 E26A     		ldr	r2, [r4, #44]
 3525 0016 02EB8203 		add	r3, r2, r2, lsl #2
 3526 001a 9B00     		lsls	r3, r3, #2
 3527 001c 2C49     		ldr	r1, .L272
 3528 001e CB58     		ldr	r3, [r1, r3]
 3529 0020 3BB9     		cbnz	r3, .L258
1720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3530              		.loc 1 1720 5 discriminator 1 view .LVU970
 3531 0022 0123     		movs	r3, #1
 3532 0024 03FA02F2 		lsl	r2, r3, r2
 3533 0028 2A49     		ldr	r1, .L272+4
 3534 002a 0B68     		ldr	r3, [r1]
 3535 002c 23EA0203 		bic	r3, r3, r2
 3536 0030 0B60     		str	r3, [r1]
 3537              	.L258:
1724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3538              		.loc 1 1724 29 view .LVU971
1728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3539              		.loc 1 1728 4 view .LVU972
1728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3540              		.loc 1 1728 8 is_stmt 0 view .LVU973
 3541 0032 A36A     		ldr	r3, [r4, #40]
1728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3542              		.loc 1 1728 6 view .LVU974
 3543 0034 1BB1     		cbz	r3, .L259
1730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3544              		.loc 1 1730 5 is_stmt 1 view .LVU975
1730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3545              		.loc 1 1730 14 is_stmt 0 view .LVU976
 3546 0036 04F11800 		add	r0, r4, #24
 3547 003a FFF7FEFF 		bl	uxListRemove
 3548              	.LVL242:
 3549              	.L259:
1734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3550              		.loc 1 1734 29 is_stmt 1 view .LVU977
1737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3551              		.loc 1 1737 4 view .LVU978
 3552 003e 2946     		mov	r1, r5
 3553 0040 2548     		ldr	r0, .L272+8
 3554 0042 FFF7FEFF 		bl	vListInsertEnd
 3555              	.LVL243:
1741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3556              		.loc 1 1741 5 view .LVU979
1741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3557              		.loc 1 1741 14 is_stmt 0 view .LVU980
ARM GAS  /tmp/ccB9thnJ.s 			page 175


 3558 0046 94F87431 		ldrb	r3, [r4, #372]	@ zero_extendqisi2
 3559 004a DBB2     		uxtb	r3, r3
1741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3560              		.loc 1 1741 7 view .LVU981
 3561 004c 012B     		cmp	r3, #1
 3562 004e 0CD0     		beq	.L269
 3563              	.L260:
1750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3564              		.loc 1 1750 3 is_stmt 1 view .LVU982
 3565 0050 FFF7FEFF 		bl	vPortExitCritical
 3566              	.LVL244:
1752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3567              		.loc 1 1752 3 view .LVU983
1752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3568              		.loc 1 1752 25 is_stmt 0 view .LVU984
 3569 0054 214B     		ldr	r3, .L272+12
 3570 0056 1B68     		ldr	r3, [r3]
1752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3571              		.loc 1 1752 5 view .LVU985
 3572 0058 5BB9     		cbnz	r3, .L270
 3573              	.L261:
1764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3574              		.loc 1 1764 28 is_stmt 1 view .LVU986
1767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3575              		.loc 1 1767 3 view .LVU987
1767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3576              		.loc 1 1767 13 is_stmt 0 view .LVU988
 3577 005a 214B     		ldr	r3, .L272+16
 3578 005c 1B68     		ldr	r3, [r3]
1767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3579              		.loc 1 1767 5 view .LVU989
 3580 005e A342     		cmp	r3, r4
 3581 0060 0ED0     		beq	.L271
 3582              	.L256:
1798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3583              		.loc 1 1798 2 view .LVU990
 3584 0062 38BD     		pop	{r3, r4, r5, pc}
 3585              	.LVL245:
 3586              	.L268:
1712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3587              		.loc 1 1712 12 discriminator 1 view .LVU991
 3588 0064 1E4B     		ldr	r3, .L272+16
 3589 0066 1C68     		ldr	r4, [r3]
 3590              	.LVL246:
1712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3591              		.loc 1 1712 12 discriminator 1 view .LVU992
 3592 0068 CFE7     		b	.L257
 3593              	.LVL247:
 3594              	.L269:
1745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3595              		.loc 1 1745 6 is_stmt 1 view .LVU993
1745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3596              		.loc 1 1745 27 is_stmt 0 view .LVU994
 3597 006a 0023     		movs	r3, #0
 3598 006c 84F87431 		strb	r3, [r4, #372]
 3599 0070 EEE7     		b	.L260
 3600              	.L270:
ARM GAS  /tmp/ccB9thnJ.s 			page 176


1756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3601              		.loc 1 1756 4 is_stmt 1 view .LVU995
 3602 0072 FFF7FEFF 		bl	vPortEnterCritical
 3603              	.LVL248:
1758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3604              		.loc 1 1758 5 view .LVU996
 3605 0076 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 3606              	.LVL249:
1760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3607              		.loc 1 1760 4 view .LVU997
 3608 007a FFF7FEFF 		bl	vPortExitCritical
 3609              	.LVL250:
 3610 007e ECE7     		b	.L261
 3611              	.L271:
1769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3612              		.loc 1 1769 4 view .LVU998
1769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3613              		.loc 1 1769 26 is_stmt 0 view .LVU999
 3614 0080 164B     		ldr	r3, .L272+12
 3615 0082 1B68     		ldr	r3, [r3]
1769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3616              		.loc 1 1769 6 view .LVU1000
 3617 0084 B3B1     		cbz	r3, .L263
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3618              		.loc 1 1772 5 is_stmt 1 view .LVU1001
 3619 0086 174B     		ldr	r3, .L272+20
 3620 0088 1B68     		ldr	r3, [r3]
 3621 008a 43B1     		cbz	r3, .L264
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3622              		.loc 1 1772 5 view .LVU1002
 3623              	.LBB172:
 3624              	.LBI172:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3625              		.loc 2 191 30 view .LVU1003
 3626              	.LBB173:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3627              		.loc 2 193 1 view .LVU1004
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3628              		.loc 2 195 2 view .LVU1005
 3629              		.syntax unified
 3630              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3631 008c 4FF05003 			mov r3, #80												
 3632 0090 83F31188 		msr basepri, r3											
 3633 0094 BFF36F8F 		isb														
 3634 0098 BFF34F8F 		dsb														
 3635              	
 3636              	@ 0 "" 2
 3637              	.LVL251:
 3638              		.thumb
 3639              		.syntax unified
 3640              	.L265:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3641              		.loc 2 195 2 is_stmt 0 view .LVU1006
 3642              	.LBE173:
 3643              	.LBE172:
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3644              		.loc 1 1772 5 is_stmt 1 discriminator 1 view .LVU1007
ARM GAS  /tmp/ccB9thnJ.s 			page 177


1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3645              		.loc 1 1772 5 discriminator 1 view .LVU1008
 3646 009c FEE7     		b	.L265
 3647              	.L264:
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3648              		.loc 1 1772 46 discriminator 2 view .LVU1009
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3649              		.loc 1 1773 5 discriminator 2 view .LVU1010
 3650 009e 4FF0E023 		mov	r3, #-536813568
 3651 00a2 4FF08052 		mov	r2, #268435456
 3652 00a6 C3F8042D 		str	r2, [r3, #3332]
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3653              		.loc 1 1773 5 discriminator 2 view .LVU1011
 3654              		.syntax unified
 3655              	@ 1773 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3656 00aa BFF34F8F 		dsb
 3657              	@ 0 "" 2
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3658              		.loc 1 1773 5 discriminator 2 view .LVU1012
 3659              	@ 1773 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3660 00ae BFF36F8F 		isb
 3661              	@ 0 "" 2
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3662              		.loc 1 1773 27 discriminator 2 view .LVU1013
 3663              		.thumb
 3664              		.syntax unified
 3665 00b2 D6E7     		b	.L256
 3666              	.L263:
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3667              		.loc 1 1780 5 view .LVU1014
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3668              		.loc 1 1780 9 is_stmt 0 view .LVU1015
 3669 00b4 084B     		ldr	r3, .L272+8
 3670 00b6 1A68     		ldr	r2, [r3]
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3671              		.loc 1 1780 56 view .LVU1016
 3672 00b8 0B4B     		ldr	r3, .L272+24
 3673 00ba 1B68     		ldr	r3, [r3]
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3674              		.loc 1 1780 7 view .LVU1017
 3675 00bc 9A42     		cmp	r2, r3
 3676 00be 03D1     		bne	.L266
1786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3677              		.loc 1 1786 6 is_stmt 1 view .LVU1018
1786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3678              		.loc 1 1786 19 is_stmt 0 view .LVU1019
 3679 00c0 074B     		ldr	r3, .L272+16
 3680 00c2 0022     		movs	r2, #0
 3681 00c4 1A60     		str	r2, [r3]
 3682 00c6 CCE7     		b	.L256
 3683              	.L266:
1790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3684              		.loc 1 1790 6 is_stmt 1 view .LVU1020
 3685 00c8 FFF7FEFF 		bl	vTaskSwitchContext
 3686              	.LVL252:
1796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3687              		.loc 1 1796 28 view .LVU1021
ARM GAS  /tmp/ccB9thnJ.s 			page 178


1798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3688              		.loc 1 1798 2 is_stmt 0 view .LVU1022
 3689 00cc C9E7     		b	.L256
 3690              	.L273:
 3691 00ce 00BF     		.align	2
 3692              	.L272:
 3693 00d0 00000000 		.word	pxReadyTasksLists
 3694 00d4 00000000 		.word	uxTopReadyPriority
 3695 00d8 00000000 		.word	xSuspendedTaskList
 3696 00dc 00000000 		.word	xSchedulerRunning
 3697 00e0 00000000 		.word	pxCurrentTCB
 3698 00e4 00000000 		.word	uxSchedulerSuspended
 3699 00e8 00000000 		.word	uxCurrentNumberOfTasks
 3700              		.cfi_endproc
 3701              	.LFE14:
 3703              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 3704              		.align	1
 3705              		.global	vTaskPlaceOnEventList
 3706              		.syntax unified
 3707              		.thumb
 3708              		.thumb_func
 3710              	vTaskPlaceOnEventList:
 3711              	.LVL253:
 3712              	.LFB29:
3065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3713              		.loc 1 3065 1 is_stmt 1 view -0
 3714              		.cfi_startproc
 3715              		@ args = 0, pretend = 0, frame = 0
 3716              		@ frame_needed = 0, uses_anonymous_args = 0
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3717              		.loc 1 3066 2 view .LVU1024
 3718 0000 58B1     		cbz	r0, .L279
3065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3719              		.loc 1 3065 1 is_stmt 0 discriminator 2 view .LVU1025
 3720 0002 10B5     		push	{r4, lr}
 3721              	.LCFI30:
 3722              		.cfi_def_cfa_offset 8
 3723              		.cfi_offset 4, -8
 3724              		.cfi_offset 14, -4
 3725 0004 0C46     		mov	r4, r1
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3726              		.loc 1 3066 29 is_stmt 1 discriminator 2 view .LVU1026
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3727              		.loc 1 3075 2 discriminator 2 view .LVU1027
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3728              		.loc 1 3075 43 is_stmt 0 discriminator 2 view .LVU1028
 3729 0006 094A     		ldr	r2, .L280
 3730 0008 1168     		ldr	r1, [r2]
 3731              	.LVL254:
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3732              		.loc 1 3075 2 discriminator 2 view .LVU1029
 3733 000a 1831     		adds	r1, r1, #24
 3734 000c FFF7FEFF 		bl	vListInsert
 3735              	.LVL255:
3077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3736              		.loc 1 3077 2 is_stmt 1 discriminator 2 view .LVU1030
 3737 0010 0121     		movs	r1, #1
ARM GAS  /tmp/ccB9thnJ.s 			page 179


 3738 0012 2046     		mov	r0, r4
 3739 0014 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3740              	.LVL256:
3078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3741              		.loc 1 3078 1 is_stmt 0 discriminator 2 view .LVU1031
 3742 0018 10BD     		pop	{r4, pc}
 3743              	.LVL257:
 3744              	.L279:
 3745              	.LCFI31:
 3746              		.cfi_def_cfa_offset 0
 3747              		.cfi_restore 4
 3748              		.cfi_restore 14
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3749              		.loc 1 3066 2 is_stmt 1 view .LVU1032
 3750              	.LBB174:
 3751              	.LBI174:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3752              		.loc 2 191 30 view .LVU1033
 3753              	.LBB175:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3754              		.loc 2 193 1 view .LVU1034
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3755              		.loc 2 195 2 view .LVU1035
 3756              		.syntax unified
 3757              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3758 001a 4FF05003 			mov r3, #80												
 3759 001e 83F31188 		msr basepri, r3											
 3760 0022 BFF36F8F 		isb														
 3761 0026 BFF34F8F 		dsb														
 3762              	
 3763              	@ 0 "" 2
 3764              	.LVL258:
 3765              		.thumb
 3766              		.syntax unified
 3767              	.L276:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3768              		.loc 2 195 2 is_stmt 0 view .LVU1036
 3769              	.LBE175:
 3770              	.LBE174:
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3771              		.loc 1 3066 2 is_stmt 1 discriminator 1 view .LVU1037
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3772              		.loc 1 3066 2 discriminator 1 view .LVU1038
 3773 002a FEE7     		b	.L276
 3774              	.L281:
 3775              		.align	2
 3776              	.L280:
 3777 002c 00000000 		.word	pxCurrentTCB
 3778              		.cfi_endproc
 3779              	.LFE29:
 3781              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
 3782              		.align	1
 3783              		.global	vTaskPlaceOnUnorderedEventList
 3784              		.syntax unified
 3785              		.thumb
 3786              		.thumb_func
 3788              	vTaskPlaceOnUnorderedEventList:
ARM GAS  /tmp/ccB9thnJ.s 			page 180


 3789              	.LVL259:
 3790              	.LFB30:
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3791              		.loc 1 3082 1 view -0
 3792              		.cfi_startproc
 3793              		@ args = 0, pretend = 0, frame = 0
 3794              		@ frame_needed = 0, uses_anonymous_args = 0
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3795              		.loc 1 3083 2 view .LVU1040
 3796 0000 70B1     		cbz	r0, .L289
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3797              		.loc 1 3082 1 is_stmt 0 discriminator 2 view .LVU1041
 3798 0002 10B5     		push	{r4, lr}
 3799              	.LCFI32:
 3800              		.cfi_def_cfa_offset 8
 3801              		.cfi_offset 4, -8
 3802              		.cfi_offset 14, -4
 3803 0004 1446     		mov	r4, r2
 3804 0006 0246     		mov	r2, r0
 3805              	.LVL260:
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3806              		.loc 1 3083 29 is_stmt 1 discriminator 2 view .LVU1042
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3807              		.loc 1 3087 2 discriminator 2 view .LVU1043
 3808 0008 114B     		ldr	r3, .L290
 3809 000a 1B68     		ldr	r3, [r3]
 3810 000c 8BB9     		cbnz	r3, .L285
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3811              		.loc 1 3087 2 view .LVU1044
 3812              	.LBB176:
 3813              	.LBI176:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3814              		.loc 2 191 30 view .LVU1045
 3815              	.LBB177:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3816              		.loc 2 193 1 view .LVU1046
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3817              		.loc 2 195 2 view .LVU1047
 3818              		.syntax unified
 3819              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3820 000e 4FF05003 			mov r3, #80												
 3821 0012 83F31188 		msr basepri, r3											
 3822 0016 BFF36F8F 		isb														
 3823 001a BFF34F8F 		dsb														
 3824              	
 3825              	@ 0 "" 2
 3826              	.LVL261:
 3827              		.thumb
 3828              		.syntax unified
 3829              	.L286:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3830              		.loc 2 195 2 is_stmt 0 view .LVU1048
 3831              	.LBE177:
 3832              	.LBE176:
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3833              		.loc 1 3087 2 is_stmt 1 discriminator 2 view .LVU1049
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccB9thnJ.s 			page 181


 3834              		.loc 1 3087 2 discriminator 2 view .LVU1050
 3835 001e FEE7     		b	.L286
 3836              	.LVL262:
 3837              	.L289:
 3838              	.LCFI33:
 3839              		.cfi_def_cfa_offset 0
 3840              		.cfi_restore 4
 3841              		.cfi_restore 14
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3842              		.loc 1 3083 2 view .LVU1051
 3843              	.LBB178:
 3844              	.LBI178:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3845              		.loc 2 191 30 view .LVU1052
 3846              	.LBB179:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3847              		.loc 2 193 1 view .LVU1053
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3848              		.loc 2 195 2 view .LVU1054
 3849              		.syntax unified
 3850              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3851 0020 4FF05003 			mov r3, #80												
 3852 0024 83F31188 		msr basepri, r3											
 3853 0028 BFF36F8F 		isb														
 3854 002c BFF34F8F 		dsb														
 3855              	
 3856              	@ 0 "" 2
 3857              	.LVL263:
 3858              		.thumb
 3859              		.syntax unified
 3860              	.L284:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3861              		.loc 2 195 2 is_stmt 0 view .LVU1055
 3862              	.LBE179:
 3863              	.LBE178:
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3864              		.loc 1 3083 2 is_stmt 1 discriminator 1 view .LVU1056
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3865              		.loc 1 3083 2 discriminator 1 view .LVU1057
 3866 0030 FEE7     		b	.L284
 3867              	.LVL264:
 3868              	.L285:
 3869              	.LCFI34:
 3870              		.cfi_def_cfa_offset 8
 3871              		.cfi_offset 4, -8
 3872              		.cfi_offset 14, -4
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3873              		.loc 1 3087 43 discriminator 2 view .LVU1058
3092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3874              		.loc 1 3092 2 discriminator 2 view .LVU1059
 3875 0032 084B     		ldr	r3, .L290+4
 3876 0034 1868     		ldr	r0, [r3]
 3877              	.LVL265:
3092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3878              		.loc 1 3092 2 is_stmt 0 discriminator 2 view .LVU1060
 3879 0036 41F00041 		orr	r1, r1, #-2147483648
 3880              	.LVL266:
ARM GAS  /tmp/ccB9thnJ.s 			page 182


3092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3881              		.loc 1 3092 2 discriminator 2 view .LVU1061
 3882 003a 8161     		str	r1, [r0, #24]
3099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3883              		.loc 1 3099 2 is_stmt 1 discriminator 2 view .LVU1062
3099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3884              		.loc 1 3099 46 is_stmt 0 discriminator 2 view .LVU1063
 3885 003c 1968     		ldr	r1, [r3]
3099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3886              		.loc 1 3099 2 discriminator 2 view .LVU1064
 3887 003e 1831     		adds	r1, r1, #24
 3888 0040 1046     		mov	r0, r2
 3889 0042 FFF7FEFF 		bl	vListInsertEnd
 3890              	.LVL267:
3101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3891              		.loc 1 3101 2 is_stmt 1 discriminator 2 view .LVU1065
 3892 0046 0121     		movs	r1, #1
 3893 0048 2046     		mov	r0, r4
 3894 004a FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3895              	.LVL268:
3102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3896              		.loc 1 3102 1 is_stmt 0 discriminator 2 view .LVU1066
 3897 004e 10BD     		pop	{r4, pc}
 3898              	.LVL269:
 3899              	.L291:
3102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3900              		.loc 1 3102 1 discriminator 2 view .LVU1067
 3901              		.align	2
 3902              	.L290:
 3903 0050 00000000 		.word	uxSchedulerSuspended
 3904 0054 00000000 		.word	pxCurrentTCB
 3905              		.cfi_endproc
 3906              	.LFE30:
 3908              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 3909              		.align	1
 3910              		.global	xTaskRemoveFromEventList
 3911              		.syntax unified
 3912              		.thumb
 3913              		.thumb_func
 3915              	xTaskRemoveFromEventList:
 3916              	.LVL270:
 3917              	.LFB31:
3139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3918              		.loc 1 3139 1 is_stmt 1 view -0
 3919              		.cfi_startproc
 3920              		@ args = 0, pretend = 0, frame = 0
 3921              		@ frame_needed = 0, uses_anonymous_args = 0
3139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3922              		.loc 1 3139 1 is_stmt 0 view .LVU1069
 3923 0000 38B5     		push	{r3, r4, r5, lr}
 3924              	.LCFI35:
 3925              		.cfi_def_cfa_offset 16
 3926              		.cfi_offset 3, -16
 3927              		.cfi_offset 4, -12
 3928              		.cfi_offset 5, -8
 3929              		.cfi_offset 14, -4
3140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
ARM GAS  /tmp/ccB9thnJ.s 			page 183


 3930              		.loc 1 3140 1 is_stmt 1 view .LVU1070
3141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3931              		.loc 1 3141 1 view .LVU1071
3156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3932              		.loc 1 3156 2 view .LVU1072
3156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3933              		.loc 1 3156 19 is_stmt 0 view .LVU1073
 3934 0002 C368     		ldr	r3, [r0, #12]
3156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3935              		.loc 1 3156 17 view .LVU1074
 3936 0004 DC68     		ldr	r4, [r3, #12]
 3937              	.LVL271:
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3938              		.loc 1 3157 2 is_stmt 1 view .LVU1075
 3939 0006 24B3     		cbz	r4, .L300
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3940              		.loc 1 3157 32 discriminator 2 view .LVU1076
3158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3941              		.loc 1 3158 2 discriminator 2 view .LVU1077
3158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3942              		.loc 1 3158 11 is_stmt 0 discriminator 2 view .LVU1078
 3943 0008 04F11805 		add	r5, r4, #24
 3944 000c 2846     		mov	r0, r5
 3945              	.LVL272:
3158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3946              		.loc 1 3158 11 discriminator 2 view .LVU1079
 3947 000e FFF7FEFF 		bl	uxListRemove
 3948              	.LVL273:
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3949              		.loc 1 3160 2 is_stmt 1 discriminator 2 view .LVU1080
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3950              		.loc 1 3160 27 is_stmt 0 discriminator 2 view .LVU1081
 3951 0012 184B     		ldr	r3, .L301
 3952 0014 1B68     		ldr	r3, [r3]
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3953              		.loc 1 3160 4 discriminator 2 view .LVU1082
 3954 0016 2BBB     		cbnz	r3, .L295
3162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 3955              		.loc 1 3162 3 is_stmt 1 view .LVU1083
3162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 3956              		.loc 1 3162 12 is_stmt 0 view .LVU1084
 3957 0018 251D     		adds	r5, r4, #4
 3958 001a 2846     		mov	r0, r5
 3959 001c FFF7FEFF 		bl	uxListRemove
 3960              	.LVL274:
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3961              		.loc 1 3163 3 is_stmt 1 view .LVU1085
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3962              		.loc 1 3163 3 view .LVU1086
 3963 0020 E06A     		ldr	r0, [r4, #44]
 3964 0022 0123     		movs	r3, #1
 3965 0024 8340     		lsls	r3, r3, r0
 3966 0026 144A     		ldr	r2, .L301+4
 3967 0028 1168     		ldr	r1, [r2]
 3968 002a 0B43     		orrs	r3, r3, r1
 3969 002c 1360     		str	r3, [r2]
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccB9thnJ.s 			page 184


 3970              		.loc 1 3163 3 view .LVU1087
 3971 002e 00EB8000 		add	r0, r0, r0, lsl #2
 3972 0032 2946     		mov	r1, r5
 3973 0034 114B     		ldr	r3, .L301+8
 3974 0036 03EB8000 		add	r0, r3, r0, lsl #2
 3975 003a FFF7FEFF 		bl	vListInsertEnd
 3976              	.LVL275:
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3977              		.loc 1 3163 42 view .LVU1088
 3978              	.L296:
3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3979              		.loc 1 3186 2 view .LVU1089
3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3980              		.loc 1 3186 20 is_stmt 0 view .LVU1090
 3981 003e E26A     		ldr	r2, [r4, #44]
3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3982              		.loc 1 3186 47 view .LVU1091
 3983 0040 0F4B     		ldr	r3, .L301+12
 3984 0042 1B68     		ldr	r3, [r3]
 3985 0044 DB6A     		ldr	r3, [r3, #44]
3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3986              		.loc 1 3186 4 view .LVU1092
 3987 0046 9A42     		cmp	r2, r3
 3988 0048 11D9     		bls	.L298
3191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3989              		.loc 1 3191 3 is_stmt 1 view .LVU1093
 3990              	.LVL276:
3195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3991              		.loc 1 3195 3 view .LVU1094
3195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3992              		.loc 1 3195 17 is_stmt 0 view .LVU1095
 3993 004a 0120     		movs	r0, #1
 3994 004c 0D4B     		ldr	r3, .L301+16
 3995 004e 1860     		str	r0, [r3]
 3996              	.LVL277:
 3997              	.L292:
3203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3998              		.loc 1 3203 1 view .LVU1096
 3999 0050 38BD     		pop	{r3, r4, r5, pc}
 4000              	.LVL278:
 4001              	.L300:
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 4002              		.loc 1 3157 2 is_stmt 1 view .LVU1097
 4003              	.LBB180:
 4004              	.LBI180:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4005              		.loc 2 191 30 view .LVU1098
 4006              	.LBB181:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4007              		.loc 2 193 1 view .LVU1099
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4008              		.loc 2 195 2 view .LVU1100
 4009              		.syntax unified
 4010              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4011 0052 4FF05003 			mov r3, #80												
 4012 0056 83F31188 		msr basepri, r3											
 4013 005a BFF36F8F 		isb														
ARM GAS  /tmp/ccB9thnJ.s 			page 185


 4014 005e BFF34F8F 		dsb														
 4015              	
 4016              	@ 0 "" 2
 4017              	.LVL279:
 4018              		.thumb
 4019              		.syntax unified
 4020              	.L294:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4021              		.loc 2 195 2 is_stmt 0 view .LVU1101
 4022              	.LBE181:
 4023              	.LBE180:
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 4024              		.loc 1 3157 2 is_stmt 1 discriminator 1 view .LVU1102
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 4025              		.loc 1 3157 2 discriminator 1 view .LVU1103
 4026 0062 FEE7     		b	.L294
 4027              	.LVL280:
 4028              	.L295:
3183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4029              		.loc 1 3183 3 view .LVU1104
 4030 0064 2946     		mov	r1, r5
 4031 0066 0848     		ldr	r0, .L301+20
 4032 0068 FFF7FEFF 		bl	vListInsertEnd
 4033              	.LVL281:
 4034 006c E7E7     		b	.L296
 4035              	.L298:
3199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4036              		.loc 1 3199 11 is_stmt 0 view .LVU1105
 4037 006e 0020     		movs	r0, #0
 4038              	.LVL282:
3202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4039              		.loc 1 3202 2 is_stmt 1 view .LVU1106
3202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4040              		.loc 1 3202 9 is_stmt 0 view .LVU1107
 4041 0070 EEE7     		b	.L292
 4042              	.L302:
 4043 0072 00BF     		.align	2
 4044              	.L301:
 4045 0074 00000000 		.word	uxSchedulerSuspended
 4046 0078 00000000 		.word	uxTopReadyPriority
 4047 007c 00000000 		.word	pxReadyTasksLists
 4048 0080 00000000 		.word	pxCurrentTCB
 4049 0084 00000000 		.word	xYieldPending
 4050 0088 00000000 		.word	xPendingReadyList
 4051              		.cfi_endproc
 4052              	.LFE31:
 4054              		.section	.text.vTaskRemoveFromUnorderedEventList,"ax",%progbits
 4055              		.align	1
 4056              		.global	vTaskRemoveFromUnorderedEventList
 4057              		.syntax unified
 4058              		.thumb
 4059              		.thumb_func
 4061              	vTaskRemoveFromUnorderedEventList:
 4062              	.LVL283:
 4063              	.LFB32:
3207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 4064              		.loc 1 3207 1 is_stmt 1 view -0
ARM GAS  /tmp/ccB9thnJ.s 			page 186


 4065              		.cfi_startproc
 4066              		@ args = 0, pretend = 0, frame = 0
 4067              		@ frame_needed = 0, uses_anonymous_args = 0
3207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 4068              		.loc 1 3207 1 is_stmt 0 view .LVU1109
 4069 0000 38B5     		push	{r3, r4, r5, lr}
 4070              	.LCFI36:
 4071              		.cfi_def_cfa_offset 16
 4072              		.cfi_offset 3, -16
 4073              		.cfi_offset 4, -12
 4074              		.cfi_offset 5, -8
 4075              		.cfi_offset 14, -4
3208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4076              		.loc 1 3208 1 is_stmt 1 view .LVU1110
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4077              		.loc 1 3212 2 view .LVU1111
 4078 0002 1C4B     		ldr	r3, .L311
 4079 0004 1B68     		ldr	r3, [r3]
 4080 0006 43B9     		cbnz	r3, .L304
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4081              		.loc 1 3212 2 view .LVU1112
 4082              	.LBB182:
 4083              	.LBI182:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4084              		.loc 2 191 30 view .LVU1113
 4085              	.LBB183:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4086              		.loc 2 193 1 view .LVU1114
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4087              		.loc 2 195 2 view .LVU1115
 4088              		.syntax unified
 4089              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4090 0008 4FF05003 			mov r3, #80												
 4091 000c 83F31188 		msr basepri, r3											
 4092 0010 BFF36F8F 		isb														
 4093 0014 BFF34F8F 		dsb														
 4094              	
 4095              	@ 0 "" 2
 4096              	.LVL284:
 4097              		.thumb
 4098              		.syntax unified
 4099              	.L305:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4100              		.loc 2 195 2 is_stmt 0 view .LVU1116
 4101              	.LBE183:
 4102              	.LBE182:
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4103              		.loc 1 3212 2 is_stmt 1 discriminator 1 view .LVU1117
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4104              		.loc 1 3212 2 discriminator 1 view .LVU1118
 4105 0018 FEE7     		b	.L305
 4106              	.L304:
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4107              		.loc 1 3212 49 discriminator 2 view .LVU1119
3215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4108              		.loc 1 3215 2 discriminator 2 view .LVU1120
 4109 001a 41F00041 		orr	r1, r1, #-2147483648
ARM GAS  /tmp/ccB9thnJ.s 			page 187


 4110              	.LVL285:
3215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4111              		.loc 1 3215 2 is_stmt 0 discriminator 2 view .LVU1121
 4112 001e 0160     		str	r1, [r0]
3219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 4113              		.loc 1 3219 2 is_stmt 1 discriminator 2 view .LVU1122
3219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 4114              		.loc 1 3219 17 is_stmt 0 discriminator 2 view .LVU1123
 4115 0020 C468     		ldr	r4, [r0, #12]
 4116              	.LVL286:
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4117              		.loc 1 3220 2 is_stmt 1 discriminator 2 view .LVU1124
 4118 0022 F4B1     		cbz	r4, .L310
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4119              		.loc 1 3220 32 discriminator 2 view .LVU1125
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4120              		.loc 1 3221 2 discriminator 2 view .LVU1126
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4121              		.loc 1 3221 11 is_stmt 0 discriminator 2 view .LVU1127
 4122 0024 FFF7FEFF 		bl	uxListRemove
 4123              	.LVL287:
3240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 4124              		.loc 1 3240 2 is_stmt 1 discriminator 2 view .LVU1128
3240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 4125              		.loc 1 3240 11 is_stmt 0 discriminator 2 view .LVU1129
 4126 0028 251D     		adds	r5, r4, #4
 4127 002a 2846     		mov	r0, r5
 4128 002c FFF7FEFF 		bl	uxListRemove
 4129              	.LVL288:
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4130              		.loc 1 3241 2 is_stmt 1 discriminator 2 view .LVU1130
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4131              		.loc 1 3241 2 discriminator 2 view .LVU1131
 4132 0030 E06A     		ldr	r0, [r4, #44]
 4133 0032 0123     		movs	r3, #1
 4134 0034 8340     		lsls	r3, r3, r0
 4135 0036 104A     		ldr	r2, .L311+4
 4136 0038 1168     		ldr	r1, [r2]
 4137 003a 0B43     		orrs	r3, r3, r1
 4138 003c 1360     		str	r3, [r2]
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4139              		.loc 1 3241 2 discriminator 2 view .LVU1132
 4140 003e 00EB8000 		add	r0, r0, r0, lsl #2
 4141 0042 2946     		mov	r1, r5
 4142 0044 0D4B     		ldr	r3, .L311+8
 4143 0046 03EB8000 		add	r0, r3, r0, lsl #2
 4144 004a FFF7FEFF 		bl	vListInsertEnd
 4145              	.LVL289:
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4146              		.loc 1 3241 41 discriminator 2 view .LVU1133
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4147              		.loc 1 3243 2 discriminator 2 view .LVU1134
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4148              		.loc 1 3243 20 is_stmt 0 discriminator 2 view .LVU1135
 4149 004e E26A     		ldr	r2, [r4, #44]
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4150              		.loc 1 3243 47 discriminator 2 view .LVU1136
ARM GAS  /tmp/ccB9thnJ.s 			page 188


 4151 0050 0B4B     		ldr	r3, .L311+12
 4152 0052 1B68     		ldr	r3, [r3]
 4153 0054 DB6A     		ldr	r3, [r3, #44]
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4154              		.loc 1 3243 4 discriminator 2 view .LVU1137
 4155 0056 9A42     		cmp	r2, r3
 4156 0058 02D9     		bls	.L303
3249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4157              		.loc 1 3249 3 is_stmt 1 view .LVU1138
3249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4158              		.loc 1 3249 17 is_stmt 0 view .LVU1139
 4159 005a 0A4B     		ldr	r3, .L311+16
 4160 005c 0122     		movs	r2, #1
 4161 005e 1A60     		str	r2, [r3]
 4162              	.L303:
3251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4163              		.loc 1 3251 1 view .LVU1140
 4164 0060 38BD     		pop	{r3, r4, r5, pc}
 4165              	.LVL290:
 4166              	.L310:
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4167              		.loc 1 3220 2 is_stmt 1 view .LVU1141
 4168              	.LBB184:
 4169              	.LBI184:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4170              		.loc 2 191 30 view .LVU1142
 4171              	.LBB185:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4172              		.loc 2 193 1 view .LVU1143
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4173              		.loc 2 195 2 view .LVU1144
 4174              		.syntax unified
 4175              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4176 0062 4FF05003 			mov r3, #80												
 4177 0066 83F31188 		msr basepri, r3											
 4178 006a BFF36F8F 		isb														
 4179 006e BFF34F8F 		dsb														
 4180              	
 4181              	@ 0 "" 2
 4182              	.LVL291:
 4183              		.thumb
 4184              		.syntax unified
 4185              	.L307:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4186              		.loc 2 195 2 is_stmt 0 view .LVU1145
 4187              	.LBE185:
 4188              	.LBE184:
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4189              		.loc 1 3220 2 is_stmt 1 discriminator 2 view .LVU1146
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4190              		.loc 1 3220 2 discriminator 2 view .LVU1147
 4191 0072 FEE7     		b	.L307
 4192              	.L312:
 4193              		.align	2
 4194              	.L311:
 4195 0074 00000000 		.word	uxSchedulerSuspended
 4196 0078 00000000 		.word	uxTopReadyPriority
ARM GAS  /tmp/ccB9thnJ.s 			page 189


 4197 007c 00000000 		.word	pxReadyTasksLists
 4198 0080 00000000 		.word	pxCurrentTCB
 4199 0084 00000000 		.word	xYieldPending
 4200              		.cfi_endproc
 4201              	.LFE32:
 4203              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 4204              		.align	1
 4205              		.global	vTaskSetTimeOutState
 4206              		.syntax unified
 4207              		.thumb
 4208              		.thumb_func
 4210              	vTaskSetTimeOutState:
 4211              	.LVL292:
 4212              	.LFB33:
3255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
 4213              		.loc 1 3255 1 view -0
 4214              		.cfi_startproc
 4215              		@ args = 0, pretend = 0, frame = 0
 4216              		@ frame_needed = 0, uses_anonymous_args = 0
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4217              		.loc 1 3256 2 view .LVU1149
 4218 0000 60B1     		cbz	r0, .L318
3255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
 4219              		.loc 1 3255 1 is_stmt 0 discriminator 2 view .LVU1150
 4220 0002 10B5     		push	{r4, lr}
 4221              	.LCFI37:
 4222              		.cfi_def_cfa_offset 8
 4223              		.cfi_offset 4, -8
 4224              		.cfi_offset 14, -4
 4225 0004 0446     		mov	r4, r0
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4226              		.loc 1 3256 27 is_stmt 1 discriminator 2 view .LVU1151
3257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4227              		.loc 1 3257 2 discriminator 2 view .LVU1152
 4228 0006 FFF7FEFF 		bl	vPortEnterCritical
 4229              	.LVL293:
3259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 4230              		.loc 1 3259 3 discriminator 2 view .LVU1153
3259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 4231              		.loc 1 3259 29 is_stmt 0 discriminator 2 view .LVU1154
 4232 000a 094B     		ldr	r3, .L319
 4233 000c 1B68     		ldr	r3, [r3]
 4234 000e 2360     		str	r3, [r4]
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4235              		.loc 1 3260 3 is_stmt 1 discriminator 2 view .LVU1155
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4236              		.loc 1 3260 30 is_stmt 0 discriminator 2 view .LVU1156
 4237 0010 084B     		ldr	r3, .L319+4
 4238 0012 1B68     		ldr	r3, [r3]
 4239 0014 6360     		str	r3, [r4, #4]
3262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4240              		.loc 1 3262 2 is_stmt 1 discriminator 2 view .LVU1157
 4241 0016 FFF7FEFF 		bl	vPortExitCritical
 4242              	.LVL294:
3263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4243              		.loc 1 3263 1 is_stmt 0 discriminator 2 view .LVU1158
 4244 001a 10BD     		pop	{r4, pc}
ARM GAS  /tmp/ccB9thnJ.s 			page 190


 4245              	.LVL295:
 4246              	.L318:
 4247              	.LCFI38:
 4248              		.cfi_def_cfa_offset 0
 4249              		.cfi_restore 4
 4250              		.cfi_restore 14
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4251              		.loc 1 3256 2 is_stmt 1 view .LVU1159
 4252              	.LBB186:
 4253              	.LBI186:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4254              		.loc 2 191 30 view .LVU1160
 4255              	.LBB187:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4256              		.loc 2 193 1 view .LVU1161
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4257              		.loc 2 195 2 view .LVU1162
 4258              		.syntax unified
 4259              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4260 001c 4FF05003 			mov r3, #80												
 4261 0020 83F31188 		msr basepri, r3											
 4262 0024 BFF36F8F 		isb														
 4263 0028 BFF34F8F 		dsb														
 4264              	
 4265              	@ 0 "" 2
 4266              	.LVL296:
 4267              		.thumb
 4268              		.syntax unified
 4269              	.L315:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4270              		.loc 2 195 2 is_stmt 0 view .LVU1163
 4271              	.LBE187:
 4272              	.LBE186:
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4273              		.loc 1 3256 2 is_stmt 1 discriminator 1 view .LVU1164
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4274              		.loc 1 3256 2 discriminator 1 view .LVU1165
 4275 002c FEE7     		b	.L315
 4276              	.L320:
 4277 002e 00BF     		.align	2
 4278              	.L319:
 4279 0030 00000000 		.word	xNumOfOverflows
 4280 0034 00000000 		.word	xTickCount
 4281              		.cfi_endproc
 4282              	.LFE33:
 4284              		.section	.text.vTaskInternalSetTimeOutState,"ax",%progbits
 4285              		.align	1
 4286              		.global	vTaskInternalSetTimeOutState
 4287              		.syntax unified
 4288              		.thumb
 4289              		.thumb_func
 4291              	vTaskInternalSetTimeOutState:
 4292              	.LVL297:
 4293              	.LFB34:
3267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
 4294              		.loc 1 3267 1 view -0
 4295              		.cfi_startproc
ARM GAS  /tmp/ccB9thnJ.s 			page 191


 4296              		@ args = 0, pretend = 0, frame = 0
 4297              		@ frame_needed = 0, uses_anonymous_args = 0
 4298              		@ link register save eliminated.
3269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 4299              		.loc 1 3269 2 view .LVU1167
3269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 4300              		.loc 1 3269 28 is_stmt 0 view .LVU1168
 4301 0000 034B     		ldr	r3, .L322
 4302 0002 1B68     		ldr	r3, [r3]
 4303 0004 0360     		str	r3, [r0]
3270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4304              		.loc 1 3270 2 is_stmt 1 view .LVU1169
3270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4305              		.loc 1 3270 29 is_stmt 0 view .LVU1170
 4306 0006 034B     		ldr	r3, .L322+4
 4307 0008 1B68     		ldr	r3, [r3]
 4308 000a 4360     		str	r3, [r0, #4]
3271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4309              		.loc 1 3271 1 view .LVU1171
 4310 000c 7047     		bx	lr
 4311              	.L323:
 4312 000e 00BF     		.align	2
 4313              	.L322:
 4314 0010 00000000 		.word	xNumOfOverflows
 4315 0014 00000000 		.word	xTickCount
 4316              		.cfi_endproc
 4317              	.LFE34:
 4319              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
 4320              		.align	1
 4321              		.global	xTaskCheckForTimeOut
 4322              		.syntax unified
 4323              		.thumb
 4324              		.thumb_func
 4326              	xTaskCheckForTimeOut:
 4327              	.LVL298:
 4328              	.LFB35:
3275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 4329              		.loc 1 3275 1 is_stmt 1 view -0
 4330              		.cfi_startproc
 4331              		@ args = 0, pretend = 0, frame = 0
 4332              		@ frame_needed = 0, uses_anonymous_args = 0
3275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 4333              		.loc 1 3275 1 is_stmt 0 view .LVU1173
 4334 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4335              	.LCFI39:
 4336              		.cfi_def_cfa_offset 24
 4337              		.cfi_offset 3, -24
 4338              		.cfi_offset 4, -20
 4339              		.cfi_offset 5, -16
 4340              		.cfi_offset 6, -12
 4341              		.cfi_offset 7, -8
 4342              		.cfi_offset 14, -4
3276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4343              		.loc 1 3276 1 is_stmt 1 view .LVU1174
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4344              		.loc 1 3278 2 view .LVU1175
 4345 0002 C8B1     		cbz	r0, .L335
ARM GAS  /tmp/ccB9thnJ.s 			page 192


 4346 0004 0C46     		mov	r4, r1
 4347 0006 0546     		mov	r5, r0
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4348              		.loc 1 3278 27 discriminator 2 view .LVU1176
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4349              		.loc 1 3279 2 discriminator 2 view .LVU1177
 4350 0008 F9B1     		cbz	r1, .L336
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4351              		.loc 1 3279 31 discriminator 2 view .LVU1178
3281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4352              		.loc 1 3281 2 discriminator 2 view .LVU1179
 4353 000a FFF7FEFF 		bl	vPortEnterCritical
 4354              	.LVL299:
 4355              	.LBB188:
3284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 4356              		.loc 1 3284 3 discriminator 2 view .LVU1180
3284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 4357              		.loc 1 3284 20 is_stmt 0 discriminator 2 view .LVU1181
 4358 000e 1B4B     		ldr	r3, .L338
 4359 0010 1968     		ldr	r1, [r3]
 4360              	.LVL300:
3285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4361              		.loc 1 3285 3 is_stmt 1 discriminator 2 view .LVU1182
3285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4362              		.loc 1 3285 62 is_stmt 0 discriminator 2 view .LVU1183
 4363 0012 6B68     		ldr	r3, [r5, #4]
3285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4364              		.loc 1 3285 20 discriminator 2 view .LVU1184
 4365 0014 C81A     		subs	r0, r1, r3
 4366              	.LVL301:
3299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4367              		.loc 1 3299 4 is_stmt 1 discriminator 2 view .LVU1185
3299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4368              		.loc 1 3299 8 is_stmt 0 discriminator 2 view .LVU1186
 4369 0016 2268     		ldr	r2, [r4]
3299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4370              		.loc 1 3299 6 discriminator 2 view .LVU1187
 4371 0018 B2F1FF3F 		cmp	r2, #-1
 4372 001c 26D0     		beq	.L332
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4373              		.loc 1 3309 3 is_stmt 1 view .LVU1188
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4374              		.loc 1 3309 25 is_stmt 0 view .LVU1189
 4375 001e 184E     		ldr	r6, .L338+4
 4376 0020 3668     		ldr	r6, [r6]
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4377              		.loc 1 3309 5 view .LVU1190
 4378 0022 2F68     		ldr	r7, [r5]
 4379 0024 B742     		cmp	r7, r6
 4380 0026 01D0     		beq	.L330
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4381              		.loc 1 3309 56 discriminator 1 view .LVU1191
 4382 0028 8B42     		cmp	r3, r1
 4383 002a 24D9     		bls	.L333
 4384              	.L330:
3318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4385              		.loc 1 3318 8 is_stmt 1 view .LVU1192
ARM GAS  /tmp/ccB9thnJ.s 			page 193


3318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4386              		.loc 1 3318 10 is_stmt 0 view .LVU1193
 4387 002c 8242     		cmp	r2, r0
 4388 002e 15D8     		bhi	.L337
3327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
 4389              		.loc 1 3327 4 is_stmt 1 view .LVU1194
3327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
 4390              		.loc 1 3327 19 is_stmt 0 view .LVU1195
 4391 0030 0023     		movs	r3, #0
 4392 0032 2360     		str	r3, [r4]
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4393              		.loc 1 3328 4 is_stmt 1 view .LVU1196
 4394              	.LVL302:
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4395              		.loc 1 3328 12 is_stmt 0 view .LVU1197
 4396 0034 0124     		movs	r4, #1
 4397              	.LVL303:
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4398              		.loc 1 3328 12 view .LVU1198
 4399 0036 1AE0     		b	.L329
 4400              	.LVL304:
 4401              	.L335:
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4402              		.loc 1 3328 12 view .LVU1199
 4403              	.LBE188:
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4404              		.loc 1 3278 2 is_stmt 1 view .LVU1200
 4405              	.LBB189:
 4406              	.LBI189:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4407              		.loc 2 191 30 view .LVU1201
 4408              	.LBB190:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4409              		.loc 2 193 1 view .LVU1202
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4410              		.loc 2 195 2 view .LVU1203
 4411              		.syntax unified
 4412              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4413 0038 4FF05003 			mov r3, #80												
 4414 003c 83F31188 		msr basepri, r3											
 4415 0040 BFF36F8F 		isb														
 4416 0044 BFF34F8F 		dsb														
 4417              	
 4418              	@ 0 "" 2
 4419              	.LVL305:
 4420              		.thumb
 4421              		.syntax unified
 4422              	.L326:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4423              		.loc 2 195 2 is_stmt 0 view .LVU1204
 4424              	.LBE190:
 4425              	.LBE189:
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4426              		.loc 1 3278 2 is_stmt 1 discriminator 1 view .LVU1205
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4427              		.loc 1 3278 2 discriminator 1 view .LVU1206
 4428 0048 FEE7     		b	.L326
ARM GAS  /tmp/ccB9thnJ.s 			page 194


 4429              	.L336:
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4430              		.loc 1 3279 2 view .LVU1207
 4431              	.LBB191:
 4432              	.LBI191:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4433              		.loc 2 191 30 view .LVU1208
 4434              	.LBB192:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4435              		.loc 2 193 1 view .LVU1209
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4436              		.loc 2 195 2 view .LVU1210
 4437              		.syntax unified
 4438              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4439 004a 4FF05003 			mov r3, #80												
 4440 004e 83F31188 		msr basepri, r3											
 4441 0052 BFF36F8F 		isb														
 4442 0056 BFF34F8F 		dsb														
 4443              	
 4444              	@ 0 "" 2
 4445              	.LVL306:
 4446              		.thumb
 4447              		.syntax unified
 4448              	.L328:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4449              		.loc 2 195 2 is_stmt 0 view .LVU1211
 4450              	.LBE192:
 4451              	.LBE191:
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4452              		.loc 1 3279 2 is_stmt 1 discriminator 2 view .LVU1212
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4453              		.loc 1 3279 2 discriminator 2 view .LVU1213
 4454 005a FEE7     		b	.L328
 4455              	.LVL307:
 4456              	.L337:
 4457              	.LBB193:
3321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 4458              		.loc 1 3321 4 view .LVU1214
3321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 4459              		.loc 1 3321 19 is_stmt 0 view .LVU1215
 4460 005c 5B1A     		subs	r3, r3, r1
 4461 005e 1344     		add	r3, r3, r2
 4462 0060 2360     		str	r3, [r4]
3322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
 4463              		.loc 1 3322 4 is_stmt 1 view .LVU1216
 4464 0062 2846     		mov	r0, r5
 4465              	.LVL308:
3322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
 4466              		.loc 1 3322 4 is_stmt 0 view .LVU1217
 4467 0064 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 4468              	.LVL309:
3323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4469              		.loc 1 3323 4 is_stmt 1 view .LVU1218
3323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4470              		.loc 1 3323 12 is_stmt 0 view .LVU1219
 4471 0068 0024     		movs	r4, #0
 4472              	.LVL310:
ARM GAS  /tmp/ccB9thnJ.s 			page 195


3323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4473              		.loc 1 3323 12 view .LVU1220
 4474 006a 00E0     		b	.L329
 4475              	.LVL311:
 4476              	.L332:
3304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4477              		.loc 1 3304 13 view .LVU1221
 4478 006c 0024     		movs	r4, #0
 4479              	.LVL312:
 4480              	.L329:
3304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4481              		.loc 1 3304 13 view .LVU1222
 4482              	.LBE193:
3331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4483              		.loc 1 3331 2 is_stmt 1 view .LVU1223
 4484 006e FFF7FEFF 		bl	vPortExitCritical
 4485              	.LVL313:
3333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4486              		.loc 1 3333 2 view .LVU1224
3334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4487              		.loc 1 3334 1 is_stmt 0 view .LVU1225
 4488 0072 2046     		mov	r0, r4
 4489 0074 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4490              	.LVL314:
 4491              	.L333:
 4492              	.LBB194:
3316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4493              		.loc 1 3316 12 view .LVU1226
 4494 0076 0124     		movs	r4, #1
 4495              	.LVL315:
3316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4496              		.loc 1 3316 12 view .LVU1227
 4497 0078 F9E7     		b	.L329
 4498              	.L339:
 4499 007a 00BF     		.align	2
 4500              	.L338:
 4501 007c 00000000 		.word	xTickCount
 4502 0080 00000000 		.word	xNumOfOverflows
 4503              	.LBE194:
 4504              		.cfi_endproc
 4505              	.LFE35:
 4507              		.section	.text.vTaskMissedYield,"ax",%progbits
 4508              		.align	1
 4509              		.global	vTaskMissedYield
 4510              		.syntax unified
 4511              		.thumb
 4512              		.thumb_func
 4514              	vTaskMissedYield:
 4515              	.LFB36:
3338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldPending = pdTRUE;
 4516              		.loc 1 3338 1 is_stmt 1 view -0
 4517              		.cfi_startproc
 4518              		@ args = 0, pretend = 0, frame = 0
 4519              		@ frame_needed = 0, uses_anonymous_args = 0
 4520              		@ link register save eliminated.
3339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4521              		.loc 1 3339 2 view .LVU1229
ARM GAS  /tmp/ccB9thnJ.s 			page 196


3339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4522              		.loc 1 3339 16 is_stmt 0 view .LVU1230
 4523 0000 014B     		ldr	r3, .L341
 4524 0002 0122     		movs	r2, #1
 4525 0004 1A60     		str	r2, [r3]
3340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4526              		.loc 1 3340 1 view .LVU1231
 4527 0006 7047     		bx	lr
 4528              	.L342:
 4529              		.align	2
 4530              	.L341:
 4531 0008 00000000 		.word	xYieldPending
 4532              		.cfi_endproc
 4533              	.LFE36:
 4535              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 4536              		.align	1
 4537              		.global	xTaskGetCurrentTaskHandle
 4538              		.syntax unified
 4539              		.thumb
 4540              		.thumb_func
 4542              	xTaskGetCurrentTaskHandle:
 4543              	.LFB42:
3970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 4544              		.loc 1 3970 2 is_stmt 1 view -0
 4545              		.cfi_startproc
 4546              		@ args = 0, pretend = 0, frame = 0
 4547              		@ frame_needed = 0, uses_anonymous_args = 0
 4548              		@ link register save eliminated.
3971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4549              		.loc 1 3971 2 view .LVU1233
3976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4550              		.loc 1 3976 3 view .LVU1234
3976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4551              		.loc 1 3976 11 is_stmt 0 view .LVU1235
 4552 0000 014B     		ldr	r3, .L344
 4553 0002 1868     		ldr	r0, [r3]
 4554              	.LVL316:
3978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4555              		.loc 1 3978 3 is_stmt 1 view .LVU1236
3979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4556              		.loc 1 3979 2 is_stmt 0 view .LVU1237
 4557 0004 7047     		bx	lr
 4558              	.L345:
 4559 0006 00BF     		.align	2
 4560              	.L344:
 4561 0008 00000000 		.word	pxCurrentTCB
 4562              		.cfi_endproc
 4563              	.LFE42:
 4565              		.section	.text.xTaskGetSchedulerState,"ax",%progbits
 4566              		.align	1
 4567              		.global	xTaskGetSchedulerState
 4568              		.syntax unified
 4569              		.thumb
 4570              		.thumb_func
 4572              	xTaskGetSchedulerState:
 4573              	.LFB43:
3987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
ARM GAS  /tmp/ccB9thnJ.s 			page 197


 4574              		.loc 1 3987 2 is_stmt 1 view -0
 4575              		.cfi_startproc
 4576              		@ args = 0, pretend = 0, frame = 0
 4577              		@ frame_needed = 0, uses_anonymous_args = 0
 4578              		@ link register save eliminated.
3988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4579              		.loc 1 3988 2 view .LVU1239
3990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4580              		.loc 1 3990 3 view .LVU1240
3990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4581              		.loc 1 3990 25 is_stmt 0 view .LVU1241
 4582 0000 054B     		ldr	r3, .L351
 4583 0002 1B68     		ldr	r3, [r3]
3990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4584              		.loc 1 3990 5 view .LVU1242
 4585 0004 33B1     		cbz	r3, .L348
3996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4586              		.loc 1 3996 4 is_stmt 1 view .LVU1243
3996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4587              		.loc 1 3996 29 is_stmt 0 view .LVU1244
 4588 0006 054B     		ldr	r3, .L351+4
 4589 0008 1B68     		ldr	r3, [r3]
3996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4590              		.loc 1 3996 6 view .LVU1245
 4591 000a 0BB1     		cbz	r3, .L350
4002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4592              		.loc 1 4002 13 view .LVU1246
 4593 000c 0020     		movs	r0, #0
 4594              	.LVL317:
4006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4595              		.loc 1 4006 3 is_stmt 1 view .LVU1247
4007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4596              		.loc 1 4007 2 is_stmt 0 view .LVU1248
 4597 000e 7047     		bx	lr
 4598              	.LVL318:
 4599              	.L350:
3998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4600              		.loc 1 3998 13 view .LVU1249
 4601 0010 0220     		movs	r0, #2
 4602 0012 7047     		bx	lr
 4603              	.L348:
3992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4604              		.loc 1 3992 12 view .LVU1250
 4605 0014 0120     		movs	r0, #1
 4606 0016 7047     		bx	lr
 4607              	.L352:
 4608              		.align	2
 4609              	.L351:
 4610 0018 00000000 		.word	xSchedulerRunning
 4611 001c 00000000 		.word	uxSchedulerSuspended
 4612              		.cfi_endproc
 4613              	.LFE43:
 4615              		.section	.text.xTaskPriorityInherit,"ax",%progbits
 4616              		.align	1
 4617              		.global	xTaskPriorityInherit
 4618              		.syntax unified
 4619              		.thumb
ARM GAS  /tmp/ccB9thnJ.s 			page 198


 4620              		.thumb_func
 4622              	xTaskPriorityInherit:
 4623              	.LVL319:
 4624              	.LFB44:
4015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = pxMutexHolder;
 4625              		.loc 1 4015 2 is_stmt 1 view -0
 4626              		.cfi_startproc
 4627              		@ args = 0, pretend = 0, frame = 0
 4628              		@ frame_needed = 0, uses_anonymous_args = 0
4016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 4629              		.loc 1 4016 2 view .LVU1252
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4630              		.loc 1 4017 2 view .LVU1253
4022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4631              		.loc 1 4022 3 view .LVU1254
4022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4632              		.loc 1 4022 5 is_stmt 0 view .LVU1255
 4633 0000 0028     		cmp	r0, #0
 4634 0002 48D0     		beq	.L359
4015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = pxMutexHolder;
 4635              		.loc 1 4015 2 view .LVU1256
 4636 0004 38B5     		push	{r3, r4, r5, lr}
 4637              	.LCFI40:
 4638              		.cfi_def_cfa_offset 16
 4639              		.cfi_offset 3, -16
 4640              		.cfi_offset 4, -12
 4641              		.cfi_offset 5, -8
 4642              		.cfi_offset 14, -4
 4643 0006 0446     		mov	r4, r0
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4644              		.loc 1 4027 4 is_stmt 1 view .LVU1257
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4645              		.loc 1 4027 24 is_stmt 0 view .LVU1258
 4646 0008 C36A     		ldr	r3, [r0, #44]
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4647              		.loc 1 4027 51 view .LVU1259
 4648 000a 254A     		ldr	r2, .L366
 4649 000c 1268     		ldr	r2, [r2]
 4650 000e D26A     		ldr	r2, [r2, #44]
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4651              		.loc 1 4027 6 view .LVU1260
 4652 0010 9342     		cmp	r3, r2
 4653 0012 38D2     		bcs	.L355
4032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4654              		.loc 1 4032 5 is_stmt 1 view .LVU1261
4032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4655              		.loc 1 4032 11 is_stmt 0 view .LVU1262
 4656 0014 8269     		ldr	r2, [r0, #24]
4032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4657              		.loc 1 4032 7 view .LVU1263
 4658 0016 002A     		cmp	r2, #0
 4659 0018 05DB     		blt	.L356
4034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4660              		.loc 1 4034 6 is_stmt 1 view .LVU1264
 4661 001a 214A     		ldr	r2, .L366
 4662 001c 1268     		ldr	r2, [r2]
 4663 001e D26A     		ldr	r2, [r2, #44]
ARM GAS  /tmp/ccB9thnJ.s 			page 199


 4664 0020 C2F10702 		rsb	r2, r2, #7
 4665 0024 8261     		str	r2, [r0, #24]
 4666              	.L356:
4038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4667              		.loc 1 4038 30 view .LVU1265
4043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4668              		.loc 1 4043 5 view .LVU1266
4043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4669              		.loc 1 4043 9 is_stmt 0 view .LVU1267
 4670 0026 6169     		ldr	r1, [r4, #20]
 4671 0028 03EB8303 		add	r3, r3, r3, lsl #2
 4672 002c 1D4A     		ldr	r2, .L366+4
 4673 002e 02EB8303 		add	r3, r2, r3, lsl #2
4043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4674              		.loc 1 4043 7 view .LVU1268
 4675 0032 9942     		cmp	r1, r3
 4676 0034 05D0     		beq	.L365
4064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4677              		.loc 1 4064 6 is_stmt 1 view .LVU1269
4064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4678              		.loc 1 4064 49 is_stmt 0 view .LVU1270
 4679 0036 1A4B     		ldr	r3, .L366
 4680 0038 1B68     		ldr	r3, [r3]
 4681 003a DB6A     		ldr	r3, [r3, #44]
4064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4682              		.loc 1 4064 35 view .LVU1271
 4683 003c E362     		str	r3, [r4, #44]
4070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4684              		.loc 1 4070 13 view .LVU1272
 4685 003e 0120     		movs	r0, #1
 4686              	.LVL320:
 4687              	.L353:
4097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4688              		.loc 1 4097 2 view .LVU1273
 4689 0040 38BD     		pop	{r3, r4, r5, pc}
 4690              	.LVL321:
 4691              	.L365:
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4692              		.loc 1 4045 6 is_stmt 1 view .LVU1274
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4693              		.loc 1 4045 10 is_stmt 0 view .LVU1275
 4694 0042 251D     		adds	r5, r4, #4
 4695 0044 2846     		mov	r0, r5
 4696              	.LVL322:
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4697              		.loc 1 4045 10 view .LVU1276
 4698 0046 FFF7FEFF 		bl	uxListRemove
 4699              	.LVL323:
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4700              		.loc 1 4045 8 view .LVU1277
 4701 004a 38B9     		cbnz	r0, .L358
4050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4702              		.loc 1 4050 7 is_stmt 1 view .LVU1278
 4703 004c E36A     		ldr	r3, [r4, #44]
 4704 004e 0122     		movs	r2, #1
 4705 0050 9A40     		lsls	r2, r2, r3
 4706 0052 1549     		ldr	r1, .L366+8
ARM GAS  /tmp/ccB9thnJ.s 			page 200


 4707 0054 0B68     		ldr	r3, [r1]
 4708 0056 23EA0203 		bic	r3, r3, r2
 4709 005a 0B60     		str	r3, [r1]
 4710              	.L358:
4054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4711              		.loc 1 4054 31 view .LVU1279
4058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 4712              		.loc 1 4058 6 view .LVU1280
4058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 4713              		.loc 1 4058 49 is_stmt 0 view .LVU1281
 4714 005c 104B     		ldr	r3, .L366
 4715 005e 1B68     		ldr	r3, [r3]
 4716 0060 D86A     		ldr	r0, [r3, #44]
4058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 4717              		.loc 1 4058 35 view .LVU1282
 4718 0062 E062     		str	r0, [r4, #44]
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4719              		.loc 1 4059 6 is_stmt 1 view .LVU1283
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4720              		.loc 1 4059 6 view .LVU1284
 4721 0064 0124     		movs	r4, #1
 4722              	.LVL324:
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4723              		.loc 1 4059 6 is_stmt 0 view .LVU1285
 4724 0066 04FA00F3 		lsl	r3, r4, r0
 4725 006a 0F4A     		ldr	r2, .L366+8
 4726 006c 1168     		ldr	r1, [r2]
 4727 006e 0B43     		orrs	r3, r3, r1
 4728 0070 1360     		str	r3, [r2]
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4729              		.loc 1 4059 6 is_stmt 1 view .LVU1286
 4730 0072 00EB8000 		add	r0, r0, r0, lsl #2
 4731 0076 2946     		mov	r1, r5
 4732 0078 0A4B     		ldr	r3, .L366+4
 4733 007a 03EB8000 		add	r0, r3, r0, lsl #2
 4734 007e FFF7FEFF 		bl	vListInsertEnd
 4735              	.LVL325:
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4736              		.loc 1 4059 47 view .LVU1287
4070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4737              		.loc 1 4070 13 is_stmt 0 view .LVU1288
 4738 0082 2046     		mov	r0, r4
 4739 0084 DCE7     		b	.L353
 4740              	.LVL326:
 4741              	.L355:
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4742              		.loc 1 4074 5 is_stmt 1 view .LVU1289
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4743              		.loc 1 4074 25 is_stmt 0 view .LVU1290
 4744 0086 426C     		ldr	r2, [r0, #68]
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4745              		.loc 1 4074 56 view .LVU1291
 4746 0088 054B     		ldr	r3, .L366
 4747 008a 1B68     		ldr	r3, [r3]
 4748 008c DB6A     		ldr	r3, [r3, #44]
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4749              		.loc 1 4074 7 view .LVU1292
ARM GAS  /tmp/ccB9thnJ.s 			page 201


 4750 008e 9A42     		cmp	r2, r3
 4751 0090 03D3     		bcc	.L360
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4752              		.loc 1 4017 13 view .LVU1293
 4753 0092 0020     		movs	r0, #0
 4754              	.LVL327:
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4755              		.loc 1 4017 13 view .LVU1294
 4756 0094 D4E7     		b	.L353
 4757              	.LVL328:
 4758              	.L359:
 4759              	.LCFI41:
 4760              		.cfi_def_cfa_offset 0
 4761              		.cfi_restore 3
 4762              		.cfi_restore 4
 4763              		.cfi_restore 5
 4764              		.cfi_restore 14
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4765              		.loc 1 4017 13 view .LVU1295
 4766 0096 0020     		movs	r0, #0
 4767              	.LVL329:
4097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4768              		.loc 1 4097 2 view .LVU1296
 4769 0098 7047     		bx	lr
 4770              	.LVL330:
 4771              	.L360:
 4772              	.LCFI42:
 4773              		.cfi_def_cfa_offset 16
 4774              		.cfi_offset 3, -16
 4775              		.cfi_offset 4, -12
 4776              		.cfi_offset 5, -8
 4777              		.cfi_offset 14, -4
4083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4778              		.loc 1 4083 14 view .LVU1297
 4779 009a 0120     		movs	r0, #1
 4780              	.LVL331:
4093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4781              		.loc 1 4093 28 is_stmt 1 view .LVU1298
4096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4782              		.loc 1 4096 3 view .LVU1299
4096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4783              		.loc 1 4096 10 is_stmt 0 view .LVU1300
 4784 009c D0E7     		b	.L353
 4785              	.L367:
 4786 009e 00BF     		.align	2
 4787              	.L366:
 4788 00a0 00000000 		.word	pxCurrentTCB
 4789 00a4 00000000 		.word	pxReadyTasksLists
 4790 00a8 00000000 		.word	uxTopReadyPriority
 4791              		.cfi_endproc
 4792              	.LFE44:
 4794              		.section	.text.xTaskPriorityDisinherit,"ax",%progbits
 4795              		.align	1
 4796              		.global	xTaskPriorityDisinherit
 4797              		.syntax unified
 4798              		.thumb
 4799              		.thumb_func
ARM GAS  /tmp/ccB9thnJ.s 			page 202


 4801              	xTaskPriorityDisinherit:
 4802              	.LVL332:
 4803              	.LFB45:
4105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
 4804              		.loc 1 4105 2 is_stmt 1 view -0
 4805              		.cfi_startproc
 4806              		@ args = 0, pretend = 0, frame = 0
 4807              		@ frame_needed = 0, uses_anonymous_args = 0
4106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 4808              		.loc 1 4106 2 view .LVU1302
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4809              		.loc 1 4107 2 view .LVU1303
4109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4810              		.loc 1 4109 3 view .LVU1304
4109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4811              		.loc 1 4109 5 is_stmt 0 view .LVU1305
 4812 0000 0028     		cmp	r0, #0
 4813 0002 4BD0     		beq	.L375
4105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
 4814              		.loc 1 4105 2 view .LVU1306
 4815 0004 38B5     		push	{r3, r4, r5, lr}
 4816              	.LCFI43:
 4817              		.cfi_def_cfa_offset 16
 4818              		.cfi_offset 3, -16
 4819              		.cfi_offset 4, -12
 4820              		.cfi_offset 5, -8
 4821              		.cfi_offset 14, -4
 4822 0006 0446     		mov	r4, r0
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4823              		.loc 1 4115 4 is_stmt 1 view .LVU1307
 4824 0008 264B     		ldr	r3, .L383
 4825 000a 1B68     		ldr	r3, [r3]
 4826 000c 8342     		cmp	r3, r0
 4827 000e 08D0     		beq	.L370
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4828              		.loc 1 4115 4 view .LVU1308
 4829              	.LBB195:
 4830              	.LBI195:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4831              		.loc 2 191 30 view .LVU1309
 4832              	.LBB196:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4833              		.loc 2 193 1 view .LVU1310
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4834              		.loc 2 195 2 view .LVU1311
 4835              		.syntax unified
 4836              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4837 0010 4FF05003 			mov r3, #80												
 4838 0014 83F31188 		msr basepri, r3											
 4839 0018 BFF36F8F 		isb														
 4840 001c BFF34F8F 		dsb														
 4841              	
 4842              	@ 0 "" 2
 4843              	.LVL333:
 4844              		.thumb
 4845              		.syntax unified
 4846              	.L371:
ARM GAS  /tmp/ccB9thnJ.s 			page 203


 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4847              		.loc 2 195 2 is_stmt 0 view .LVU1312
 4848              	.LBE196:
 4849              	.LBE195:
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4850              		.loc 1 4115 4 is_stmt 1 discriminator 1 view .LVU1313
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4851              		.loc 1 4115 4 discriminator 1 view .LVU1314
 4852 0020 FEE7     		b	.L371
 4853              	.L370:
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4854              		.loc 1 4115 41 discriminator 2 view .LVU1315
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4855              		.loc 1 4116 4 discriminator 2 view .LVU1316
 4856 0022 836C     		ldr	r3, [r0, #72]
 4857 0024 43B9     		cbnz	r3, .L372
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4858              		.loc 1 4116 4 view .LVU1317
 4859              	.LBB197:
 4860              	.LBI197:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4861              		.loc 2 191 30 view .LVU1318
 4862              	.LBB198:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4863              		.loc 2 193 1 view .LVU1319
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4864              		.loc 2 195 2 view .LVU1320
 4865              		.syntax unified
 4866              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4867 0026 4FF05003 			mov r3, #80												
 4868 002a 83F31188 		msr basepri, r3											
 4869 002e BFF36F8F 		isb														
 4870 0032 BFF34F8F 		dsb														
 4871              	
 4872              	@ 0 "" 2
 4873              	.LVL334:
 4874              		.thumb
 4875              		.syntax unified
 4876              	.L373:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4877              		.loc 2 195 2 is_stmt 0 view .LVU1321
 4878              	.LBE198:
 4879              	.LBE197:
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4880              		.loc 1 4116 4 is_stmt 1 discriminator 2 view .LVU1322
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4881              		.loc 1 4116 4 discriminator 2 view .LVU1323
 4882 0036 FEE7     		b	.L373
 4883              	.L372:
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4884              		.loc 1 4116 40 discriminator 2 view .LVU1324
4117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4885              		.loc 1 4117 4 discriminator 2 view .LVU1325
4117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4886              		.loc 1 4117 28 is_stmt 0 discriminator 2 view .LVU1326
 4887 0038 013B     		subs	r3, r3, #1
 4888 003a 8364     		str	r3, [r0, #72]
ARM GAS  /tmp/ccB9thnJ.s 			page 204


4121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4889              		.loc 1 4121 4 is_stmt 1 discriminator 2 view .LVU1327
4121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4890              		.loc 1 4121 13 is_stmt 0 discriminator 2 view .LVU1328
 4891 003c C16A     		ldr	r1, [r0, #44]
4121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4892              		.loc 1 4121 34 discriminator 2 view .LVU1329
 4893 003e 426C     		ldr	r2, [r0, #68]
4121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4894              		.loc 1 4121 6 discriminator 2 view .LVU1330
 4895 0040 9142     		cmp	r1, r2
 4896 0042 2DD0     		beq	.L376
4124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4897              		.loc 1 4124 5 is_stmt 1 view .LVU1331
4124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4898              		.loc 1 4124 7 is_stmt 0 view .LVU1332
 4899 0044 0BB1     		cbz	r3, .L382
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4900              		.loc 1 4107 13 view .LVU1333
 4901 0046 0020     		movs	r0, #0
 4902              	.LVL335:
4173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4903              		.loc 1 4173 28 is_stmt 1 view .LVU1334
4176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4904              		.loc 1 4176 3 view .LVU1335
 4905              	.L368:
4177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4906              		.loc 1 4177 2 is_stmt 0 view .LVU1336
 4907 0048 38BD     		pop	{r3, r4, r5, pc}
 4908              	.LVL336:
 4909              	.L382:
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4910              		.loc 1 4131 6 is_stmt 1 view .LVU1337
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4911              		.loc 1 4131 10 is_stmt 0 view .LVU1338
 4912 004a 051D     		adds	r5, r0, #4
 4913 004c 2846     		mov	r0, r5
 4914              	.LVL337:
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4915              		.loc 1 4131 10 view .LVU1339
 4916 004e FFF7FEFF 		bl	uxListRemove
 4917              	.LVL338:
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4918              		.loc 1 4131 8 view .LVU1340
 4919 0052 68B9     		cbnz	r0, .L374
4133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4920              		.loc 1 4133 7 is_stmt 1 view .LVU1341
 4921 0054 E36A     		ldr	r3, [r4, #44]
 4922 0056 03EB8302 		add	r2, r3, r3, lsl #2
 4923 005a 9200     		lsls	r2, r2, #2
 4924 005c 1249     		ldr	r1, .L383+4
 4925 005e 8A58     		ldr	r2, [r1, r2]
 4926 0060 32B9     		cbnz	r2, .L374
4133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4927              		.loc 1 4133 7 discriminator 1 view .LVU1342
 4928 0062 0122     		movs	r2, #1
 4929 0064 9A40     		lsls	r2, r2, r3
ARM GAS  /tmp/ccB9thnJ.s 			page 205


 4930 0066 1149     		ldr	r1, .L383+8
 4931 0068 0B68     		ldr	r3, [r1]
 4932 006a 23EA0203 		bic	r3, r3, r2
 4933 006e 0B60     		str	r3, [r1]
 4934              	.L374:
4137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4935              		.loc 1 4137 31 view .LVU1343
4142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
 4936              		.loc 1 4142 67 view .LVU1344
4143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4937              		.loc 1 4143 6 view .LVU1345
4143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4938              		.loc 1 4143 31 is_stmt 0 view .LVU1346
 4939 0070 606C     		ldr	r0, [r4, #68]
4143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4940              		.loc 1 4143 24 view .LVU1347
 4941 0072 E062     		str	r0, [r4, #44]
4148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4942              		.loc 1 4148 6 is_stmt 1 view .LVU1348
 4943 0074 C0F10703 		rsb	r3, r0, #7
 4944 0078 A361     		str	r3, [r4, #24]
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4945              		.loc 1 4149 6 view .LVU1349
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4946              		.loc 1 4149 6 view .LVU1350
 4947 007a 0124     		movs	r4, #1
 4948              	.LVL339:
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4949              		.loc 1 4149 6 is_stmt 0 view .LVU1351
 4950 007c 04FA00F3 		lsl	r3, r4, r0
 4951 0080 0A4A     		ldr	r2, .L383+8
 4952 0082 1168     		ldr	r1, [r2]
 4953 0084 0B43     		orrs	r3, r3, r1
 4954 0086 1360     		str	r3, [r2]
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4955              		.loc 1 4149 6 is_stmt 1 view .LVU1352
 4956 0088 00EB8000 		add	r0, r0, r0, lsl #2
 4957 008c 2946     		mov	r1, r5
 4958 008e 064B     		ldr	r3, .L383+4
 4959 0090 03EB8000 		add	r0, r3, r0, lsl #2
 4960 0094 FFF7FEFF 		bl	vListInsertEnd
 4961              	.LVL340:
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4962              		.loc 1 4149 36 view .LVU1353
4159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4963              		.loc 1 4159 6 view .LVU1354
4159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4964              		.loc 1 4159 14 is_stmt 0 view .LVU1355
 4965 0098 2046     		mov	r0, r4
 4966 009a D5E7     		b	.L368
 4967              	.LVL341:
 4968              	.L375:
 4969              	.LCFI44:
 4970              		.cfi_def_cfa_offset 0
 4971              		.cfi_restore 3
 4972              		.cfi_restore 4
 4973              		.cfi_restore 5
ARM GAS  /tmp/ccB9thnJ.s 			page 206


 4974              		.cfi_restore 14
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4975              		.loc 1 4107 13 view .LVU1356
 4976 009c 0020     		movs	r0, #0
 4977              	.LVL342:
4177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4978              		.loc 1 4177 2 view .LVU1357
 4979 009e 7047     		bx	lr
 4980              	.LVL343:
 4981              	.L376:
 4982              	.LCFI45:
 4983              		.cfi_def_cfa_offset 16
 4984              		.cfi_offset 3, -16
 4985              		.cfi_offset 4, -12
 4986              		.cfi_offset 5, -8
 4987              		.cfi_offset 14, -4
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4988              		.loc 1 4107 13 view .LVU1358
 4989 00a0 0020     		movs	r0, #0
 4990              	.LVL344:
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4991              		.loc 1 4107 13 view .LVU1359
 4992 00a2 D1E7     		b	.L368
 4993              	.L384:
 4994              		.align	2
 4995              	.L383:
 4996 00a4 00000000 		.word	pxCurrentTCB
 4997 00a8 00000000 		.word	pxReadyTasksLists
 4998 00ac 00000000 		.word	uxTopReadyPriority
 4999              		.cfi_endproc
 5000              	.LFE45:
 5002              		.section	.text.vTaskPriorityDisinheritAfterTimeout,"ax",%progbits
 5003              		.align	1
 5004              		.global	vTaskPriorityDisinheritAfterTimeout
 5005              		.syntax unified
 5006              		.thumb
 5007              		.thumb_func
 5009              	vTaskPriorityDisinheritAfterTimeout:
 5010              	.LVL345:
 5011              	.LFB46:
4185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
 5012              		.loc 1 4185 2 is_stmt 1 view -0
 5013              		.cfi_startproc
 5014              		@ args = 0, pretend = 0, frame = 0
 5015              		@ frame_needed = 0, uses_anonymous_args = 0
4186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
 5016              		.loc 1 4186 2 view .LVU1361
4187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
 5017              		.loc 1 4187 2 view .LVU1362
4188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5018              		.loc 1 4188 2 view .LVU1363
4190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5019              		.loc 1 4190 3 view .LVU1364
4190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5020              		.loc 1 4190 5 is_stmt 0 view .LVU1365
 5021 0000 0028     		cmp	r0, #0
 5022 0002 4FD0     		beq	.L395
ARM GAS  /tmp/ccB9thnJ.s 			page 207


4185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
 5023              		.loc 1 4185 2 view .LVU1366
 5024 0004 38B5     		push	{r3, r4, r5, lr}
 5025              	.LCFI46:
 5026              		.cfi_def_cfa_offset 16
 5027              		.cfi_offset 3, -16
 5028              		.cfi_offset 4, -12
 5029              		.cfi_offset 5, -8
 5030              		.cfi_offset 14, -4
 5031 0006 0446     		mov	r4, r0
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5032              		.loc 1 4194 4 is_stmt 1 view .LVU1367
 5033 0008 836C     		ldr	r3, [r0, #72]
 5034 000a 43B9     		cbnz	r3, .L387
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5035              		.loc 1 4194 4 view .LVU1368
 5036              	.LBB199:
 5037              	.LBI199:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5038              		.loc 2 191 30 view .LVU1369
 5039              	.LBB200:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5040              		.loc 2 193 1 view .LVU1370
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5041              		.loc 2 195 2 view .LVU1371
 5042              		.syntax unified
 5043              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5044 000c 4FF05003 			mov r3, #80												
 5045 0010 83F31188 		msr basepri, r3											
 5046 0014 BFF36F8F 		isb														
 5047 0018 BFF34F8F 		dsb														
 5048              	
 5049              	@ 0 "" 2
 5050              	.LVL346:
 5051              		.thumb
 5052              		.syntax unified
 5053              	.L388:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5054              		.loc 2 195 2 is_stmt 0 view .LVU1372
 5055              	.LBE200:
 5056              	.LBE199:
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5057              		.loc 1 4194 4 is_stmt 1 discriminator 1 view .LVU1373
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5058              		.loc 1 4194 4 discriminator 1 view .LVU1374
 5059 001c FEE7     		b	.L388
 5060              	.L387:
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5061              		.loc 1 4194 40 discriminator 2 view .LVU1375
4200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5062              		.loc 1 4200 4 discriminator 2 view .LVU1376
4200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5063              		.loc 1 4200 13 is_stmt 0 discriminator 2 view .LVU1377
 5064 001e 426C     		ldr	r2, [r0, #68]
4200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5065              		.loc 1 4200 6 discriminator 2 view .LVU1378
 5066 0020 8A42     		cmp	r2, r1
ARM GAS  /tmp/ccB9thnJ.s 			page 208


 5067 0022 00D2     		bcs	.L389
4202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5068              		.loc 1 4202 21 view .LVU1379
 5069 0024 0A46     		mov	r2, r1
 5070              	.L389:
 5071              	.LVL347:
4210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5072              		.loc 1 4210 4 is_stmt 1 view .LVU1380
4210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5073              		.loc 1 4210 13 is_stmt 0 view .LVU1381
 5074 0026 E16A     		ldr	r1, [r4, #44]
 5075              	.LVL348:
4210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5076              		.loc 1 4210 6 view .LVU1382
 5077 0028 9142     		cmp	r1, r2
 5078 002a 01D0     		beq	.L385
4216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5079              		.loc 1 4216 5 is_stmt 1 view .LVU1383
4216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5080              		.loc 1 4216 7 is_stmt 0 view .LVU1384
 5081 002c 012B     		cmp	r3, #1
 5082 002e 00D0     		beq	.L398
 5083              	.LVL349:
 5084              	.L385:
4282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5085              		.loc 1 4282 2 view .LVU1385
 5086 0030 38BD     		pop	{r3, r4, r5, pc}
 5087              	.LVL350:
 5088              	.L398:
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5089              		.loc 1 4221 6 is_stmt 1 view .LVU1386
 5090 0032 1D4B     		ldr	r3, .L400
 5091 0034 1B68     		ldr	r3, [r3]
 5092 0036 A342     		cmp	r3, r4
 5093 0038 2BD0     		beq	.L399
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5094              		.loc 1 4221 43 discriminator 2 view .LVU1387
4226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
 5095              		.loc 1 4226 67 discriminator 2 view .LVU1388
4227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
 5096              		.loc 1 4227 6 discriminator 2 view .LVU1389
 5097              	.LVL351:
4228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5098              		.loc 1 4228 6 discriminator 2 view .LVU1390
4228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5099              		.loc 1 4228 24 is_stmt 0 discriminator 2 view .LVU1391
 5100 003a E262     		str	r2, [r4, #44]
4232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5101              		.loc 1 4232 6 is_stmt 1 discriminator 2 view .LVU1392
4232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5102              		.loc 1 4232 12 is_stmt 0 discriminator 2 view .LVU1393
 5103 003c A369     		ldr	r3, [r4, #24]
4232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5104              		.loc 1 4232 8 discriminator 2 view .LVU1394
 5105 003e 002B     		cmp	r3, #0
 5106 0040 02DB     		blt	.L392
4234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
ARM GAS  /tmp/ccB9thnJ.s 			page 209


 5107              		.loc 1 4234 7 is_stmt 1 view .LVU1395
 5108 0042 C2F10702 		rsb	r2, r2, #7
 5109              	.LVL352:
4234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5110              		.loc 1 4234 7 is_stmt 0 view .LVU1396
 5111 0046 A261     		str	r2, [r4, #24]
 5112              	.L392:
4238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5113              		.loc 1 4238 31 is_stmt 1 view .LVU1397
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5114              		.loc 1 4247 6 view .LVU1398
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5115              		.loc 1 4247 10 is_stmt 0 view .LVU1399
 5116 0048 6269     		ldr	r2, [r4, #20]
 5117 004a 01EB8101 		add	r1, r1, r1, lsl #2
 5118              	.LVL353:
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5119              		.loc 1 4247 10 view .LVU1400
 5120 004e 174B     		ldr	r3, .L400+4
 5121 0050 03EB8103 		add	r3, r3, r1, lsl #2
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5122              		.loc 1 4247 8 view .LVU1401
 5123 0054 9A42     		cmp	r2, r3
 5124 0056 EBD1     		bne	.L385
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 5125              		.loc 1 4249 7 is_stmt 1 view .LVU1402
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 5126              		.loc 1 4249 11 is_stmt 0 view .LVU1403
 5127 0058 251D     		adds	r5, r4, #4
 5128 005a 2846     		mov	r0, r5
 5129              	.LVL354:
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 5130              		.loc 1 4249 11 view .LVU1404
 5131 005c FFF7FEFF 		bl	uxListRemove
 5132              	.LVL355:
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 5133              		.loc 1 4249 9 view .LVU1405
 5134 0060 38B9     		cbnz	r0, .L393
4254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 5135              		.loc 1 4254 8 is_stmt 1 view .LVU1406
 5136 0062 E36A     		ldr	r3, [r4, #44]
 5137 0064 0122     		movs	r2, #1
 5138 0066 9A40     		lsls	r2, r2, r3
 5139 0068 1149     		ldr	r1, .L400+8
 5140 006a 0B68     		ldr	r3, [r1]
 5141 006c 23EA0203 		bic	r3, r3, r2
 5142 0070 0B60     		str	r3, [r1]
 5143              	.L393:
4258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 5144              		.loc 1 4258 32 view .LVU1407
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5145              		.loc 1 4261 7 view .LVU1408
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5146              		.loc 1 4261 7 view .LVU1409
 5147 0072 E06A     		ldr	r0, [r4, #44]
 5148 0074 0123     		movs	r3, #1
 5149 0076 8340     		lsls	r3, r3, r0
ARM GAS  /tmp/ccB9thnJ.s 			page 210


 5150 0078 0D4A     		ldr	r2, .L400+8
 5151 007a 1168     		ldr	r1, [r2]
 5152 007c 0B43     		orrs	r3, r3, r1
 5153 007e 1360     		str	r3, [r2]
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5154              		.loc 1 4261 7 view .LVU1410
 5155 0080 00EB8000 		add	r0, r0, r0, lsl #2
 5156 0084 2946     		mov	r1, r5
 5157 0086 094B     		ldr	r3, .L400+4
 5158 0088 03EB8000 		add	r0, r3, r0, lsl #2
 5159 008c FFF7FEFF 		bl	vListInsertEnd
 5160              	.LVL356:
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5161              		.loc 1 4261 37 view .LVU1411
4280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5162              		.loc 1 4280 28 view .LVU1412
4282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5163              		.loc 1 4282 2 is_stmt 0 view .LVU1413
 5164 0090 CEE7     		b	.L385
 5165              	.LVL357:
 5166              	.L399:
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5167              		.loc 1 4221 6 is_stmt 1 view .LVU1414
 5168              	.LBB201:
 5169              	.LBI201:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5170              		.loc 2 191 30 view .LVU1415
 5171              	.LBB202:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5172              		.loc 2 193 1 view .LVU1416
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5173              		.loc 2 195 2 view .LVU1417
 5174              		.syntax unified
 5175              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5176 0092 4FF05003 			mov r3, #80												
 5177 0096 83F31188 		msr basepri, r3											
 5178 009a BFF36F8F 		isb														
 5179 009e BFF34F8F 		dsb														
 5180              	
 5181              	@ 0 "" 2
 5182              	.LVL358:
 5183              		.thumb
 5184              		.syntax unified
 5185              	.L391:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5186              		.loc 2 195 2 is_stmt 0 view .LVU1418
 5187              	.LBE202:
 5188              	.LBE201:
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5189              		.loc 1 4221 6 is_stmt 1 discriminator 2 view .LVU1419
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5190              		.loc 1 4221 6 discriminator 2 view .LVU1420
 5191 00a2 FEE7     		b	.L391
 5192              	.LVL359:
 5193              	.L395:
 5194              	.LCFI47:
 5195              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccB9thnJ.s 			page 211


 5196              		.cfi_restore 3
 5197              		.cfi_restore 4
 5198              		.cfi_restore 5
 5199              		.cfi_restore 14
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5200              		.loc 1 4221 6 is_stmt 0 discriminator 2 view .LVU1421
 5201 00a4 7047     		bx	lr
 5202              	.L401:
 5203 00a6 00BF     		.align	2
 5204              	.L400:
 5205 00a8 00000000 		.word	pxCurrentTCB
 5206 00ac 00000000 		.word	pxReadyTasksLists
 5207 00b0 00000000 		.word	uxTopReadyPriority
 5208              		.cfi_endproc
 5209              	.LFE46:
 5211              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
 5212              		.align	1
 5213              		.global	uxTaskResetEventItemValue
 5214              		.syntax unified
 5215              		.thumb
 5216              		.thumb_func
 5218              	uxTaskResetEventItemValue:
 5219              	.LFB47:
4603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxReturn;
 5220              		.loc 1 4603 1 is_stmt 1 view -0
 5221              		.cfi_startproc
 5222              		@ args = 0, pretend = 0, frame = 0
 5223              		@ frame_needed = 0, uses_anonymous_args = 0
 5224              		@ link register save eliminated.
4604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5225              		.loc 1 4604 1 view .LVU1423
4606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5226              		.loc 1 4606 2 view .LVU1424
4606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5227              		.loc 1 4606 13 is_stmt 0 view .LVU1425
 5228 0000 044A     		ldr	r2, .L403
 5229 0002 1368     		ldr	r3, [r2]
4606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5230              		.loc 1 4606 11 view .LVU1426
 5231 0004 9869     		ldr	r0, [r3, #24]
 5232              	.LVL360:
4610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5233              		.loc 1 4610 2 is_stmt 1 view .LVU1427
 5234 0006 1368     		ldr	r3, [r2]
 5235 0008 DB6A     		ldr	r3, [r3, #44]
 5236 000a 1268     		ldr	r2, [r2]
 5237 000c C3F10703 		rsb	r3, r3, #7
 5238 0010 9361     		str	r3, [r2, #24]
4612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 5239              		.loc 1 4612 2 view .LVU1428
4613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 5240              		.loc 1 4613 1 is_stmt 0 view .LVU1429
 5241 0012 7047     		bx	lr
 5242              	.L404:
 5243              		.align	2
 5244              	.L403:
 5245 0014 00000000 		.word	pxCurrentTCB
ARM GAS  /tmp/ccB9thnJ.s 			page 212


 5246              		.cfi_endproc
 5247              	.LFE47:
 5249              		.section	.text.pvTaskIncrementMutexHeldCount,"ax",%progbits
 5250              		.align	1
 5251              		.global	pvTaskIncrementMutexHeldCount
 5252              		.syntax unified
 5253              		.thumb
 5254              		.thumb_func
 5256              	pvTaskIncrementMutexHeldCount:
 5257              	.LFB48:
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
 5258              		.loc 1 4619 2 is_stmt 1 view -0
 5259              		.cfi_startproc
 5260              		@ args = 0, pretend = 0, frame = 0
 5261              		@ frame_needed = 0, uses_anonymous_args = 0
 5262              		@ link register save eliminated.
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5263              		.loc 1 4622 3 view .LVU1431
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5264              		.loc 1 4622 20 is_stmt 0 view .LVU1432
 5265 0000 054B     		ldr	r3, .L407
 5266 0002 1B68     		ldr	r3, [r3]
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5267              		.loc 1 4622 5 view .LVU1433
 5268 0004 23B1     		cbz	r3, .L406
4624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5269              		.loc 1 4624 4 is_stmt 1 view .LVU1434
4624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5270              		.loc 1 4624 18 is_stmt 0 view .LVU1435
 5271 0006 044B     		ldr	r3, .L407
 5272 0008 1A68     		ldr	r2, [r3]
 5273 000a 936C     		ldr	r3, [r2, #72]
4624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5274              		.loc 1 4624 35 view .LVU1436
 5275 000c 0133     		adds	r3, r3, #1
 5276 000e 9364     		str	r3, [r2, #72]
 5277              	.L406:
4627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5278              		.loc 1 4627 3 is_stmt 1 view .LVU1437
4627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5279              		.loc 1 4627 10 is_stmt 0 view .LVU1438
 5280 0010 014B     		ldr	r3, .L407
 5281 0012 1868     		ldr	r0, [r3]
4628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5282              		.loc 1 4628 2 view .LVU1439
 5283 0014 7047     		bx	lr
 5284              	.L408:
 5285 0016 00BF     		.align	2
 5286              	.L407:
 5287 0018 00000000 		.word	pxCurrentTCB
 5288              		.cfi_endproc
 5289              	.LFE48:
 5291              		.section	.text.ulTaskNotifyTake,"ax",%progbits
 5292              		.align	1
 5293              		.global	ulTaskNotifyTake
 5294              		.syntax unified
 5295              		.thumb
ARM GAS  /tmp/ccB9thnJ.s 			page 213


 5296              		.thumb_func
 5298              	ulTaskNotifyTake:
 5299              	.LVL361:
 5300              	.LFB49:
4636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 5301              		.loc 1 4636 2 is_stmt 1 view -0
 5302              		.cfi_startproc
 5303              		@ args = 0, pretend = 0, frame = 0
 5304              		@ frame_needed = 0, uses_anonymous_args = 0
4636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 5305              		.loc 1 4636 2 is_stmt 0 view .LVU1441
 5306 0000 38B5     		push	{r3, r4, r5, lr}
 5307              	.LCFI48:
 5308              		.cfi_def_cfa_offset 16
 5309              		.cfi_offset 3, -16
 5310              		.cfi_offset 4, -12
 5311              		.cfi_offset 5, -8
 5312              		.cfi_offset 14, -4
 5313 0002 0546     		mov	r5, r0
 5314 0004 0C46     		mov	r4, r1
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5315              		.loc 1 4637 2 is_stmt 1 view .LVU1442
4639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5316              		.loc 1 4639 3 view .LVU1443
 5317 0006 FFF7FEFF 		bl	vPortEnterCritical
 5318              	.LVL362:
4642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5319              		.loc 1 4642 4 view .LVU1444
4642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5320              		.loc 1 4642 20 is_stmt 0 view .LVU1445
 5321 000a 1C4B     		ldr	r3, .L415
 5322 000c 1B68     		ldr	r3, [r3]
 5323 000e D3F87031 		ldr	r3, [r3, #368]
4642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5324              		.loc 1 4642 6 view .LVU1446
 5325 0012 2BB9     		cbnz	r3, .L410
4645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5326              		.loc 1 4645 5 is_stmt 1 view .LVU1447
4645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5327              		.loc 1 4645 17 is_stmt 0 view .LVU1448
 5328 0014 194B     		ldr	r3, .L415
 5329 0016 1B68     		ldr	r3, [r3]
4645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5330              		.loc 1 4645 33 view .LVU1449
 5331 0018 0122     		movs	r2, #1
 5332 001a 83F87421 		strb	r2, [r3, #372]
4647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5333              		.loc 1 4647 5 is_stmt 1 view .LVU1450
4647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5334              		.loc 1 4647 7 is_stmt 0 view .LVU1451
 5335 001e BCB9     		cbnz	r4, .L414
 5336              	.L410:
4665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5337              		.loc 1 4665 29 is_stmt 1 view .LVU1452
4668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5338              		.loc 1 4668 3 view .LVU1453
 5339 0020 FFF7FEFF 		bl	vPortExitCritical
ARM GAS  /tmp/ccB9thnJ.s 			page 214


 5340              	.LVL363:
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5341              		.loc 1 4670 3 view .LVU1454
 5342 0024 FFF7FEFF 		bl	vPortEnterCritical
 5343              	.LVL364:
4672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
 5344              		.loc 1 4672 27 view .LVU1455
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5345              		.loc 1 4673 4 view .LVU1456
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5346              		.loc 1 4673 27 is_stmt 0 view .LVU1457
 5347 0028 144B     		ldr	r3, .L415
 5348 002a 1B68     		ldr	r3, [r3]
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5349              		.loc 1 4673 13 view .LVU1458
 5350 002c D3F87041 		ldr	r4, [r3, #368]
 5351              	.LVL365:
4675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5352              		.loc 1 4675 4 is_stmt 1 view .LVU1459
4675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5353              		.loc 1 4675 6 is_stmt 0 view .LVU1460
 5354 0030 2CB1     		cbz	r4, .L411
4677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5355              		.loc 1 4677 5 is_stmt 1 view .LVU1461
4677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5356              		.loc 1 4677 7 is_stmt 0 view .LVU1462
 5357 0032 E5B1     		cbz	r5, .L412
4679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5358              		.loc 1 4679 6 is_stmt 1 view .LVU1463
4679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5359              		.loc 1 4679 18 is_stmt 0 view .LVU1464
 5360 0034 114B     		ldr	r3, .L415
 5361 0036 1B68     		ldr	r3, [r3]
4679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5362              		.loc 1 4679 36 view .LVU1465
 5363 0038 0022     		movs	r2, #0
 5364 003a C3F87021 		str	r2, [r3, #368]
 5365              	.L411:
4688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5366              		.loc 1 4688 29 is_stmt 1 view .LVU1466
4691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5367              		.loc 1 4691 4 view .LVU1467
4691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5368              		.loc 1 4691 16 is_stmt 0 view .LVU1468
 5369 003e 0F4B     		ldr	r3, .L415
 5370 0040 1B68     		ldr	r3, [r3]
4691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5371              		.loc 1 4691 32 view .LVU1469
 5372 0042 0022     		movs	r2, #0
 5373 0044 83F87421 		strb	r2, [r3, #372]
4693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5374              		.loc 1 4693 3 is_stmt 1 view .LVU1470
 5375 0048 FFF7FEFF 		bl	vPortExitCritical
 5376              	.LVL366:
4695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5377              		.loc 1 4695 3 view .LVU1471
4696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccB9thnJ.s 			page 215


 5378              		.loc 1 4696 2 is_stmt 0 view .LVU1472
 5379 004c 2046     		mov	r0, r4
 5380 004e 38BD     		pop	{r3, r4, r5, pc}
 5381              	.LVL367:
 5382              	.L414:
4649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
 5383              		.loc 1 4649 6 is_stmt 1 view .LVU1473
 5384 0050 1146     		mov	r1, r2
 5385 0052 2046     		mov	r0, r4
 5386 0054 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 5387              	.LVL368:
4650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5388              		.loc 1 4650 35 view .LVU1474
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5389              		.loc 1 4656 6 view .LVU1475
 5390 0058 4FF0E023 		mov	r3, #-536813568
 5391 005c 4FF08052 		mov	r2, #268435456
 5392 0060 C3F8042D 		str	r2, [r3, #3332]
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5393              		.loc 1 4656 6 view .LVU1476
 5394              		.syntax unified
 5395              	@ 4656 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5396 0064 BFF34F8F 		dsb
 5397              	@ 0 "" 2
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5398              		.loc 1 4656 6 view .LVU1477
 5399              	@ 4656 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5400 0068 BFF36F8F 		isb
 5401              	@ 0 "" 2
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5402              		.loc 1 4656 28 view .LVU1478
 5403              		.thumb
 5404              		.syntax unified
 5405 006c D8E7     		b	.L410
 5406              	.LVL369:
 5407              	.L412:
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5408              		.loc 1 4683 6 view .LVU1479
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5409              		.loc 1 4683 18 is_stmt 0 view .LVU1480
 5410 006e 034B     		ldr	r3, .L415
 5411 0070 1B68     		ldr	r3, [r3]
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5412              		.loc 1 4683 47 view .LVU1481
 5413 0072 621E     		subs	r2, r4, #1
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5414              		.loc 1 4683 36 view .LVU1482
 5415 0074 C3F87021 		str	r2, [r3, #368]
 5416 0078 E1E7     		b	.L411
 5417              	.L416:
 5418 007a 00BF     		.align	2
 5419              	.L415:
 5420 007c 00000000 		.word	pxCurrentTCB
 5421              		.cfi_endproc
 5422              	.LFE49:
 5424              		.section	.text.xTaskNotifyWait,"ax",%progbits
 5425              		.align	1
ARM GAS  /tmp/ccB9thnJ.s 			page 216


 5426              		.global	xTaskNotifyWait
 5427              		.syntax unified
 5428              		.thumb
 5429              		.thumb_func
 5431              	xTaskNotifyWait:
 5432              	.LVL370:
 5433              	.LFB50:
4704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 5434              		.loc 1 4704 2 is_stmt 1 view -0
 5435              		.cfi_startproc
 5436              		@ args = 0, pretend = 0, frame = 0
 5437              		@ frame_needed = 0, uses_anonymous_args = 0
4704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 5438              		.loc 1 4704 2 is_stmt 0 view .LVU1484
 5439 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5440              	.LCFI49:
 5441              		.cfi_def_cfa_offset 24
 5442              		.cfi_offset 3, -24
 5443              		.cfi_offset 4, -20
 5444              		.cfi_offset 5, -16
 5445              		.cfi_offset 6, -12
 5446              		.cfi_offset 7, -8
 5447              		.cfi_offset 14, -4
 5448 0002 0646     		mov	r6, r0
 5449 0004 0F46     		mov	r7, r1
 5450 0006 1446     		mov	r4, r2
 5451 0008 1D46     		mov	r5, r3
4705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5452              		.loc 1 4705 2 is_stmt 1 view .LVU1485
4707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5453              		.loc 1 4707 3 view .LVU1486
 5454 000a FFF7FEFF 		bl	vPortEnterCritical
 5455              	.LVL371:
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5456              		.loc 1 4710 4 view .LVU1487
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5457              		.loc 1 4710 20 is_stmt 0 view .LVU1488
 5458 000e 244B     		ldr	r3, .L425
 5459 0010 1B68     		ldr	r3, [r3]
 5460 0012 93F87421 		ldrb	r2, [r3, #372]	@ zero_extendqisi2
 5461 0016 D2B2     		uxtb	r2, r2
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5462              		.loc 1 4710 6 view .LVU1489
 5463 0018 022A     		cmp	r2, #2
 5464 001a 0CD0     		beq	.L418
4715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5465              		.loc 1 4715 5 is_stmt 1 view .LVU1490
4715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5466              		.loc 1 4715 17 is_stmt 0 view .LVU1491
 5467 001c 204A     		ldr	r2, .L425
 5468 001e 1168     		ldr	r1, [r2]
 5469 0020 D1F87031 		ldr	r3, [r1, #368]
4715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5470              		.loc 1 4715 35 view .LVU1492
 5471 0024 23EA0603 		bic	r3, r3, r6
 5472 0028 C1F87031 		str	r3, [r1, #368]
4718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccB9thnJ.s 			page 217


 5473              		.loc 1 4718 5 is_stmt 1 view .LVU1493
4718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5474              		.loc 1 4718 17 is_stmt 0 view .LVU1494
 5475 002c 1368     		ldr	r3, [r2]
4718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5476              		.loc 1 4718 33 view .LVU1495
 5477 002e 0122     		movs	r2, #1
 5478 0030 83F87421 		strb	r2, [r3, #372]
4720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5479              		.loc 1 4720 5 is_stmt 1 view .LVU1496
4720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5480              		.loc 1 4720 7 is_stmt 0 view .LVU1497
 5481 0034 D5B9     		cbnz	r5, .L423
 5482              	.L418:
4738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5483              		.loc 1 4738 29 is_stmt 1 view .LVU1498
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5484              		.loc 1 4741 3 view .LVU1499
 5485 0036 FFF7FEFF 		bl	vPortExitCritical
 5486              	.LVL372:
4743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5487              		.loc 1 4743 3 view .LVU1500
 5488 003a FFF7FEFF 		bl	vPortEnterCritical
 5489              	.LVL373:
4745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5490              		.loc 1 4745 27 view .LVU1501
4747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5491              		.loc 1 4747 4 view .LVU1502
4747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5492              		.loc 1 4747 6 is_stmt 0 view .LVU1503
 5493 003e 24B1     		cbz	r4, .L419
4751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5494              		.loc 1 4751 5 is_stmt 1 view .LVU1504
4751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5495              		.loc 1 4751 41 is_stmt 0 view .LVU1505
 5496 0040 174B     		ldr	r3, .L425
 5497 0042 1B68     		ldr	r3, [r3]
 5498 0044 D3F87031 		ldr	r3, [r3, #368]
4751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5499              		.loc 1 4751 27 view .LVU1506
 5500 0048 2360     		str	r3, [r4]
 5501              	.L419:
4758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5502              		.loc 1 4758 4 is_stmt 1 view .LVU1507
4758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5503              		.loc 1 4758 20 is_stmt 0 view .LVU1508
 5504 004a 154B     		ldr	r3, .L425
 5505 004c 1B68     		ldr	r3, [r3]
 5506 004e 93F87431 		ldrb	r3, [r3, #372]	@ zero_extendqisi2
 5507 0052 DBB2     		uxtb	r3, r3
4758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5508              		.loc 1 4758 6 view .LVU1509
 5509 0054 022B     		cmp	r3, #2
 5510 0056 18D0     		beq	.L424
4761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5511              		.loc 1 4761 13 view .LVU1510
 5512 0058 0024     		movs	r4, #0
ARM GAS  /tmp/ccB9thnJ.s 			page 218


 5513              	.LVL374:
 5514              	.L420:
4771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5515              		.loc 1 4771 4 is_stmt 1 view .LVU1511
4771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5516              		.loc 1 4771 16 is_stmt 0 view .LVU1512
 5517 005a 114B     		ldr	r3, .L425
 5518 005c 1B68     		ldr	r3, [r3]
4771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5519              		.loc 1 4771 32 view .LVU1513
 5520 005e 0022     		movs	r2, #0
 5521 0060 83F87421 		strb	r2, [r3, #372]
4773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5522              		.loc 1 4773 3 is_stmt 1 view .LVU1514
 5523 0064 FFF7FEFF 		bl	vPortExitCritical
 5524              	.LVL375:
4775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5525              		.loc 1 4775 3 view .LVU1515
4776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5526              		.loc 1 4776 2 is_stmt 0 view .LVU1516
 5527 0068 2046     		mov	r0, r4
 5528 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5529              	.LVL376:
 5530              	.L423:
4722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
 5531              		.loc 1 4722 6 is_stmt 1 view .LVU1517
 5532 006c 1146     		mov	r1, r2
 5533 006e 2846     		mov	r0, r5
 5534 0070 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 5535              	.LVL377:
4723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5536              		.loc 1 4723 35 view .LVU1518
4729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5537              		.loc 1 4729 6 view .LVU1519
 5538 0074 4FF0E023 		mov	r3, #-536813568
 5539 0078 4FF08052 		mov	r2, #268435456
 5540 007c C3F8042D 		str	r2, [r3, #3332]
4729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5541              		.loc 1 4729 6 view .LVU1520
 5542              		.syntax unified
 5543              	@ 4729 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5544 0080 BFF34F8F 		dsb
 5545              	@ 0 "" 2
4729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5546              		.loc 1 4729 6 view .LVU1521
 5547              	@ 4729 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5548 0084 BFF36F8F 		isb
 5549              	@ 0 "" 2
4729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5550              		.loc 1 4729 28 view .LVU1522
 5551              		.thumb
 5552              		.syntax unified
 5553 0088 D5E7     		b	.L418
 5554              	.L424:
4767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 5555              		.loc 1 4767 5 view .LVU1523
4767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
ARM GAS  /tmp/ccB9thnJ.s 			page 219


 5556              		.loc 1 4767 17 is_stmt 0 view .LVU1524
 5557 008a 054B     		ldr	r3, .L425
 5558 008c 1A68     		ldr	r2, [r3]
 5559 008e D2F87031 		ldr	r3, [r2, #368]
4767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 5560              		.loc 1 4767 35 view .LVU1525
 5561 0092 23EA0703 		bic	r3, r3, r7
 5562 0096 C2F87031 		str	r3, [r2, #368]
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5563              		.loc 1 4768 5 is_stmt 1 view .LVU1526
 5564              	.LVL378:
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5565              		.loc 1 4768 13 is_stmt 0 view .LVU1527
 5566 009a 0124     		movs	r4, #1
 5567              	.LVL379:
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5568              		.loc 1 4768 13 view .LVU1528
 5569 009c DDE7     		b	.L420
 5570              	.L426:
 5571 009e 00BF     		.align	2
 5572              	.L425:
 5573 00a0 00000000 		.word	pxCurrentTCB
 5574              		.cfi_endproc
 5575              	.LFE50:
 5577              		.section	.text.xTaskGenericNotify,"ax",%progbits
 5578              		.align	1
 5579              		.global	xTaskGenericNotify
 5580              		.syntax unified
 5581              		.thumb
 5582              		.thumb_func
 5584              	xTaskGenericNotify:
 5585              	.LVL380:
 5586              	.LFB51:
4784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5587              		.loc 1 4784 2 is_stmt 1 view -0
 5588              		.cfi_startproc
 5589              		@ args = 0, pretend = 0, frame = 0
 5590              		@ frame_needed = 0, uses_anonymous_args = 0
4784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5591              		.loc 1 4784 2 is_stmt 0 view .LVU1530
 5592 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5593              	.LCFI50:
 5594              		.cfi_def_cfa_offset 24
 5595              		.cfi_offset 3, -24
 5596              		.cfi_offset 4, -20
 5597              		.cfi_offset 5, -16
 5598              		.cfi_offset 6, -12
 5599              		.cfi_offset 7, -8
 5600              		.cfi_offset 14, -4
4785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
 5601              		.loc 1 4785 2 is_stmt 1 view .LVU1531
4786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5602              		.loc 1 4786 2 view .LVU1532
 5603              	.LVL381:
4787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5604              		.loc 1 4787 2 view .LVU1533
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
ARM GAS  /tmp/ccB9thnJ.s 			page 220


 5605              		.loc 1 4789 3 view .LVU1534
 5606 0002 B0B1     		cbz	r0, .L447
 5607 0004 0E46     		mov	r6, r1
 5608 0006 1446     		mov	r4, r2
 5609 0008 1D46     		mov	r5, r3
 5610 000a 0746     		mov	r7, r0
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5611              		.loc 1 4789 32 discriminator 2 view .LVU1535
4790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5612              		.loc 1 4790 3 discriminator 2 view .LVU1536
 5613              	.LVL382:
4792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5614              		.loc 1 4792 3 discriminator 2 view .LVU1537
 5615 000c FFF7FEFF 		bl	vPortEnterCritical
 5616              	.LVL383:
4794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5617              		.loc 1 4794 4 discriminator 2 view .LVU1538
4794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5618              		.loc 1 4794 6 is_stmt 0 discriminator 2 view .LVU1539
 5619 0010 15B1     		cbz	r5, .L430
4796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5620              		.loc 1 4796 5 is_stmt 1 view .LVU1540
4796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5621              		.loc 1 4796 42 is_stmt 0 view .LVU1541
 5622 0012 D7F87031 		ldr	r3, [r7, #368]
4796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5623              		.loc 1 4796 35 view .LVU1542
 5624 0016 2B60     		str	r3, [r5]
 5625              	.L430:
4799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5626              		.loc 1 4799 4 is_stmt 1 view .LVU1543
4799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5627              		.loc 1 4799 26 is_stmt 0 view .LVU1544
 5628 0018 97F87431 		ldrb	r3, [r7, #372]	@ zero_extendqisi2
 5629 001c DBB2     		uxtb	r3, r3
 5630              	.LVL384:
4801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5631              		.loc 1 4801 4 is_stmt 1 view .LVU1545
4801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5632              		.loc 1 4801 25 is_stmt 0 view .LVU1546
 5633 001e 0222     		movs	r2, #2
 5634 0020 87F87421 		strb	r2, [r7, #372]
4803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5635              		.loc 1 4803 4 is_stmt 1 view .LVU1547
 5636 0024 042C     		cmp	r4, #4
 5637 0026 27D8     		bhi	.L431
 5638 0028 DFE804F0 		tbb	[pc, r4]
 5639              	.L433:
 5640 002c 11       		.byte	(.L437-.L433)/2
 5641 002d 0C       		.byte	(.L436-.L433)/2
 5642 002e 18       		.byte	(.L435-.L433)/2
 5643 002f 1E       		.byte	(.L434-.L433)/2
 5644 0030 21       		.byte	(.L432-.L433)/2
 5645              	.LVL385:
 5646 0031 00       		.p2align 1
 5647              	.L447:
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
ARM GAS  /tmp/ccB9thnJ.s 			page 221


 5648              		.loc 1 4789 3 view .LVU1548
 5649              	.LBB203:
 5650              	.LBI203:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5651              		.loc 2 191 30 view .LVU1549
 5652              	.LBB204:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5653              		.loc 2 193 1 view .LVU1550
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5654              		.loc 2 195 2 view .LVU1551
 5655              		.syntax unified
 5656              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5657 0032 4FF05003 			mov r3, #80												
 5658 0036 83F31188 		msr basepri, r3											
 5659 003a BFF36F8F 		isb														
 5660 003e BFF34F8F 		dsb														
 5661              	
 5662              	@ 0 "" 2
 5663              	.LVL386:
 5664              		.thumb
 5665              		.syntax unified
 5666              	.L429:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5667              		.loc 2 195 2 is_stmt 0 view .LVU1552
 5668              	.LBE204:
 5669              	.LBE203:
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5670              		.loc 1 4789 3 is_stmt 1 discriminator 1 view .LVU1553
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5671              		.loc 1 4789 3 discriminator 1 view .LVU1554
 5672 0042 FEE7     		b	.L429
 5673              	.LVL387:
 5674              	.L436:
4806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5675              		.loc 1 4806 6 view .LVU1555
4806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5676              		.loc 1 4806 11 is_stmt 0 view .LVU1556
 5677 0044 D7F87021 		ldr	r2, [r7, #368]
4806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5678              		.loc 1 4806 29 view .LVU1557
 5679 0048 3243     		orrs	r2, r2, r6
 5680 004a C7F87021 		str	r2, [r7, #368]
4807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5681              		.loc 1 4807 6 is_stmt 1 view .LVU1558
 5682              	.L437:
4843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5683              		.loc 1 4843 22 view .LVU1559
4847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5684              		.loc 1 4847 4 view .LVU1560
4847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5685              		.loc 1 4847 6 is_stmt 0 view .LVU1561
 5686 004e 012B     		cmp	r3, #1
 5687 0050 20D0     		beq	.L448
 5688 0052 0124     		movs	r4, #1
 5689              	.LVL388:
 5690              	.L438:
4884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/ccB9thnJ.s 			page 222


 5691              		.loc 1 4884 29 is_stmt 1 view .LVU1562
4887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5692              		.loc 1 4887 3 view .LVU1563
 5693 0054 FFF7FEFF 		bl	vPortExitCritical
 5694              	.LVL389:
4889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5695              		.loc 1 4889 3 view .LVU1564
4890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5696              		.loc 1 4890 2 is_stmt 0 view .LVU1565
 5697 0058 2046     		mov	r0, r4
 5698 005a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5699              	.LVL390:
 5700              	.L435:
4810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5701              		.loc 1 4810 6 is_stmt 1 view .LVU1566
4810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5702              		.loc 1 4810 13 is_stmt 0 view .LVU1567
 5703 005c D7F87021 		ldr	r2, [r7, #368]
4810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5704              		.loc 1 4810 32 view .LVU1568
 5705 0060 0132     		adds	r2, r2, #1
 5706 0062 C7F87021 		str	r2, [r7, #368]
4811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5707              		.loc 1 4811 6 is_stmt 1 view .LVU1569
 5708 0066 F2E7     		b	.L437
 5709              	.L434:
4814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5710              		.loc 1 4814 6 view .LVU1570
4814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5711              		.loc 1 4814 29 is_stmt 0 view .LVU1571
 5712 0068 C7F87061 		str	r6, [r7, #368]
4815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5713              		.loc 1 4815 6 is_stmt 1 view .LVU1572
 5714 006c EFE7     		b	.L437
 5715              	.L432:
4818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5716              		.loc 1 4818 6 view .LVU1573
4818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5717              		.loc 1 4818 8 is_stmt 0 view .LVU1574
 5718 006e 022B     		cmp	r3, #2
 5719 0070 40D0     		beq	.L442
4820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5720              		.loc 1 4820 7 is_stmt 1 view .LVU1575
4820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5721              		.loc 1 4820 30 is_stmt 0 view .LVU1576
 5722 0072 C7F87061 		str	r6, [r7, #368]
 5723 0076 EAE7     		b	.L437
 5724              	.L431:
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5725              		.loc 1 4838 6 is_stmt 1 view .LVU1577
 5726 0078 D7F87021 		ldr	r2, [r7, #368]
 5727 007c B2F1FF3F 		cmp	r2, #-1
 5728 0080 E5D0     		beq	.L437
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5729              		.loc 1 4838 6 view .LVU1578
 5730              	.LBB205:
 5731              	.LBI205:
ARM GAS  /tmp/ccB9thnJ.s 			page 223


 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5732              		.loc 2 191 30 view .LVU1579
 5733              	.LBB206:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5734              		.loc 2 193 1 view .LVU1580
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5735              		.loc 2 195 2 view .LVU1581
 5736              		.syntax unified
 5737              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5738 0082 4FF05003 			mov r3, #80												
 5739 0086 83F31188 		msr basepri, r3											
 5740 008a BFF36F8F 		isb														
 5741 008e BFF34F8F 		dsb														
 5742              	
 5743              	@ 0 "" 2
 5744              	.LVL391:
 5745              		.thumb
 5746              		.syntax unified
 5747              	.L439:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5748              		.loc 2 195 2 is_stmt 0 view .LVU1582
 5749              	.LBE206:
 5750              	.LBE205:
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5751              		.loc 1 4838 6 is_stmt 1 discriminator 2 view .LVU1583
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5752              		.loc 1 4838 6 discriminator 2 view .LVU1584
 5753 0092 FEE7     		b	.L439
 5754              	.LVL392:
 5755              	.L448:
4849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 5756              		.loc 1 4849 5 view .LVU1585
4849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 5757              		.loc 1 4849 14 is_stmt 0 view .LVU1586
 5758 0094 3C1D     		adds	r4, r7, #4
 5759 0096 2046     		mov	r0, r4
 5760 0098 FFF7FEFF 		bl	uxListRemove
 5761              	.LVL393:
4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5762              		.loc 1 4850 5 is_stmt 1 view .LVU1587
4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5763              		.loc 1 4850 5 view .LVU1588
 5764 009c F86A     		ldr	r0, [r7, #44]
 5765 009e 0123     		movs	r3, #1
 5766 00a0 8340     		lsls	r3, r3, r0
 5767 00a2 164A     		ldr	r2, .L449
 5768 00a4 1168     		ldr	r1, [r2]
 5769 00a6 0B43     		orrs	r3, r3, r1
 5770 00a8 1360     		str	r3, [r2]
4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5771              		.loc 1 4850 5 view .LVU1589
 5772 00aa 00EB8000 		add	r0, r0, r0, lsl #2
 5773 00ae 2146     		mov	r1, r4
 5774 00b0 134B     		ldr	r3, .L449+4
 5775 00b2 03EB8000 		add	r0, r3, r0, lsl #2
 5776 00b6 FFF7FEFF 		bl	vListInsertEnd
 5777              	.LVL394:
ARM GAS  /tmp/ccB9thnJ.s 			page 224


4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5778              		.loc 1 4850 35 view .LVU1590
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5779              		.loc 1 4853 5 view .LVU1591
 5780 00ba BB6A     		ldr	r3, [r7, #40]
 5781 00bc 43B1     		cbz	r3, .L440
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5782              		.loc 1 4853 5 view .LVU1592
 5783              	.LBB207:
 5784              	.LBI207:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5785              		.loc 2 191 30 view .LVU1593
 5786              	.LBB208:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5787              		.loc 2 193 1 view .LVU1594
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5788              		.loc 2 195 2 view .LVU1595
 5789              		.syntax unified
 5790              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5791 00be 4FF05003 			mov r3, #80												
 5792 00c2 83F31188 		msr basepri, r3											
 5793 00c6 BFF36F8F 		isb														
 5794 00ca BFF34F8F 		dsb														
 5795              	
 5796              	@ 0 "" 2
 5797              	.LVL395:
 5798              		.thumb
 5799              		.syntax unified
 5800              	.L441:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5801              		.loc 2 195 2 is_stmt 0 view .LVU1596
 5802              	.LBE208:
 5803              	.LBE207:
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5804              		.loc 1 4853 5 is_stmt 1 discriminator 3 view .LVU1597
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5805              		.loc 1 4853 5 discriminator 3 view .LVU1598
 5806 00ce FEE7     		b	.L441
 5807              	.L440:
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5808              		.loc 1 4853 82 discriminator 2 view .LVU1599
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5809              		.loc 1 4871 5 discriminator 2 view .LVU1600
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5810              		.loc 1 4871 14 is_stmt 0 discriminator 2 view .LVU1601
 5811 00d0 FA6A     		ldr	r2, [r7, #44]
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5812              		.loc 1 4871 41 discriminator 2 view .LVU1602
 5813 00d2 0C4B     		ldr	r3, .L449+8
 5814 00d4 1B68     		ldr	r3, [r3]
 5815 00d6 DB6A     		ldr	r3, [r3, #44]
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5816              		.loc 1 4871 7 discriminator 2 view .LVU1603
 5817 00d8 9A42     		cmp	r2, r3
 5818 00da 0DD9     		bls	.L444
4875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5819              		.loc 1 4875 6 is_stmt 1 view .LVU1604
ARM GAS  /tmp/ccB9thnJ.s 			page 225


 5820 00dc 4FF0E023 		mov	r3, #-536813568
 5821 00e0 4FF08052 		mov	r2, #268435456
 5822 00e4 C3F8042D 		str	r2, [r3, #3332]
4875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5823              		.loc 1 4875 6 view .LVU1605
 5824              		.syntax unified
 5825              	@ 4875 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5826 00e8 BFF34F8F 		dsb
 5827              	@ 0 "" 2
4875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5828              		.loc 1 4875 6 view .LVU1606
 5829              	@ 4875 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5830 00ec BFF36F8F 		isb
 5831              	@ 0 "" 2
4875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5832              		.loc 1 4875 37 view .LVU1607
 5833              		.thumb
 5834              		.syntax unified
 5835 00f0 0124     		movs	r4, #1
 5836 00f2 AFE7     		b	.L438
 5837              	.LVL396:
 5838              	.L442:
4825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5839              		.loc 1 4825 15 is_stmt 0 view .LVU1608
 5840 00f4 0024     		movs	r4, #0
 5841 00f6 ADE7     		b	.L438
 5842              	.LVL397:
 5843              	.L444:
4825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5844              		.loc 1 4825 15 view .LVU1609
 5845 00f8 0124     		movs	r4, #1
 5846 00fa ABE7     		b	.L438
 5847              	.L450:
 5848              		.align	2
 5849              	.L449:
 5850 00fc 00000000 		.word	uxTopReadyPriority
 5851 0100 00000000 		.word	pxReadyTasksLists
 5852 0104 00000000 		.word	pxCurrentTCB
 5853              		.cfi_endproc
 5854              	.LFE51:
 5856              		.section	.text.xTaskGenericNotifyFromISR,"ax",%progbits
 5857              		.align	1
 5858              		.global	xTaskGenericNotifyFromISR
 5859              		.syntax unified
 5860              		.thumb
 5861              		.thumb_func
 5863              	xTaskGenericNotifyFromISR:
 5864              	.LVL398:
 5865              	.LFB52:
4898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5866              		.loc 1 4898 2 is_stmt 1 view -0
 5867              		.cfi_startproc
 5868              		@ args = 4, pretend = 0, frame = 0
 5869              		@ frame_needed = 0, uses_anonymous_args = 0
4899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5870              		.loc 1 4899 2 view .LVU1611
4900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
ARM GAS  /tmp/ccB9thnJ.s 			page 226


 5871              		.loc 1 4900 2 view .LVU1612
4901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5872              		.loc 1 4901 2 view .LVU1613
4902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5873              		.loc 1 4902 2 view .LVU1614
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5874              		.loc 1 4904 3 view .LVU1615
 5875 0000 18B3     		cbz	r0, .L475
4898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5876              		.loc 1 4898 2 is_stmt 0 discriminator 2 view .LVU1616
 5877 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 5878              	.LCFI51:
 5879              		.cfi_def_cfa_offset 24
 5880              		.cfi_offset 4, -24
 5881              		.cfi_offset 5, -20
 5882              		.cfi_offset 6, -16
 5883              		.cfi_offset 7, -12
 5884              		.cfi_offset 8, -8
 5885              		.cfi_offset 14, -4
 5886 0006 0E46     		mov	r6, r1
 5887 0008 1446     		mov	r4, r2
 5888 000a 1D46     		mov	r5, r3
 5889 000c 0746     		mov	r7, r0
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5890              		.loc 1 4904 32 is_stmt 1 discriminator 2 view .LVU1617
4922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5891              		.loc 1 4922 3 discriminator 2 view .LVU1618
 5892 000e FFF7FEFF 		bl	vPortValidateInterruptPriority
 5893              	.LVL399:
4924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5894              		.loc 1 4924 3 discriminator 2 view .LVU1619
4926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5895              		.loc 1 4926 3 discriminator 2 view .LVU1620
 5896              	.LBB209:
 5897              	.LBI209:
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5898              		.loc 2 207 34 discriminator 2 view .LVU1621
 5899              	.LBB210:
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5900              		.loc 2 209 1 discriminator 2 view .LVU1622
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5901              		.loc 2 211 2 discriminator 2 view .LVU1623
 5902              		.syntax unified
 5903              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5904 0012 EFF31183 			mrs r3, basepri											
 5905 0016 4FF05002 		mov r2, #80												
 5906 001a 82F31188 		msr basepri, r2											
 5907 001e BFF36F8F 		isb														
 5908 0022 BFF34F8F 		dsb														
 5909              	
 5910              	@ 0 "" 2
 5911              		.thumb
 5912              		.syntax unified
 5913 0026 9846     		mov	r8, r3
 5914              	.LVL400:
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 5915              		.loc 2 223 2 discriminator 2 view .LVU1624
ARM GAS  /tmp/ccB9thnJ.s 			page 227


 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 5916              		.loc 2 223 2 is_stmt 0 discriminator 2 view .LVU1625
 5917              	.LBE210:
 5918              	.LBE209:
4928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5919              		.loc 1 4928 4 is_stmt 1 discriminator 2 view .LVU1626
4928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5920              		.loc 1 4928 6 is_stmt 0 discriminator 2 view .LVU1627
 5921 0028 15B1     		cbz	r5, .L454
4930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5922              		.loc 1 4930 5 is_stmt 1 view .LVU1628
4930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5923              		.loc 1 4930 42 is_stmt 0 view .LVU1629
 5924 002a D7F87031 		ldr	r3, [r7, #368]
 5925              	.LVL401:
4930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5926              		.loc 1 4930 35 view .LVU1630
 5927 002e 2B60     		str	r3, [r5]
 5928              	.L454:
4933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 5929              		.loc 1 4933 4 is_stmt 1 view .LVU1631
4933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 5930              		.loc 1 4933 26 is_stmt 0 view .LVU1632
 5931 0030 97F87431 		ldrb	r3, [r7, #372]	@ zero_extendqisi2
 5932 0034 DBB2     		uxtb	r3, r3
 5933              	.LVL402:
4934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5934              		.loc 1 4934 4 is_stmt 1 view .LVU1633
4934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5935              		.loc 1 4934 25 is_stmt 0 view .LVU1634
 5936 0036 0222     		movs	r2, #2
 5937 0038 87F87421 		strb	r2, [r7, #372]
4936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5938              		.loc 1 4936 4 is_stmt 1 view .LVU1635
 5939 003c 042C     		cmp	r4, #4
 5940 003e 27D8     		bhi	.L455
 5941 0040 DFE804F0 		tbb	[pc, r4]
 5942              	.L457:
 5943 0044 11       		.byte	(.L461-.L457)/2
 5944 0045 0C       		.byte	(.L460-.L457)/2
 5945 0046 18       		.byte	(.L459-.L457)/2
 5946 0047 1E       		.byte	(.L458-.L457)/2
 5947 0048 21       		.byte	(.L456-.L457)/2
 5948              	.LVL403:
 5949 0049 00       		.p2align 1
 5950              	.L475:
 5951              	.LCFI52:
 5952              		.cfi_def_cfa_offset 0
 5953              		.cfi_restore 4
 5954              		.cfi_restore 5
 5955              		.cfi_restore 6
 5956              		.cfi_restore 7
 5957              		.cfi_restore 8
 5958              		.cfi_restore 14
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5959              		.loc 1 4904 3 view .LVU1636
 5960              	.LBB211:
ARM GAS  /tmp/ccB9thnJ.s 			page 228


 5961              	.LBI211:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5962              		.loc 2 191 30 view .LVU1637
 5963              	.LBB212:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5964              		.loc 2 193 1 view .LVU1638
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5965              		.loc 2 195 2 view .LVU1639
 5966              		.syntax unified
 5967              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5968 004a 4FF05003 			mov r3, #80												
 5969 004e 83F31188 		msr basepri, r3											
 5970 0052 BFF36F8F 		isb														
 5971 0056 BFF34F8F 		dsb														
 5972              	
 5973              	@ 0 "" 2
 5974              	.LVL404:
 5975              		.thumb
 5976              		.syntax unified
 5977              	.L453:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5978              		.loc 2 195 2 is_stmt 0 view .LVU1640
 5979              	.LBE212:
 5980              	.LBE211:
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5981              		.loc 1 4904 3 is_stmt 1 discriminator 1 view .LVU1641
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5982              		.loc 1 4904 3 discriminator 1 view .LVU1642
 5983 005a FEE7     		b	.L453
 5984              	.LVL405:
 5985              	.L460:
 5986              	.LCFI53:
 5987              		.cfi_def_cfa_offset 24
 5988              		.cfi_offset 4, -24
 5989              		.cfi_offset 5, -20
 5990              		.cfi_offset 6, -16
 5991              		.cfi_offset 7, -12
 5992              		.cfi_offset 8, -8
 5993              		.cfi_offset 14, -4
4939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5994              		.loc 1 4939 6 view .LVU1643
4939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5995              		.loc 1 4939 11 is_stmt 0 view .LVU1644
 5996 005c D7F87021 		ldr	r2, [r7, #368]
4939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5997              		.loc 1 4939 29 view .LVU1645
 5998 0060 3243     		orrs	r2, r2, r6
 5999 0062 C7F87021 		str	r2, [r7, #368]
4940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6000              		.loc 1 4940 6 is_stmt 1 view .LVU1646
 6001              	.L461:
4975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6002              		.loc 1 4975 31 view .LVU1647
4979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6003              		.loc 1 4979 4 view .LVU1648
4979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6004              		.loc 1 4979 6 is_stmt 0 view .LVU1649
ARM GAS  /tmp/ccB9thnJ.s 			page 229


 6005 0066 012B     		cmp	r3, #1
 6006 0068 20D0     		beq	.L476
 6007 006a 0120     		movs	r0, #1
 6008              	.LVL406:
 6009              	.L462:
5012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6010              		.loc 1 5012 30 is_stmt 1 view .LVU1650
5016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6011              		.loc 1 5016 3 view .LVU1651
 6012              	.LBB213:
 6013              	.LBI213:
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6014              		.loc 2 227 30 view .LVU1652
 6015              	.LBB214:
 6016              		.loc 2 229 2 view .LVU1653
 6017              		.syntax unified
 6018              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6019 006c 88F31188 			msr basepri, r8	
 6020              	@ 0 "" 2
 6021              		.thumb
 6022              		.syntax unified
 6023              	.LBE214:
 6024              	.LBE213:
5018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6025              		.loc 1 5018 3 view .LVU1654
5019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6026              		.loc 1 5019 2 is_stmt 0 view .LVU1655
 6027 0070 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 6028              	.LVL407:
 6029              	.L459:
4943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6030              		.loc 1 4943 6 is_stmt 1 view .LVU1656
4943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6031              		.loc 1 4943 13 is_stmt 0 view .LVU1657
 6032 0074 D7F87021 		ldr	r2, [r7, #368]
4943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6033              		.loc 1 4943 32 view .LVU1658
 6034 0078 0132     		adds	r2, r2, #1
 6035 007a C7F87021 		str	r2, [r7, #368]
4944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6036              		.loc 1 4944 6 is_stmt 1 view .LVU1659
 6037 007e F2E7     		b	.L461
 6038              	.L458:
4947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6039              		.loc 1 4947 6 view .LVU1660
4947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6040              		.loc 1 4947 29 is_stmt 0 view .LVU1661
 6041 0080 C7F87061 		str	r6, [r7, #368]
4948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6042              		.loc 1 4948 6 is_stmt 1 view .LVU1662
 6043 0084 EFE7     		b	.L461
 6044              	.L456:
4951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6045              		.loc 1 4951 6 view .LVU1663
4951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6046              		.loc 1 4951 8 is_stmt 0 view .LVU1664
 6047 0086 022B     		cmp	r3, #2
ARM GAS  /tmp/ccB9thnJ.s 			page 230


 6048 0088 46D0     		beq	.L469
4953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6049              		.loc 1 4953 7 is_stmt 1 view .LVU1665
4953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6050              		.loc 1 4953 30 is_stmt 0 view .LVU1666
 6051 008a C7F87061 		str	r6, [r7, #368]
 6052 008e EAE7     		b	.L461
 6053              	.L455:
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6054              		.loc 1 4971 6 is_stmt 1 view .LVU1667
 6055 0090 D7F87021 		ldr	r2, [r7, #368]
 6056 0094 B2F1FF3F 		cmp	r2, #-1
 6057 0098 E5D0     		beq	.L461
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6058              		.loc 1 4971 6 view .LVU1668
 6059              	.LBB215:
 6060              	.LBI215:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6061              		.loc 2 191 30 view .LVU1669
 6062              	.LBB216:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6063              		.loc 2 193 1 view .LVU1670
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6064              		.loc 2 195 2 view .LVU1671
 6065              		.syntax unified
 6066              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6067 009a 4FF05003 			mov r3, #80												
 6068 009e 83F31188 		msr basepri, r3											
 6069 00a2 BFF36F8F 		isb														
 6070 00a6 BFF34F8F 		dsb														
 6071              	
 6072              	@ 0 "" 2
 6073              	.LVL408:
 6074              		.thumb
 6075              		.syntax unified
 6076              	.L463:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6077              		.loc 2 195 2 is_stmt 0 view .LVU1672
 6078              	.LBE216:
 6079              	.LBE215:
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6080              		.loc 1 4971 6 is_stmt 1 discriminator 2 view .LVU1673
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6081              		.loc 1 4971 6 discriminator 2 view .LVU1674
 6082 00aa FEE7     		b	.L463
 6083              	.LVL409:
 6084              	.L476:
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6085              		.loc 1 4982 5 view .LVU1675
 6086 00ac BB6A     		ldr	r3, [r7, #40]
 6087              	.LVL410:
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6088              		.loc 1 4982 5 is_stmt 0 view .LVU1676
 6089 00ae 43B1     		cbz	r3, .L464
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6090              		.loc 1 4982 5 is_stmt 1 view .LVU1677
 6091              	.LBB217:
ARM GAS  /tmp/ccB9thnJ.s 			page 231


 6092              	.LBI217:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6093              		.loc 2 191 30 view .LVU1678
 6094              	.LBB218:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6095              		.loc 2 193 1 view .LVU1679
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6096              		.loc 2 195 2 view .LVU1680
 6097              		.syntax unified
 6098              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6099 00b0 4FF05003 			mov r3, #80												
 6100 00b4 83F31188 		msr basepri, r3											
 6101 00b8 BFF36F8F 		isb														
 6102 00bc BFF34F8F 		dsb														
 6103              	
 6104              	@ 0 "" 2
 6105              	.LVL411:
 6106              		.thumb
 6107              		.syntax unified
 6108              	.L465:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6109              		.loc 2 195 2 is_stmt 0 view .LVU1681
 6110              	.LBE218:
 6111              	.LBE217:
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6112              		.loc 1 4982 5 is_stmt 1 discriminator 3 view .LVU1682
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6113              		.loc 1 4982 5 discriminator 3 view .LVU1683
 6114 00c0 FEE7     		b	.L465
 6115              	.L464:
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6116              		.loc 1 4982 82 discriminator 2 view .LVU1684
4984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6117              		.loc 1 4984 5 discriminator 2 view .LVU1685
4984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6118              		.loc 1 4984 30 is_stmt 0 discriminator 2 view .LVU1686
 6119 00c2 174B     		ldr	r3, .L477
 6120 00c4 1B68     		ldr	r3, [r3]
4984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6121              		.loc 1 4984 7 discriminator 2 view .LVU1687
 6122 00c6 0BBB     		cbnz	r3, .L466
4986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6123              		.loc 1 4986 6 is_stmt 1 view .LVU1688
4986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6124              		.loc 1 4986 15 is_stmt 0 view .LVU1689
 6125 00c8 3C1D     		adds	r4, r7, #4
 6126 00ca 2046     		mov	r0, r4
 6127 00cc FFF7FEFF 		bl	uxListRemove
 6128              	.LVL412:
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6129              		.loc 1 4987 6 is_stmt 1 view .LVU1690
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6130              		.loc 1 4987 6 view .LVU1691
 6131 00d0 F86A     		ldr	r0, [r7, #44]
 6132 00d2 0123     		movs	r3, #1
 6133 00d4 8340     		lsls	r3, r3, r0
 6134 00d6 134A     		ldr	r2, .L477+4
ARM GAS  /tmp/ccB9thnJ.s 			page 232


 6135 00d8 1168     		ldr	r1, [r2]
 6136 00da 0B43     		orrs	r3, r3, r1
 6137 00dc 1360     		str	r3, [r2]
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6138              		.loc 1 4987 6 view .LVU1692
 6139 00de 00EB8000 		add	r0, r0, r0, lsl #2
 6140 00e2 2146     		mov	r1, r4
 6141 00e4 104B     		ldr	r3, .L477+8
 6142 00e6 03EB8000 		add	r0, r3, r0, lsl #2
 6143 00ea FFF7FEFF 		bl	vListInsertEnd
 6144              	.LVL413:
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6145              		.loc 1 4987 36 view .LVU1693
 6146              	.L467:
4996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6147              		.loc 1 4996 5 view .LVU1694
4996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6148              		.loc 1 4996 14 is_stmt 0 view .LVU1695
 6149 00ee FA6A     		ldr	r2, [r7, #44]
4996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6150              		.loc 1 4996 41 view .LVU1696
 6151 00f0 0E4B     		ldr	r3, .L477+12
 6152 00f2 1B68     		ldr	r3, [r3]
 6153 00f4 DB6A     		ldr	r3, [r3, #44]
4996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6154              		.loc 1 4996 7 view .LVU1697
 6155 00f6 9A42     		cmp	r2, r3
 6156 00f8 10D9     		bls	.L471
5000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6157              		.loc 1 5000 6 is_stmt 1 view .LVU1698
5000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6158              		.loc 1 5000 8 is_stmt 0 view .LVU1699
 6159 00fa 069B     		ldr	r3, [sp, #24]
 6160 00fc 13B1     		cbz	r3, .L468
5002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6161              		.loc 1 5002 7 is_stmt 1 view .LVU1700
5002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6162              		.loc 1 5002 34 is_stmt 0 view .LVU1701
 6163 00fe 0123     		movs	r3, #1
 6164 0100 069A     		ldr	r2, [sp, #24]
 6165 0102 1360     		str	r3, [r2]
 6166              	.L468:
5008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6167              		.loc 1 5008 6 is_stmt 1 view .LVU1702
5008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6168              		.loc 1 5008 20 is_stmt 0 view .LVU1703
 6169 0104 0120     		movs	r0, #1
 6170 0106 0A4B     		ldr	r3, .L477+16
 6171 0108 1860     		str	r0, [r3]
 6172 010a AFE7     		b	.L462
 6173              	.L466:
4993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6174              		.loc 1 4993 6 is_stmt 1 view .LVU1704
 6175 010c 07F11801 		add	r1, r7, #24
 6176 0110 0848     		ldr	r0, .L477+20
 6177 0112 FFF7FEFF 		bl	vListInsertEnd
 6178              	.LVL414:
ARM GAS  /tmp/ccB9thnJ.s 			page 233


 6179 0116 EAE7     		b	.L467
 6180              	.LVL415:
 6181              	.L469:
4958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6182              		.loc 1 4958 15 is_stmt 0 view .LVU1705
 6183 0118 0020     		movs	r0, #0
 6184 011a A7E7     		b	.L462
 6185              	.LVL416:
 6186              	.L471:
4958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6187              		.loc 1 4958 15 view .LVU1706
 6188 011c 0120     		movs	r0, #1
 6189 011e A5E7     		b	.L462
 6190              	.L478:
 6191              		.align	2
 6192              	.L477:
 6193 0120 00000000 		.word	uxSchedulerSuspended
 6194 0124 00000000 		.word	uxTopReadyPriority
 6195 0128 00000000 		.word	pxReadyTasksLists
 6196 012c 00000000 		.word	pxCurrentTCB
 6197 0130 00000000 		.word	xYieldPending
 6198 0134 00000000 		.word	xPendingReadyList
 6199              		.cfi_endproc
 6200              	.LFE52:
 6202              		.section	.text.vTaskNotifyGiveFromISR,"ax",%progbits
 6203              		.align	1
 6204              		.global	vTaskNotifyGiveFromISR
 6205              		.syntax unified
 6206              		.thumb
 6207              		.thumb_func
 6209              	vTaskNotifyGiveFromISR:
 6210              	.LVL417:
 6211              	.LFB53:
5027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 6212              		.loc 1 5027 2 is_stmt 1 view -0
 6213              		.cfi_startproc
 6214              		@ args = 0, pretend = 0, frame = 0
 6215              		@ frame_needed = 0, uses_anonymous_args = 0
5027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 6216              		.loc 1 5027 2 is_stmt 0 view .LVU1708
 6217 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6218              	.LCFI54:
 6219              		.cfi_def_cfa_offset 24
 6220              		.cfi_offset 3, -24
 6221              		.cfi_offset 4, -20
 6222              		.cfi_offset 5, -16
 6223              		.cfi_offset 6, -12
 6224              		.cfi_offset 7, -8
 6225              		.cfi_offset 14, -4
5028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 6226              		.loc 1 5028 2 is_stmt 1 view .LVU1709
5029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 6227              		.loc 1 5029 2 view .LVU1710
5030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6228              		.loc 1 5030 2 view .LVU1711
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6229              		.loc 1 5032 3 view .LVU1712
ARM GAS  /tmp/ccB9thnJ.s 			page 234


 6230 0002 F0B1     		cbz	r0, .L489
 6231 0004 0D46     		mov	r5, r1
 6232 0006 0446     		mov	r4, r0
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6233              		.loc 1 5032 32 discriminator 2 view .LVU1713
5050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6234              		.loc 1 5050 3 discriminator 2 view .LVU1714
 6235 0008 FFF7FEFF 		bl	vPortValidateInterruptPriority
 6236              	.LVL418:
5052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6237              		.loc 1 5052 3 discriminator 2 view .LVU1715
5054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 6238              		.loc 1 5054 3 discriminator 2 view .LVU1716
 6239              	.LBB219:
 6240              	.LBI219:
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6241              		.loc 2 207 34 discriminator 2 view .LVU1717
 6242              	.LBB220:
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6243              		.loc 2 209 1 discriminator 2 view .LVU1718
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6244              		.loc 2 211 2 discriminator 2 view .LVU1719
 6245              		.syntax unified
 6246              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6247 000c EFF31183 			mrs r3, basepri											
 6248 0010 4FF05002 		mov r2, #80												
 6249 0014 82F31188 		msr basepri, r2											
 6250 0018 BFF36F8F 		isb														
 6251 001c BFF34F8F 		dsb														
 6252              	
 6253              	@ 0 "" 2
 6254              		.thumb
 6255              		.syntax unified
 6256 0020 1E46     		mov	r6, r3
 6257              	.LVL419:
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 6258              		.loc 2 223 2 discriminator 2 view .LVU1720
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 6259              		.loc 2 223 2 is_stmt 0 discriminator 2 view .LVU1721
 6260              	.LBE220:
 6261              	.LBE219:
5056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 6262              		.loc 1 5056 4 is_stmt 1 discriminator 2 view .LVU1722
5056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 6263              		.loc 1 5056 26 is_stmt 0 discriminator 2 view .LVU1723
 6264 0022 94F87431 		ldrb	r3, [r4, #372]	@ zero_extendqisi2
 6265              	.LVL420:
5056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 6266              		.loc 1 5056 26 discriminator 2 view .LVU1724
 6267 0026 DBB2     		uxtb	r3, r3
 6268              	.LVL421:
5057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6269              		.loc 1 5057 4 is_stmt 1 discriminator 2 view .LVU1725
5057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6270              		.loc 1 5057 25 is_stmt 0 discriminator 2 view .LVU1726
 6271 0028 0222     		movs	r2, #2
 6272 002a 84F87421 		strb	r2, [r4, #372]
ARM GAS  /tmp/ccB9thnJ.s 			page 235


5061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6273              		.loc 1 5061 4 is_stmt 1 discriminator 2 view .LVU1727
5061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6274              		.loc 1 5061 11 is_stmt 0 discriminator 2 view .LVU1728
 6275 002e D4F87021 		ldr	r2, [r4, #368]
5061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6276              		.loc 1 5061 30 discriminator 2 view .LVU1729
 6277 0032 0132     		adds	r2, r2, #1
 6278 0034 C4F87021 		str	r2, [r4, #368]
5063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6279              		.loc 1 5063 36 is_stmt 1 discriminator 2 view .LVU1730
5067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6280              		.loc 1 5067 4 discriminator 2 view .LVU1731
5067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6281              		.loc 1 5067 6 is_stmt 0 discriminator 2 view .LVU1732
 6282 0038 012B     		cmp	r3, #1
 6283 003a 0BD0     		beq	.L490
 6284              	.LVL422:
 6285              	.L482:
5100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6286              		.loc 1 5100 30 is_stmt 1 view .LVU1733
5104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6287              		.loc 1 5104 3 view .LVU1734
 6288              	.LBB221:
 6289              	.LBI221:
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6290              		.loc 2 227 30 view .LVU1735
 6291              	.LBB222:
 6292              		.loc 2 229 2 view .LVU1736
 6293              		.syntax unified
 6294              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6295 003c 86F31188 			msr basepri, r6	
 6296              	@ 0 "" 2
 6297              		.thumb
 6298              		.syntax unified
 6299              	.LBE222:
 6300              	.LBE221:
5105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6301              		.loc 1 5105 2 is_stmt 0 view .LVU1737
 6302 0040 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6303              	.LVL423:
 6304              	.L489:
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6305              		.loc 1 5032 3 is_stmt 1 view .LVU1738
 6306              	.LBB223:
 6307              	.LBI223:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6308              		.loc 2 191 30 view .LVU1739
 6309              	.LBB224:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6310              		.loc 2 193 1 view .LVU1740
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6311              		.loc 2 195 2 view .LVU1741
 6312              		.syntax unified
 6313              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6314 0042 4FF05003 			mov r3, #80												
 6315 0046 83F31188 		msr basepri, r3											
ARM GAS  /tmp/ccB9thnJ.s 			page 236


 6316 004a BFF36F8F 		isb														
 6317 004e BFF34F8F 		dsb														
 6318              	
 6319              	@ 0 "" 2
 6320              	.LVL424:
 6321              		.thumb
 6322              		.syntax unified
 6323              	.L481:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6324              		.loc 2 195 2 is_stmt 0 view .LVU1742
 6325              	.LBE224:
 6326              	.LBE223:
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6327              		.loc 1 5032 3 is_stmt 1 discriminator 1 view .LVU1743
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6328              		.loc 1 5032 3 discriminator 1 view .LVU1744
 6329 0052 FEE7     		b	.L481
 6330              	.LVL425:
 6331              	.L490:
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6332              		.loc 1 5070 5 view .LVU1745
 6333 0054 A36A     		ldr	r3, [r4, #40]
 6334              	.LVL426:
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6335              		.loc 1 5070 5 is_stmt 0 view .LVU1746
 6336 0056 43B1     		cbz	r3, .L483
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6337              		.loc 1 5070 5 is_stmt 1 view .LVU1747
 6338              	.LBB225:
 6339              	.LBI225:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6340              		.loc 2 191 30 view .LVU1748
 6341              	.LBB226:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6342              		.loc 2 193 1 view .LVU1749
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6343              		.loc 2 195 2 view .LVU1750
 6344              		.syntax unified
 6345              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6346 0058 4FF05003 			mov r3, #80												
 6347 005c 83F31188 		msr basepri, r3											
 6348 0060 BFF36F8F 		isb														
 6349 0064 BFF34F8F 		dsb														
 6350              	
 6351              	@ 0 "" 2
 6352              	.LVL427:
 6353              		.thumb
 6354              		.syntax unified
 6355              	.L484:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6356              		.loc 2 195 2 is_stmt 0 view .LVU1751
 6357              	.LBE226:
 6358              	.LBE225:
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6359              		.loc 1 5070 5 is_stmt 1 discriminator 2 view .LVU1752
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6360              		.loc 1 5070 5 discriminator 2 view .LVU1753
ARM GAS  /tmp/ccB9thnJ.s 			page 237


 6361 0068 FEE7     		b	.L484
 6362              	.L483:
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6363              		.loc 1 5070 82 discriminator 2 view .LVU1754
5072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6364              		.loc 1 5072 5 discriminator 2 view .LVU1755
5072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6365              		.loc 1 5072 30 is_stmt 0 discriminator 2 view .LVU1756
 6366 006a 144B     		ldr	r3, .L491
 6367 006c 1B68     		ldr	r3, [r3]
5072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6368              		.loc 1 5072 7 discriminator 2 view .LVU1757
 6369 006e FBB9     		cbnz	r3, .L485
5074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6370              		.loc 1 5074 6 is_stmt 1 view .LVU1758
5074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6371              		.loc 1 5074 15 is_stmt 0 view .LVU1759
 6372 0070 271D     		adds	r7, r4, #4
 6373 0072 3846     		mov	r0, r7
 6374 0074 FFF7FEFF 		bl	uxListRemove
 6375              	.LVL428:
5075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6376              		.loc 1 5075 6 is_stmt 1 view .LVU1760
5075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6377              		.loc 1 5075 6 view .LVU1761
 6378 0078 E06A     		ldr	r0, [r4, #44]
 6379 007a 0123     		movs	r3, #1
 6380 007c 8340     		lsls	r3, r3, r0
 6381 007e 104A     		ldr	r2, .L491+4
 6382 0080 1168     		ldr	r1, [r2]
 6383 0082 0B43     		orrs	r3, r3, r1
 6384 0084 1360     		str	r3, [r2]
5075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6385              		.loc 1 5075 6 view .LVU1762
 6386 0086 00EB8000 		add	r0, r0, r0, lsl #2
 6387 008a 3946     		mov	r1, r7
 6388 008c 0D4B     		ldr	r3, .L491+8
 6389 008e 03EB8000 		add	r0, r3, r0, lsl #2
 6390 0092 FFF7FEFF 		bl	vListInsertEnd
 6391              	.LVL429:
5075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6392              		.loc 1 5075 36 view .LVU1763
 6393              	.L486:
5084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6394              		.loc 1 5084 5 view .LVU1764
5084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6395              		.loc 1 5084 14 is_stmt 0 view .LVU1765
 6396 0096 E26A     		ldr	r2, [r4, #44]
5084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6397              		.loc 1 5084 41 view .LVU1766
 6398 0098 0B4B     		ldr	r3, .L491+12
 6399 009a 1B68     		ldr	r3, [r3]
 6400 009c DB6A     		ldr	r3, [r3, #44]
5084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6401              		.loc 1 5084 7 view .LVU1767
 6402 009e 9A42     		cmp	r2, r3
 6403 00a0 CCD9     		bls	.L482
ARM GAS  /tmp/ccB9thnJ.s 			page 238


5088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6404              		.loc 1 5088 6 is_stmt 1 view .LVU1768
5088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6405              		.loc 1 5088 8 is_stmt 0 view .LVU1769
 6406 00a2 0DB1     		cbz	r5, .L487
5090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6407              		.loc 1 5090 7 is_stmt 1 view .LVU1770
5090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6408              		.loc 1 5090 34 is_stmt 0 view .LVU1771
 6409 00a4 0123     		movs	r3, #1
 6410 00a6 2B60     		str	r3, [r5]
 6411              	.L487:
5096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6412              		.loc 1 5096 6 is_stmt 1 view .LVU1772
5096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6413              		.loc 1 5096 20 is_stmt 0 view .LVU1773
 6414 00a8 084B     		ldr	r3, .L491+16
 6415 00aa 0122     		movs	r2, #1
 6416 00ac 1A60     		str	r2, [r3]
 6417 00ae C5E7     		b	.L482
 6418              	.L485:
5081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6419              		.loc 1 5081 6 is_stmt 1 view .LVU1774
 6420 00b0 04F11801 		add	r1, r4, #24
 6421 00b4 0648     		ldr	r0, .L491+20
 6422 00b6 FFF7FEFF 		bl	vListInsertEnd
 6423              	.LVL430:
 6424 00ba ECE7     		b	.L486
 6425              	.L492:
 6426              		.align	2
 6427              	.L491:
 6428 00bc 00000000 		.word	uxSchedulerSuspended
 6429 00c0 00000000 		.word	uxTopReadyPriority
 6430 00c4 00000000 		.word	pxReadyTasksLists
 6431 00c8 00000000 		.word	pxCurrentTCB
 6432 00cc 00000000 		.word	xYieldPending
 6433 00d0 00000000 		.word	xPendingReadyList
 6434              		.cfi_endproc
 6435              	.LFE53:
 6437              		.section	.text.xTaskNotifyStateClear,"ax",%progbits
 6438              		.align	1
 6439              		.global	xTaskNotifyStateClear
 6440              		.syntax unified
 6441              		.thumb
 6442              		.thumb_func
 6444              	xTaskNotifyStateClear:
 6445              	.LVL431:
 6446              	.LFB54:
5113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 6447              		.loc 1 5113 2 view -0
 6448              		.cfi_startproc
 6449              		@ args = 0, pretend = 0, frame = 0
 6450              		@ frame_needed = 0, uses_anonymous_args = 0
5113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 6451              		.loc 1 5113 2 is_stmt 0 view .LVU1776
 6452 0000 10B5     		push	{r4, lr}
 6453              	.LCFI55:
ARM GAS  /tmp/ccB9thnJ.s 			page 239


 6454              		.cfi_def_cfa_offset 8
 6455              		.cfi_offset 4, -8
 6456              		.cfi_offset 14, -4
5114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 6457              		.loc 1 5114 2 is_stmt 1 view .LVU1777
5115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6458              		.loc 1 5115 2 view .LVU1778
5119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6459              		.loc 1 5119 3 view .LVU1779
5119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6460              		.loc 1 5119 11 is_stmt 0 view .LVU1780
 6461 0002 0446     		mov	r4, r0
 6462 0004 58B1     		cbz	r0, .L498
 6463              	.LVL432:
 6464              	.L494:
5121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 6465              		.loc 1 5121 3 is_stmt 1 discriminator 4 view .LVU1781
 6466 0006 FFF7FEFF 		bl	vPortEnterCritical
 6467              	.LVL433:
5123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6468              		.loc 1 5123 4 discriminator 4 view .LVU1782
5123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6469              		.loc 1 5123 13 is_stmt 0 discriminator 4 view .LVU1783
 6470 000a 94F87431 		ldrb	r3, [r4, #372]	@ zero_extendqisi2
 6471 000e DBB2     		uxtb	r3, r3
5123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6472              		.loc 1 5123 6 discriminator 4 view .LVU1784
 6473 0010 022B     		cmp	r3, #2
 6474 0012 07D0     		beq	.L499
5130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6475              		.loc 1 5130 13 view .LVU1785
 6476 0014 0024     		movs	r4, #0
 6477              	.LVL434:
 6478              	.L495:
5133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6479              		.loc 1 5133 3 is_stmt 1 view .LVU1786
 6480 0016 FFF7FEFF 		bl	vPortExitCritical
 6481              	.LVL435:
5135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6482              		.loc 1 5135 3 view .LVU1787
5136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6483              		.loc 1 5136 2 is_stmt 0 view .LVU1788
 6484 001a 2046     		mov	r0, r4
 6485 001c 10BD     		pop	{r4, pc}
 6486              	.LVL436:
 6487              	.L498:
5119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6488              		.loc 1 5119 11 discriminator 1 view .LVU1789
 6489 001e 044B     		ldr	r3, .L500
 6490 0020 1C68     		ldr	r4, [r3]
 6491              	.LVL437:
5119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6492              		.loc 1 5119 11 discriminator 1 view .LVU1790
 6493 0022 F0E7     		b	.L494
 6494              	.LVL438:
 6495              	.L499:
5125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
ARM GAS  /tmp/ccB9thnJ.s 			page 240


 6496              		.loc 1 5125 5 is_stmt 1 view .LVU1791
5125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 6497              		.loc 1 5125 26 is_stmt 0 view .LVU1792
 6498 0024 0023     		movs	r3, #0
 6499 0026 84F87431 		strb	r3, [r4, #372]
5126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6500              		.loc 1 5126 5 is_stmt 1 view .LVU1793
 6501              	.LVL439:
5126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6502              		.loc 1 5126 13 is_stmt 0 view .LVU1794
 6503 002a 0124     		movs	r4, #1
 6504              	.LVL440:
5126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6505              		.loc 1 5126 13 view .LVU1795
 6506 002c F3E7     		b	.L495
 6507              	.L501:
 6508 002e 00BF     		.align	2
 6509              	.L500:
 6510 0030 00000000 		.word	pxCurrentTCB
 6511              		.cfi_endproc
 6512              	.LFE54:
 6514              		.section	.text.ulTaskNotifyValueClear,"ax",%progbits
 6515              		.align	1
 6516              		.global	ulTaskNotifyValueClear
 6517              		.syntax unified
 6518              		.thumb
 6519              		.thumb_func
 6521              	ulTaskNotifyValueClear:
 6522              	.LVL441:
 6523              	.LFB55:
5144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 6524              		.loc 1 5144 2 is_stmt 1 view -0
 6525              		.cfi_startproc
 6526              		@ args = 0, pretend = 0, frame = 0
 6527              		@ frame_needed = 0, uses_anonymous_args = 0
5144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 6528              		.loc 1 5144 2 is_stmt 0 view .LVU1797
 6529 0000 70B5     		push	{r4, r5, r6, lr}
 6530              	.LCFI56:
 6531              		.cfi_def_cfa_offset 16
 6532              		.cfi_offset 4, -16
 6533              		.cfi_offset 5, -12
 6534              		.cfi_offset 6, -8
 6535              		.cfi_offset 14, -4
 6536 0002 0C46     		mov	r4, r1
5145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 6537              		.loc 1 5145 2 is_stmt 1 view .LVU1798
5146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6538              		.loc 1 5146 2 view .LVU1799
5150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6539              		.loc 1 5150 3 view .LVU1800
5150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6540              		.loc 1 5150 11 is_stmt 0 view .LVU1801
 6541 0004 0546     		mov	r5, r0
 6542 0006 78B1     		cbz	r0, .L505
 6543              	.LVL442:
 6544              	.L503:
ARM GAS  /tmp/ccB9thnJ.s 			page 241


5152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 6545              		.loc 1 5152 3 is_stmt 1 discriminator 4 view .LVU1802
 6546 0008 FFF7FEFF 		bl	vPortEnterCritical
 6547              	.LVL443:
5156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ulNotifiedValue &= ~ulBitsToClear;
 6548              		.loc 1 5156 4 discriminator 4 view .LVU1803
5156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ulNotifiedValue &= ~ulBitsToClear;
 6549              		.loc 1 5156 27 is_stmt 0 discriminator 4 view .LVU1804
 6550 000c 084B     		ldr	r3, .L506
 6551 000e 1B68     		ldr	r3, [r3]
5156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ulNotifiedValue &= ~ulBitsToClear;
 6552              		.loc 1 5156 13 discriminator 4 view .LVU1805
 6553 0010 D3F87061 		ldr	r6, [r3, #368]
 6554              	.LVL444:
5157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 6555              		.loc 1 5157 4 is_stmt 1 discriminator 4 view .LVU1806
5157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 6556              		.loc 1 5157 9 is_stmt 0 discriminator 4 view .LVU1807
 6557 0014 D5F87031 		ldr	r3, [r5, #368]
5157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 6558              		.loc 1 5157 27 discriminator 4 view .LVU1808
 6559 0018 23EA0403 		bic	r3, r3, r4
 6560 001c C5F87031 		str	r3, [r5, #368]
5159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6561              		.loc 1 5159 3 is_stmt 1 discriminator 4 view .LVU1809
 6562 0020 FFF7FEFF 		bl	vPortExitCritical
 6563              	.LVL445:
5161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6564              		.loc 1 5161 3 discriminator 4 view .LVU1810
5162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6565              		.loc 1 5162 2 is_stmt 0 discriminator 4 view .LVU1811
 6566 0024 3046     		mov	r0, r6
 6567 0026 70BD     		pop	{r4, r5, r6, pc}
 6568              	.LVL446:
 6569              	.L505:
5150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6570              		.loc 1 5150 11 discriminator 1 view .LVU1812
 6571 0028 014B     		ldr	r3, .L506
 6572 002a 1D68     		ldr	r5, [r3]
 6573              	.LVL447:
5150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6574              		.loc 1 5150 11 discriminator 1 view .LVU1813
 6575 002c ECE7     		b	.L503
 6576              	.L507:
 6577 002e 00BF     		.align	2
 6578              	.L506:
 6579 0030 00000000 		.word	pxCurrentTCB
 6580              		.cfi_endproc
 6581              	.LFE55:
 6583              		.section	.bss.uxSchedulerSuspended,"aw",%nobits
 6584              		.align	2
 6587              	uxSchedulerSuspended:
 6588 0000 00000000 		.space	4
 6589              		.section	.bss.xIdleTaskHandle,"aw",%nobits
 6590              		.align	2
 6593              	xIdleTaskHandle:
 6594 0000 00000000 		.space	4
ARM GAS  /tmp/ccB9thnJ.s 			page 242


 6595              		.section	.bss.xNextTaskUnblockTime,"aw",%nobits
 6596              		.align	2
 6599              	xNextTaskUnblockTime:
 6600 0000 00000000 		.space	4
 6601              		.section	.bss.uxTaskNumber,"aw",%nobits
 6602              		.align	2
 6605              	uxTaskNumber:
 6606 0000 00000000 		.space	4
 6607              		.section	.bss.xNumOfOverflows,"aw",%nobits
 6608              		.align	2
 6611              	xNumOfOverflows:
 6612 0000 00000000 		.space	4
 6613              		.section	.bss.xYieldPending,"aw",%nobits
 6614              		.align	2
 6617              	xYieldPending:
 6618 0000 00000000 		.space	4
 6619              		.section	.bss.xPendedTicks,"aw",%nobits
 6620              		.align	2
 6623              	xPendedTicks:
 6624 0000 00000000 		.space	4
 6625              		.section	.bss.xSchedulerRunning,"aw",%nobits
 6626              		.align	2
 6629              	xSchedulerRunning:
 6630 0000 00000000 		.space	4
 6631              		.section	.bss.uxTopReadyPriority,"aw",%nobits
 6632              		.align	2
 6635              	uxTopReadyPriority:
 6636 0000 00000000 		.space	4
 6637              		.section	.bss.xTickCount,"aw",%nobits
 6638              		.align	2
 6641              	xTickCount:
 6642 0000 00000000 		.space	4
 6643              		.section	.bss.uxCurrentNumberOfTasks,"aw",%nobits
 6644              		.align	2
 6647              	uxCurrentNumberOfTasks:
 6648 0000 00000000 		.space	4
 6649              		.section	.bss.xSuspendedTaskList,"aw",%nobits
 6650              		.align	2
 6653              	xSuspendedTaskList:
 6654 0000 00000000 		.space	20
 6654      00000000 
 6654      00000000 
 6654      00000000 
 6654      00000000 
 6655              		.section	.bss.uxDeletedTasksWaitingCleanUp,"aw",%nobits
 6656              		.align	2
 6659              	uxDeletedTasksWaitingCleanUp:
 6660 0000 00000000 		.space	4
 6661              		.section	.bss.xTasksWaitingTermination,"aw",%nobits
 6662              		.align	2
 6665              	xTasksWaitingTermination:
 6666 0000 00000000 		.space	20
 6666      00000000 
 6666      00000000 
 6666      00000000 
 6666      00000000 
 6667              		.section	.bss.xPendingReadyList,"aw",%nobits
ARM GAS  /tmp/ccB9thnJ.s 			page 243


 6668              		.align	2
 6671              	xPendingReadyList:
 6672 0000 00000000 		.space	20
 6672      00000000 
 6672      00000000 
 6672      00000000 
 6672      00000000 
 6673              		.section	.bss.pxOverflowDelayedTaskList,"aw",%nobits
 6674              		.align	2
 6677              	pxOverflowDelayedTaskList:
 6678 0000 00000000 		.space	4
 6679              		.section	.bss.pxDelayedTaskList,"aw",%nobits
 6680              		.align	2
 6683              	pxDelayedTaskList:
 6684 0000 00000000 		.space	4
 6685              		.section	.bss.xDelayedTaskList2,"aw",%nobits
 6686              		.align	2
 6689              	xDelayedTaskList2:
 6690 0000 00000000 		.space	20
 6690      00000000 
 6690      00000000 
 6690      00000000 
 6690      00000000 
 6691              		.section	.bss.xDelayedTaskList1,"aw",%nobits
 6692              		.align	2
 6695              	xDelayedTaskList1:
 6696 0000 00000000 		.space	20
 6696      00000000 
 6696      00000000 
 6696      00000000 
 6696      00000000 
 6697              		.section	.bss.pxReadyTasksLists,"aw",%nobits
 6698              		.align	2
 6701              	pxReadyTasksLists:
 6702 0000 00000000 		.space	140
 6702      00000000 
 6702      00000000 
 6702      00000000 
 6702      00000000 
 6703              		.global	pxCurrentTCB
 6704              		.section	.bss.pxCurrentTCB,"aw",%nobits
 6705              		.align	2
 6708              	pxCurrentTCB:
 6709 0000 00000000 		.space	4
 6710              		.text
 6711              	.Letext0:
 6712              		.file 3 "/opt/gcc-arm-none-eabi/lib/gcc/arm-none-eabi/12.3.1/include/stddef.h"
 6713              		.file 4 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 6714              		.file 5 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/sys/_types.h"
 6715              		.file 6 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/sys/reent.h"
 6716              		.file 7 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/sys/lock.h"
 6717              		.file 8 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 6718              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h"
 6719              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 6720              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 6721              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 6722              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
ARM GAS  /tmp/ccB9thnJ.s 			page 244


 6723              		.file 14 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/string.h"
 6724              		.file 15 "<built-in>"
ARM GAS  /tmp/ccB9thnJ.s 			page 245


DEFINED SYMBOLS
                            *ABS*:00000000 tasks.c
     /tmp/ccB9thnJ.s:21     .text.prvTaskIsTaskSuspended:00000000 $t
     /tmp/ccB9thnJ.s:26     .text.prvTaskIsTaskSuspended:00000000 prvTaskIsTaskSuspended
     /tmp/ccB9thnJ.s:114    .text.prvTaskIsTaskSuspended:00000038 $d
     /tmp/ccB9thnJ.s:6653   .bss.xSuspendedTaskList:00000000 xSuspendedTaskList
     /tmp/ccB9thnJ.s:6671   .bss.xPendingReadyList:00000000 xPendingReadyList
     /tmp/ccB9thnJ.s:120    .text.prvResetNextTaskUnblockTime:00000000 $t
     /tmp/ccB9thnJ.s:125    .text.prvResetNextTaskUnblockTime:00000000 prvResetNextTaskUnblockTime
     /tmp/ccB9thnJ.s:168    .text.prvResetNextTaskUnblockTime:00000024 $d
     /tmp/ccB9thnJ.s:6683   .bss.pxDelayedTaskList:00000000 pxDelayedTaskList
     /tmp/ccB9thnJ.s:6599   .bss.xNextTaskUnblockTime:00000000 xNextTaskUnblockTime
     /tmp/ccB9thnJ.s:174    .text.prvInitialiseNewTask:00000000 $t
     /tmp/ccB9thnJ.s:179    .text.prvInitialiseNewTask:00000000 prvInitialiseNewTask
     /tmp/ccB9thnJ.s:376    .text.prvInitialiseNewTask:000000f8 $d
     /tmp/ccB9thnJ.s:381    .text.prvInitialiseTaskLists:00000000 $t
     /tmp/ccB9thnJ.s:386    .text.prvInitialiseTaskLists:00000000 prvInitialiseTaskLists
     /tmp/ccB9thnJ.s:459    .text.prvInitialiseTaskLists:00000048 $d
     /tmp/ccB9thnJ.s:6701   .bss.pxReadyTasksLists:00000000 pxReadyTasksLists
     /tmp/ccB9thnJ.s:6695   .bss.xDelayedTaskList1:00000000 xDelayedTaskList1
     /tmp/ccB9thnJ.s:6689   .bss.xDelayedTaskList2:00000000 xDelayedTaskList2
     /tmp/ccB9thnJ.s:6665   .bss.xTasksWaitingTermination:00000000 xTasksWaitingTermination
     /tmp/ccB9thnJ.s:6677   .bss.pxOverflowDelayedTaskList:00000000 pxOverflowDelayedTaskList
     /tmp/ccB9thnJ.s:471    .text.prvAddNewTaskToReadyList:00000000 $t
     /tmp/ccB9thnJ.s:476    .text.prvAddNewTaskToReadyList:00000000 prvAddNewTaskToReadyList
     /tmp/ccB9thnJ.s:612    .text.prvAddNewTaskToReadyList:00000090 $d
     /tmp/ccB9thnJ.s:6647   .bss.uxCurrentNumberOfTasks:00000000 uxCurrentNumberOfTasks
     /tmp/ccB9thnJ.s:6708   .bss.pxCurrentTCB:00000000 pxCurrentTCB
     /tmp/ccB9thnJ.s:6629   .bss.xSchedulerRunning:00000000 xSchedulerRunning
     /tmp/ccB9thnJ.s:6605   .bss.uxTaskNumber:00000000 uxTaskNumber
     /tmp/ccB9thnJ.s:6635   .bss.uxTopReadyPriority:00000000 uxTopReadyPriority
     /tmp/ccB9thnJ.s:622    .text.prvDeleteTCB:00000000 $t
     /tmp/ccB9thnJ.s:627    .text.prvDeleteTCB:00000000 prvDeleteTCB
     /tmp/ccB9thnJ.s:708    .text.prvCheckTasksWaitingTermination:00000000 $t
     /tmp/ccB9thnJ.s:713    .text.prvCheckTasksWaitingTermination:00000000 prvCheckTasksWaitingTermination
     /tmp/ccB9thnJ.s:786    .text.prvCheckTasksWaitingTermination:00000040 $d
     /tmp/ccB9thnJ.s:6659   .bss.uxDeletedTasksWaitingCleanUp:00000000 uxDeletedTasksWaitingCleanUp
     /tmp/ccB9thnJ.s:793    .text.prvIdleTask:00000000 $t
     /tmp/ccB9thnJ.s:798    .text.prvIdleTask:00000000 prvIdleTask
     /tmp/ccB9thnJ.s:847    .text.prvIdleTask:00000024 $d
     /tmp/ccB9thnJ.s:852    .text.prvAddCurrentTaskToDelayedList:00000000 $t
     /tmp/ccB9thnJ.s:857    .text.prvAddCurrentTaskToDelayedList:00000000 prvAddCurrentTaskToDelayedList
     /tmp/ccB9thnJ.s:977    .text.prvAddCurrentTaskToDelayedList:0000007c $d
     /tmp/ccB9thnJ.s:6641   .bss.xTickCount:00000000 xTickCount
     /tmp/ccB9thnJ.s:988    .text.xTaskCreateStatic:00000000 $t
     /tmp/ccB9thnJ.s:994    .text.xTaskCreateStatic:00000000 xTaskCreateStatic
     /tmp/ccB9thnJ.s:1156   .text.xTaskCreate:00000000 $t
     /tmp/ccB9thnJ.s:1162   .text.xTaskCreate:00000000 xTaskCreate
     /tmp/ccB9thnJ.s:1279   .text.vTaskDelete:00000000 $t
     /tmp/ccB9thnJ.s:1285   .text.vTaskDelete:00000000 vTaskDelete
     /tmp/ccB9thnJ.s:1470   .text.vTaskDelete:000000bc $d
     /tmp/ccB9thnJ.s:6587   .bss.uxSchedulerSuspended:00000000 uxSchedulerSuspended
     /tmp/ccB9thnJ.s:1483   .text.uxTaskPriorityGet:00000000 $t
     /tmp/ccB9thnJ.s:1489   .text.uxTaskPriorityGet:00000000 uxTaskPriorityGet
     /tmp/ccB9thnJ.s:1535   .text.uxTaskPriorityGet:0000001c $d
     /tmp/ccB9thnJ.s:1540   .text.uxTaskPriorityGetFromISR:00000000 $t
     /tmp/ccB9thnJ.s:1546   .text.uxTaskPriorityGetFromISR:00000000 uxTaskPriorityGetFromISR
ARM GAS  /tmp/ccB9thnJ.s 			page 246


     /tmp/ccB9thnJ.s:1625   .text.uxTaskPriorityGetFromISR:0000002c $d
     /tmp/ccB9thnJ.s:1630   .text.vTaskPrioritySet:00000000 $t
     /tmp/ccB9thnJ.s:1636   .text.vTaskPrioritySet:00000000 vTaskPrioritySet
     /tmp/ccB9thnJ.s:1878   .text.vTaskPrioritySet:000000d8 $d
     /tmp/ccB9thnJ.s:1885   .text.vTaskResume:00000000 $t
     /tmp/ccB9thnJ.s:1891   .text.vTaskResume:00000000 vTaskResume
     /tmp/ccB9thnJ.s:2021   .text.vTaskResume:0000007c $d
     /tmp/ccB9thnJ.s:2028   .text.xTaskResumeFromISR:00000000 $t
     /tmp/ccB9thnJ.s:2034   .text.xTaskResumeFromISR:00000000 xTaskResumeFromISR
     /tmp/ccB9thnJ.s:2202   .text.xTaskResumeFromISR:00000090 $d
     /tmp/ccB9thnJ.s:2211   .rodata.vTaskStartScheduler.str1.4:00000000 $d
     /tmp/ccB9thnJ.s:2215   .text.vTaskStartScheduler:00000000 $t
     /tmp/ccB9thnJ.s:2221   .text.vTaskStartScheduler:00000000 vTaskStartScheduler
     /tmp/ccB9thnJ.s:2332   .text.vTaskStartScheduler:00000064 $d
     /tmp/ccB9thnJ.s:6593   .bss.xIdleTaskHandle:00000000 xIdleTaskHandle
     /tmp/ccB9thnJ.s:2344   .text.vTaskEndScheduler:00000000 $t
     /tmp/ccB9thnJ.s:2350   .text.vTaskEndScheduler:00000000 vTaskEndScheduler
     /tmp/ccB9thnJ.s:2393   .text.vTaskEndScheduler:00000020 $d
     /tmp/ccB9thnJ.s:2398   .text.vTaskSuspendAll:00000000 $t
     /tmp/ccB9thnJ.s:2404   .text.vTaskSuspendAll:00000000 vTaskSuspendAll
     /tmp/ccB9thnJ.s:2423   .text.vTaskSuspendAll:0000000c $d
     /tmp/ccB9thnJ.s:2428   .text.xTaskGetTickCount:00000000 $t
     /tmp/ccB9thnJ.s:2434   .text.xTaskGetTickCount:00000000 xTaskGetTickCount
     /tmp/ccB9thnJ.s:2455   .text.xTaskGetTickCount:00000008 $d
     /tmp/ccB9thnJ.s:2460   .text.xTaskGetTickCountFromISR:00000000 $t
     /tmp/ccB9thnJ.s:2466   .text.xTaskGetTickCountFromISR:00000000 xTaskGetTickCountFromISR
     /tmp/ccB9thnJ.s:2495   .text.xTaskGetTickCountFromISR:0000000c $d
     /tmp/ccB9thnJ.s:2500   .text.uxTaskGetNumberOfTasks:00000000 $t
     /tmp/ccB9thnJ.s:2506   .text.uxTaskGetNumberOfTasks:00000000 uxTaskGetNumberOfTasks
     /tmp/ccB9thnJ.s:2522   .text.uxTaskGetNumberOfTasks:00000008 $d
     /tmp/ccB9thnJ.s:2527   .text.pcTaskGetName:00000000 $t
     /tmp/ccB9thnJ.s:2533   .text.pcTaskGetName:00000000 pcTaskGetName
     /tmp/ccB9thnJ.s:2590   .text.pcTaskGetName:00000024 $d
     /tmp/ccB9thnJ.s:2595   .text.xTaskIncrementTick:00000000 $t
     /tmp/ccB9thnJ.s:2601   .text.xTaskIncrementTick:00000000 xTaskIncrementTick
     /tmp/ccB9thnJ.s:2867   .text.xTaskIncrementTick:000000ec $d
     /tmp/ccB9thnJ.s:6611   .bss.xNumOfOverflows:00000000 xNumOfOverflows
     /tmp/ccB9thnJ.s:6617   .bss.xYieldPending:00000000 xYieldPending
     /tmp/ccB9thnJ.s:6623   .bss.xPendedTicks:00000000 xPendedTicks
     /tmp/ccB9thnJ.s:2882   .text.xTaskResumeAll:00000000 $t
     /tmp/ccB9thnJ.s:2888   .text.xTaskResumeAll:00000000 xTaskResumeAll
     /tmp/ccB9thnJ.s:3122   .text.xTaskResumeAll:000000d8 $d
     /tmp/ccB9thnJ.s:3134   .text.vTaskDelay:00000000 $t
     /tmp/ccB9thnJ.s:3140   .text.vTaskDelay:00000000 vTaskDelay
     /tmp/ccB9thnJ.s:3232   .text.vTaskDelay:00000048 $d
     /tmp/ccB9thnJ.s:3237   .text.xTaskCatchUpTicks:00000000 $t
     /tmp/ccB9thnJ.s:3243   .text.xTaskCatchUpTicks:00000000 xTaskCatchUpTicks
     /tmp/ccB9thnJ.s:3310   .text.xTaskCatchUpTicks:00000030 $d
     /tmp/ccB9thnJ.s:3316   .text.vTaskSwitchContext:00000000 $t
     /tmp/ccB9thnJ.s:3322   .text.vTaskSwitchContext:00000000 vTaskSwitchContext
     /tmp/ccB9thnJ.s:3471   .text.vTaskSwitchContext:0000008c $d
     /tmp/ccB9thnJ.s:3483   .text.vTaskSuspend:00000000 $t
     /tmp/ccB9thnJ.s:3489   .text.vTaskSuspend:00000000 vTaskSuspend
     /tmp/ccB9thnJ.s:3693   .text.vTaskSuspend:000000d0 $d
     /tmp/ccB9thnJ.s:3704   .text.vTaskPlaceOnEventList:00000000 $t
     /tmp/ccB9thnJ.s:3710   .text.vTaskPlaceOnEventList:00000000 vTaskPlaceOnEventList
     /tmp/ccB9thnJ.s:3777   .text.vTaskPlaceOnEventList:0000002c $d
ARM GAS  /tmp/ccB9thnJ.s 			page 247


     /tmp/ccB9thnJ.s:3782   .text.vTaskPlaceOnUnorderedEventList:00000000 $t
     /tmp/ccB9thnJ.s:3788   .text.vTaskPlaceOnUnorderedEventList:00000000 vTaskPlaceOnUnorderedEventList
     /tmp/ccB9thnJ.s:3903   .text.vTaskPlaceOnUnorderedEventList:00000050 $d
     /tmp/ccB9thnJ.s:3909   .text.xTaskRemoveFromEventList:00000000 $t
     /tmp/ccB9thnJ.s:3915   .text.xTaskRemoveFromEventList:00000000 xTaskRemoveFromEventList
     /tmp/ccB9thnJ.s:4045   .text.xTaskRemoveFromEventList:00000074 $d
     /tmp/ccB9thnJ.s:4055   .text.vTaskRemoveFromUnorderedEventList:00000000 $t
     /tmp/ccB9thnJ.s:4061   .text.vTaskRemoveFromUnorderedEventList:00000000 vTaskRemoveFromUnorderedEventList
     /tmp/ccB9thnJ.s:4195   .text.vTaskRemoveFromUnorderedEventList:00000074 $d
     /tmp/ccB9thnJ.s:4204   .text.vTaskSetTimeOutState:00000000 $t
     /tmp/ccB9thnJ.s:4210   .text.vTaskSetTimeOutState:00000000 vTaskSetTimeOutState
     /tmp/ccB9thnJ.s:4279   .text.vTaskSetTimeOutState:00000030 $d
     /tmp/ccB9thnJ.s:4285   .text.vTaskInternalSetTimeOutState:00000000 $t
     /tmp/ccB9thnJ.s:4291   .text.vTaskInternalSetTimeOutState:00000000 vTaskInternalSetTimeOutState
     /tmp/ccB9thnJ.s:4314   .text.vTaskInternalSetTimeOutState:00000010 $d
     /tmp/ccB9thnJ.s:4320   .text.xTaskCheckForTimeOut:00000000 $t
     /tmp/ccB9thnJ.s:4326   .text.xTaskCheckForTimeOut:00000000 xTaskCheckForTimeOut
     /tmp/ccB9thnJ.s:4501   .text.xTaskCheckForTimeOut:0000007c $d
     /tmp/ccB9thnJ.s:4508   .text.vTaskMissedYield:00000000 $t
     /tmp/ccB9thnJ.s:4514   .text.vTaskMissedYield:00000000 vTaskMissedYield
     /tmp/ccB9thnJ.s:4531   .text.vTaskMissedYield:00000008 $d
     /tmp/ccB9thnJ.s:4536   .text.xTaskGetCurrentTaskHandle:00000000 $t
     /tmp/ccB9thnJ.s:4542   .text.xTaskGetCurrentTaskHandle:00000000 xTaskGetCurrentTaskHandle
     /tmp/ccB9thnJ.s:4561   .text.xTaskGetCurrentTaskHandle:00000008 $d
     /tmp/ccB9thnJ.s:4566   .text.xTaskGetSchedulerState:00000000 $t
     /tmp/ccB9thnJ.s:4572   .text.xTaskGetSchedulerState:00000000 xTaskGetSchedulerState
     /tmp/ccB9thnJ.s:4610   .text.xTaskGetSchedulerState:00000018 $d
     /tmp/ccB9thnJ.s:4616   .text.xTaskPriorityInherit:00000000 $t
     /tmp/ccB9thnJ.s:4622   .text.xTaskPriorityInherit:00000000 xTaskPriorityInherit
     /tmp/ccB9thnJ.s:4788   .text.xTaskPriorityInherit:000000a0 $d
     /tmp/ccB9thnJ.s:4795   .text.xTaskPriorityDisinherit:00000000 $t
     /tmp/ccB9thnJ.s:4801   .text.xTaskPriorityDisinherit:00000000 xTaskPriorityDisinherit
     /tmp/ccB9thnJ.s:4996   .text.xTaskPriorityDisinherit:000000a4 $d
     /tmp/ccB9thnJ.s:5003   .text.vTaskPriorityDisinheritAfterTimeout:00000000 $t
     /tmp/ccB9thnJ.s:5009   .text.vTaskPriorityDisinheritAfterTimeout:00000000 vTaskPriorityDisinheritAfterTimeout
     /tmp/ccB9thnJ.s:5205   .text.vTaskPriorityDisinheritAfterTimeout:000000a8 $d
     /tmp/ccB9thnJ.s:5212   .text.uxTaskResetEventItemValue:00000000 $t
     /tmp/ccB9thnJ.s:5218   .text.uxTaskResetEventItemValue:00000000 uxTaskResetEventItemValue
     /tmp/ccB9thnJ.s:5245   .text.uxTaskResetEventItemValue:00000014 $d
     /tmp/ccB9thnJ.s:5250   .text.pvTaskIncrementMutexHeldCount:00000000 $t
     /tmp/ccB9thnJ.s:5256   .text.pvTaskIncrementMutexHeldCount:00000000 pvTaskIncrementMutexHeldCount
     /tmp/ccB9thnJ.s:5287   .text.pvTaskIncrementMutexHeldCount:00000018 $d
     /tmp/ccB9thnJ.s:5292   .text.ulTaskNotifyTake:00000000 $t
     /tmp/ccB9thnJ.s:5298   .text.ulTaskNotifyTake:00000000 ulTaskNotifyTake
     /tmp/ccB9thnJ.s:5420   .text.ulTaskNotifyTake:0000007c $d
     /tmp/ccB9thnJ.s:5425   .text.xTaskNotifyWait:00000000 $t
     /tmp/ccB9thnJ.s:5431   .text.xTaskNotifyWait:00000000 xTaskNotifyWait
     /tmp/ccB9thnJ.s:5573   .text.xTaskNotifyWait:000000a0 $d
     /tmp/ccB9thnJ.s:5578   .text.xTaskGenericNotify:00000000 $t
     /tmp/ccB9thnJ.s:5584   .text.xTaskGenericNotify:00000000 xTaskGenericNotify
     /tmp/ccB9thnJ.s:5640   .text.xTaskGenericNotify:0000002c $d
     /tmp/ccB9thnJ.s:5850   .text.xTaskGenericNotify:000000fc $d
     /tmp/ccB9thnJ.s:5857   .text.xTaskGenericNotifyFromISR:00000000 $t
     /tmp/ccB9thnJ.s:5863   .text.xTaskGenericNotifyFromISR:00000000 xTaskGenericNotifyFromISR
     /tmp/ccB9thnJ.s:5943   .text.xTaskGenericNotifyFromISR:00000044 $d
     /tmp/ccB9thnJ.s:6193   .text.xTaskGenericNotifyFromISR:00000120 $d
     /tmp/ccB9thnJ.s:6203   .text.vTaskNotifyGiveFromISR:00000000 $t
ARM GAS  /tmp/ccB9thnJ.s 			page 248


     /tmp/ccB9thnJ.s:6209   .text.vTaskNotifyGiveFromISR:00000000 vTaskNotifyGiveFromISR
     /tmp/ccB9thnJ.s:6428   .text.vTaskNotifyGiveFromISR:000000bc $d
     /tmp/ccB9thnJ.s:6438   .text.xTaskNotifyStateClear:00000000 $t
     /tmp/ccB9thnJ.s:6444   .text.xTaskNotifyStateClear:00000000 xTaskNotifyStateClear
     /tmp/ccB9thnJ.s:6510   .text.xTaskNotifyStateClear:00000030 $d
     /tmp/ccB9thnJ.s:6515   .text.ulTaskNotifyValueClear:00000000 $t
     /tmp/ccB9thnJ.s:6521   .text.ulTaskNotifyValueClear:00000000 ulTaskNotifyValueClear
     /tmp/ccB9thnJ.s:6579   .text.ulTaskNotifyValueClear:00000030 $d
     /tmp/ccB9thnJ.s:6584   .bss.uxSchedulerSuspended:00000000 $d
     /tmp/ccB9thnJ.s:6590   .bss.xIdleTaskHandle:00000000 $d
     /tmp/ccB9thnJ.s:6596   .bss.xNextTaskUnblockTime:00000000 $d
     /tmp/ccB9thnJ.s:6602   .bss.uxTaskNumber:00000000 $d
     /tmp/ccB9thnJ.s:6608   .bss.xNumOfOverflows:00000000 $d
     /tmp/ccB9thnJ.s:6614   .bss.xYieldPending:00000000 $d
     /tmp/ccB9thnJ.s:6620   .bss.xPendedTicks:00000000 $d
     /tmp/ccB9thnJ.s:6626   .bss.xSchedulerRunning:00000000 $d
     /tmp/ccB9thnJ.s:6632   .bss.uxTopReadyPriority:00000000 $d
     /tmp/ccB9thnJ.s:6638   .bss.xTickCount:00000000 $d
     /tmp/ccB9thnJ.s:6644   .bss.uxCurrentNumberOfTasks:00000000 $d
     /tmp/ccB9thnJ.s:6650   .bss.xSuspendedTaskList:00000000 $d
     /tmp/ccB9thnJ.s:6656   .bss.uxDeletedTasksWaitingCleanUp:00000000 $d
     /tmp/ccB9thnJ.s:6662   .bss.xTasksWaitingTermination:00000000 $d
     /tmp/ccB9thnJ.s:6668   .bss.xPendingReadyList:00000000 $d
     /tmp/ccB9thnJ.s:6674   .bss.pxOverflowDelayedTaskList:00000000 $d
     /tmp/ccB9thnJ.s:6680   .bss.pxDelayedTaskList:00000000 $d
     /tmp/ccB9thnJ.s:6686   .bss.xDelayedTaskList2:00000000 $d
     /tmp/ccB9thnJ.s:6692   .bss.xDelayedTaskList1:00000000 $d
     /tmp/ccB9thnJ.s:6698   .bss.pxReadyTasksLists:00000000 $d
     /tmp/ccB9thnJ.s:6705   .bss.pxCurrentTCB:00000000 $d
     /tmp/ccB9thnJ.s:5646   .text.xTaskGenericNotify:00000031 $d
     /tmp/ccB9thnJ.s:5646   .text.xTaskGenericNotify:00000032 $t
     /tmp/ccB9thnJ.s:5949   .text.xTaskGenericNotifyFromISR:00000049 $d
     /tmp/ccB9thnJ.s:5949   .text.xTaskGenericNotifyFromISR:0000004a $t

UNDEFINED SYMBOLS
vListInitialiseItem
memset
pxPortInitialiseStack
__sf
vListInitialise
vPortEnterCritical
vListInsertEnd
vPortExitCritical
_reclaim_reent
vPortFree
uxListRemove
vListInsert
pvPortMalloc
vPortValidateInterruptPriority
vApplicationGetIdleTaskMemory
xPortStartScheduler
_impure_ptr
vPortEndScheduler

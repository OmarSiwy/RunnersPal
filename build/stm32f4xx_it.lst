ARM GAS  /tmp/ccsaIouy.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_it.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/stm32f4xx_it.c"
  20              		.section	.text.NMI_Handler,"ax",%progbits
  21              		.align	1
  22              		.global	NMI_Handler
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	NMI_Handler:
  28              	.LFB220:
   1:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f4xx_it.c **** /**
   3:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Core/Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f4xx_it.c ****   * @attention
   8:Core/Src/stm32f4xx_it.c ****   *
   9:Core/Src/stm32f4xx_it.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/stm32f4xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32f4xx_it.c ****   *
  12:Core/Src/stm32f4xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32f4xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32f4xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32f4xx_it.c ****   *
  16:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32f4xx_it.c ****   */
  18:Core/Src/stm32f4xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32f4xx_it.c **** 
  20:Core/Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32f4xx_it.c **** #include "main.h"
  22:Core/Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  23:Core/Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32f4xx_it.c **** 
  27:Core/Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32f4xx_it.c **** 
  30:Core/Src/stm32f4xx_it.c **** /* USER CODE END TD */
ARM GAS  /tmp/ccsaIouy.s 			page 2


  31:Core/Src/stm32f4xx_it.c **** 
  32:Core/Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  34:Core/Src/stm32f4xx_it.c **** 
  35:Core/Src/stm32f4xx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32f4xx_it.c **** 
  37:Core/Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32f4xx_it.c **** 
  40:Core/Src/stm32f4xx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32f4xx_it.c **** 
  42:Core/Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32f4xx_it.c **** 
  45:Core/Src/stm32f4xx_it.c **** /* USER CODE END PV */
  46:Core/Src/stm32f4xx_it.c **** 
  47:Core/Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  49:Core/Src/stm32f4xx_it.c **** 
  50:Core/Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  51:Core/Src/stm32f4xx_it.c **** 
  52:Core/Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/stm32f4xx_it.c **** 
  55:Core/Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  56:Core/Src/stm32f4xx_it.c **** 
  57:Core/Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Core/Src/stm32f4xx_it.c **** extern ADC_HandleTypeDef hadc1;
  59:Core/Src/stm32f4xx_it.c **** extern I2C_HandleTypeDef hi2c1;
  60:Core/Src/stm32f4xx_it.c **** extern SPI_HandleTypeDef hspi1;
  61:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim1;
  62:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim2;
  63:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim3;
  64:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim4;
  65:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim5;
  66:Core/Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart2;
  67:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim9;
  68:Core/Src/stm32f4xx_it.c **** 
  69:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  70:Core/Src/stm32f4xx_it.c **** 
  71:Core/Src/stm32f4xx_it.c **** /* USER CODE END EV */
  72:Core/Src/stm32f4xx_it.c **** 
  73:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  74:Core/Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  75:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  76:Core/Src/stm32f4xx_it.c **** /**
  77:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  78:Core/Src/stm32f4xx_it.c ****   */
  79:Core/Src/stm32f4xx_it.c **** void NMI_Handler(void)
  80:Core/Src/stm32f4xx_it.c **** {
  29              		.loc 1 80 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.L2:
ARM GAS  /tmp/ccsaIouy.s 			page 3


  81:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  82:Core/Src/stm32f4xx_it.c **** 
  83:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  84:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  85:Core/Src/stm32f4xx_it.c ****    while (1)
  36              		.loc 1 85 4 discriminator 1 view .LVU1
  86:Core/Src/stm32f4xx_it.c ****   {
  87:Core/Src/stm32f4xx_it.c ****   }
  37              		.loc 1 87 3 discriminator 1 view .LVU2
  85:Core/Src/stm32f4xx_it.c ****   {
  38              		.loc 1 85 10 discriminator 1 view .LVU3
  39 0000 FEE7     		b	.L2
  40              		.cfi_endproc
  41              	.LFE220:
  43              		.section	.text.HardFault_Handler,"ax",%progbits
  44              		.align	1
  45              		.global	HardFault_Handler
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  50              	HardFault_Handler:
  51              	.LFB221:
  88:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  89:Core/Src/stm32f4xx_it.c **** }
  90:Core/Src/stm32f4xx_it.c **** 
  91:Core/Src/stm32f4xx_it.c **** /**
  92:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  93:Core/Src/stm32f4xx_it.c ****   */
  94:Core/Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  95:Core/Src/stm32f4xx_it.c **** {
  52              		.loc 1 95 1 view -0
  53              		.cfi_startproc
  54              		@ Volatile: function does not return.
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  58              	.L4:
  96:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  97:Core/Src/stm32f4xx_it.c **** 
  98:Core/Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  99:Core/Src/stm32f4xx_it.c ****   while (1)
  59              		.loc 1 99 3 discriminator 1 view .LVU5
 100:Core/Src/stm32f4xx_it.c ****   {
 101:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
 102:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 103:Core/Src/stm32f4xx_it.c ****   }
  60              		.loc 1 103 3 discriminator 1 view .LVU6
  99:Core/Src/stm32f4xx_it.c ****   {
  61              		.loc 1 99 9 discriminator 1 view .LVU7
  62 0000 FEE7     		b	.L4
  63              		.cfi_endproc
  64              	.LFE221:
  66              		.section	.text.MemManage_Handler,"ax",%progbits
  67              		.align	1
  68              		.global	MemManage_Handler
  69              		.syntax unified
  70              		.thumb
ARM GAS  /tmp/ccsaIouy.s 			page 4


  71              		.thumb_func
  73              	MemManage_Handler:
  74              	.LFB222:
 104:Core/Src/stm32f4xx_it.c **** }
 105:Core/Src/stm32f4xx_it.c **** 
 106:Core/Src/stm32f4xx_it.c **** /**
 107:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
 108:Core/Src/stm32f4xx_it.c ****   */
 109:Core/Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 110:Core/Src/stm32f4xx_it.c **** {
  75              		.loc 1 110 1 view -0
  76              		.cfi_startproc
  77              		@ Volatile: function does not return.
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		@ link register save eliminated.
  81              	.L6:
 111:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 112:Core/Src/stm32f4xx_it.c **** 
 113:Core/Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 114:Core/Src/stm32f4xx_it.c ****   while (1)
  82              		.loc 1 114 3 discriminator 1 view .LVU9
 115:Core/Src/stm32f4xx_it.c ****   {
 116:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 117:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 118:Core/Src/stm32f4xx_it.c ****   }
  83              		.loc 1 118 3 discriminator 1 view .LVU10
 114:Core/Src/stm32f4xx_it.c ****   {
  84              		.loc 1 114 9 discriminator 1 view .LVU11
  85 0000 FEE7     		b	.L6
  86              		.cfi_endproc
  87              	.LFE222:
  89              		.section	.text.BusFault_Handler,"ax",%progbits
  90              		.align	1
  91              		.global	BusFault_Handler
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  96              	BusFault_Handler:
  97              	.LFB223:
 119:Core/Src/stm32f4xx_it.c **** }
 120:Core/Src/stm32f4xx_it.c **** 
 121:Core/Src/stm32f4xx_it.c **** /**
 122:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 123:Core/Src/stm32f4xx_it.c ****   */
 124:Core/Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 125:Core/Src/stm32f4xx_it.c **** {
  98              		.loc 1 125 1 view -0
  99              		.cfi_startproc
 100              		@ Volatile: function does not return.
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 104              	.L8:
 126:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 127:Core/Src/stm32f4xx_it.c **** 
 128:Core/Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
ARM GAS  /tmp/ccsaIouy.s 			page 5


 129:Core/Src/stm32f4xx_it.c ****   while (1)
 105              		.loc 1 129 3 discriminator 1 view .LVU13
 130:Core/Src/stm32f4xx_it.c ****   {
 131:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 132:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 133:Core/Src/stm32f4xx_it.c ****   }
 106              		.loc 1 133 3 discriminator 1 view .LVU14
 129:Core/Src/stm32f4xx_it.c ****   {
 107              		.loc 1 129 9 discriminator 1 view .LVU15
 108 0000 FEE7     		b	.L8
 109              		.cfi_endproc
 110              	.LFE223:
 112              		.section	.text.UsageFault_Handler,"ax",%progbits
 113              		.align	1
 114              		.global	UsageFault_Handler
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 119              	UsageFault_Handler:
 120              	.LFB224:
 134:Core/Src/stm32f4xx_it.c **** }
 135:Core/Src/stm32f4xx_it.c **** 
 136:Core/Src/stm32f4xx_it.c **** /**
 137:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 138:Core/Src/stm32f4xx_it.c ****   */
 139:Core/Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 140:Core/Src/stm32f4xx_it.c **** {
 121              		.loc 1 140 1 view -0
 122              		.cfi_startproc
 123              		@ Volatile: function does not return.
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.L10:
 141:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 142:Core/Src/stm32f4xx_it.c **** 
 143:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 144:Core/Src/stm32f4xx_it.c ****   while (1)
 128              		.loc 1 144 3 discriminator 1 view .LVU17
 145:Core/Src/stm32f4xx_it.c ****   {
 146:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 147:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 148:Core/Src/stm32f4xx_it.c ****   }
 129              		.loc 1 148 3 discriminator 1 view .LVU18
 144:Core/Src/stm32f4xx_it.c ****   {
 130              		.loc 1 144 9 discriminator 1 view .LVU19
 131 0000 FEE7     		b	.L10
 132              		.cfi_endproc
 133              	.LFE224:
 135              		.section	.text.DebugMon_Handler,"ax",%progbits
 136              		.align	1
 137              		.global	DebugMon_Handler
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 142              	DebugMon_Handler:
 143              	.LFB225:
ARM GAS  /tmp/ccsaIouy.s 			page 6


 149:Core/Src/stm32f4xx_it.c **** }
 150:Core/Src/stm32f4xx_it.c **** 
 151:Core/Src/stm32f4xx_it.c **** /**
 152:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 153:Core/Src/stm32f4xx_it.c ****   */
 154:Core/Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 155:Core/Src/stm32f4xx_it.c **** {
 144              		.loc 1 155 1 view -0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148              		@ link register save eliminated.
 156:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 157:Core/Src/stm32f4xx_it.c **** 
 158:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 159:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 160:Core/Src/stm32f4xx_it.c **** 
 161:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 162:Core/Src/stm32f4xx_it.c **** }
 149              		.loc 1 162 1 view .LVU21
 150 0000 7047     		bx	lr
 151              		.cfi_endproc
 152              	.LFE225:
 154              		.section	.text.PVD_IRQHandler,"ax",%progbits
 155              		.align	1
 156              		.global	PVD_IRQHandler
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 161              	PVD_IRQHandler:
 162              	.LFB226:
 163:Core/Src/stm32f4xx_it.c **** 
 164:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 165:Core/Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 166:Core/Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 167:Core/Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 168:Core/Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 169:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 170:Core/Src/stm32f4xx_it.c **** 
 171:Core/Src/stm32f4xx_it.c **** /**
 172:Core/Src/stm32f4xx_it.c ****   * @brief This function handles PVD interrupt through EXTI line 16.
 173:Core/Src/stm32f4xx_it.c ****   */
 174:Core/Src/stm32f4xx_it.c **** void PVD_IRQHandler(void)
 175:Core/Src/stm32f4xx_it.c **** {
 163              		.loc 1 175 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167 0000 08B5     		push	{r3, lr}
 168              	.LCFI0:
 169              		.cfi_def_cfa_offset 8
 170              		.cfi_offset 3, -8
 171              		.cfi_offset 14, -4
 176:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PVD_IRQn 0 */
 177:Core/Src/stm32f4xx_it.c **** 
 178:Core/Src/stm32f4xx_it.c ****   /* USER CODE END PVD_IRQn 0 */
 179:Core/Src/stm32f4xx_it.c ****   HAL_PWR_PVD_IRQHandler();
ARM GAS  /tmp/ccsaIouy.s 			page 7


 172              		.loc 1 179 3 view .LVU23
 173 0002 FFF7FEFF 		bl	HAL_PWR_PVD_IRQHandler
 174              	.LVL0:
 180:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PVD_IRQn 1 */
 181:Core/Src/stm32f4xx_it.c **** 
 182:Core/Src/stm32f4xx_it.c ****   /* USER CODE END PVD_IRQn 1 */
 183:Core/Src/stm32f4xx_it.c **** }
 175              		.loc 1 183 1 is_stmt 0 view .LVU24
 176 0006 08BD     		pop	{r3, pc}
 177              		.cfi_endproc
 178              	.LFE226:
 180              		.section	.text.FLASH_IRQHandler,"ax",%progbits
 181              		.align	1
 182              		.global	FLASH_IRQHandler
 183              		.syntax unified
 184              		.thumb
 185              		.thumb_func
 187              	FLASH_IRQHandler:
 188              	.LFB227:
 184:Core/Src/stm32f4xx_it.c **** 
 185:Core/Src/stm32f4xx_it.c **** /**
 186:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Flash global interrupt.
 187:Core/Src/stm32f4xx_it.c ****   */
 188:Core/Src/stm32f4xx_it.c **** void FLASH_IRQHandler(void)
 189:Core/Src/stm32f4xx_it.c **** {
 189              		.loc 1 189 1 is_stmt 1 view -0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193 0000 08B5     		push	{r3, lr}
 194              	.LCFI1:
 195              		.cfi_def_cfa_offset 8
 196              		.cfi_offset 3, -8
 197              		.cfi_offset 14, -4
 190:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN FLASH_IRQn 0 */
 191:Core/Src/stm32f4xx_it.c **** 
 192:Core/Src/stm32f4xx_it.c ****   /* USER CODE END FLASH_IRQn 0 */
 193:Core/Src/stm32f4xx_it.c ****   HAL_FLASH_IRQHandler();
 198              		.loc 1 193 3 view .LVU26
 199 0002 FFF7FEFF 		bl	HAL_FLASH_IRQHandler
 200              	.LVL1:
 194:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN FLASH_IRQn 1 */
 195:Core/Src/stm32f4xx_it.c **** 
 196:Core/Src/stm32f4xx_it.c ****   /* USER CODE END FLASH_IRQn 1 */
 197:Core/Src/stm32f4xx_it.c **** }
 201              		.loc 1 197 1 is_stmt 0 view .LVU27
 202 0006 08BD     		pop	{r3, pc}
 203              		.cfi_endproc
 204              	.LFE227:
 206              		.section	.text.RCC_IRQHandler,"ax",%progbits
 207              		.align	1
 208              		.global	RCC_IRQHandler
 209              		.syntax unified
 210              		.thumb
 211              		.thumb_func
 213              	RCC_IRQHandler:
 214              	.LFB228:
ARM GAS  /tmp/ccsaIouy.s 			page 8


 198:Core/Src/stm32f4xx_it.c **** 
 199:Core/Src/stm32f4xx_it.c **** /**
 200:Core/Src/stm32f4xx_it.c ****   * @brief This function handles RCC global interrupt.
 201:Core/Src/stm32f4xx_it.c ****   */
 202:Core/Src/stm32f4xx_it.c **** void RCC_IRQHandler(void)
 203:Core/Src/stm32f4xx_it.c **** {
 215              		.loc 1 203 1 is_stmt 1 view -0
 216              		.cfi_startproc
 217              		@ args = 0, pretend = 0, frame = 0
 218              		@ frame_needed = 0, uses_anonymous_args = 0
 219              		@ link register save eliminated.
 204:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN RCC_IRQn 0 */
 205:Core/Src/stm32f4xx_it.c **** 
 206:Core/Src/stm32f4xx_it.c ****   /* USER CODE END RCC_IRQn 0 */
 207:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN RCC_IRQn 1 */
 208:Core/Src/stm32f4xx_it.c **** 
 209:Core/Src/stm32f4xx_it.c ****   /* USER CODE END RCC_IRQn 1 */
 210:Core/Src/stm32f4xx_it.c **** }
 220              		.loc 1 210 1 view .LVU29
 221 0000 7047     		bx	lr
 222              		.cfi_endproc
 223              	.LFE228:
 225              		.section	.text.ADC_IRQHandler,"ax",%progbits
 226              		.align	1
 227              		.global	ADC_IRQHandler
 228              		.syntax unified
 229              		.thumb
 230              		.thumb_func
 232              	ADC_IRQHandler:
 233              	.LFB229:
 211:Core/Src/stm32f4xx_it.c **** 
 212:Core/Src/stm32f4xx_it.c **** /**
 213:Core/Src/stm32f4xx_it.c ****   * @brief This function handles ADC1 global interrupt.
 214:Core/Src/stm32f4xx_it.c ****   */
 215:Core/Src/stm32f4xx_it.c **** void ADC_IRQHandler(void)
 216:Core/Src/stm32f4xx_it.c **** {
 234              		.loc 1 216 1 view -0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238 0000 08B5     		push	{r3, lr}
 239              	.LCFI2:
 240              		.cfi_def_cfa_offset 8
 241              		.cfi_offset 3, -8
 242              		.cfi_offset 14, -4
 217:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN ADC_IRQn 0 */
 218:Core/Src/stm32f4xx_it.c **** 
 219:Core/Src/stm32f4xx_it.c ****   /* USER CODE END ADC_IRQn 0 */
 220:Core/Src/stm32f4xx_it.c ****   HAL_ADC_IRQHandler(&hadc1);
 243              		.loc 1 220 3 view .LVU31
 244 0002 0248     		ldr	r0, .L19
 245 0004 FFF7FEFF 		bl	HAL_ADC_IRQHandler
 246              	.LVL2:
 221:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN ADC_IRQn 1 */
 222:Core/Src/stm32f4xx_it.c **** 
 223:Core/Src/stm32f4xx_it.c ****   /* USER CODE END ADC_IRQn 1 */
 224:Core/Src/stm32f4xx_it.c **** }
ARM GAS  /tmp/ccsaIouy.s 			page 9


 247              		.loc 1 224 1 is_stmt 0 view .LVU32
 248 0008 08BD     		pop	{r3, pc}
 249              	.L20:
 250 000a 00BF     		.align	2
 251              	.L19:
 252 000c 00000000 		.word	hadc1
 253              		.cfi_endproc
 254              	.LFE229:
 256              		.section	.text.TIM1_BRK_TIM9_IRQHandler,"ax",%progbits
 257              		.align	1
 258              		.global	TIM1_BRK_TIM9_IRQHandler
 259              		.syntax unified
 260              		.thumb
 261              		.thumb_func
 263              	TIM1_BRK_TIM9_IRQHandler:
 264              	.LFB230:
 225:Core/Src/stm32f4xx_it.c **** 
 226:Core/Src/stm32f4xx_it.c **** /**
 227:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM1 break interrupt and TIM9 global interrupt.
 228:Core/Src/stm32f4xx_it.c ****   */
 229:Core/Src/stm32f4xx_it.c **** void TIM1_BRK_TIM9_IRQHandler(void)
 230:Core/Src/stm32f4xx_it.c **** {
 265              		.loc 1 230 1 is_stmt 1 view -0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 0
 268              		@ frame_needed = 0, uses_anonymous_args = 0
 269 0000 08B5     		push	{r3, lr}
 270              	.LCFI3:
 271              		.cfi_def_cfa_offset 8
 272              		.cfi_offset 3, -8
 273              		.cfi_offset 14, -4
 231:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_BRK_TIM9_IRQn 0 */
 232:Core/Src/stm32f4xx_it.c **** 
 233:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_BRK_TIM9_IRQn 0 */
 234:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 274              		.loc 1 234 3 view .LVU34
 275 0002 0348     		ldr	r0, .L23
 276 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 277              	.LVL3:
 235:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim9);
 278              		.loc 1 235 3 view .LVU35
 279 0008 0248     		ldr	r0, .L23+4
 280 000a FFF7FEFF 		bl	HAL_TIM_IRQHandler
 281              	.LVL4:
 236:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_BRK_TIM9_IRQn 1 */
 237:Core/Src/stm32f4xx_it.c **** 
 238:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_BRK_TIM9_IRQn 1 */
 239:Core/Src/stm32f4xx_it.c **** }
 282              		.loc 1 239 1 is_stmt 0 view .LVU36
 283 000e 08BD     		pop	{r3, pc}
 284              	.L24:
 285              		.align	2
 286              	.L23:
 287 0010 00000000 		.word	htim1
 288 0014 00000000 		.word	htim9
 289              		.cfi_endproc
 290              	.LFE230:
ARM GAS  /tmp/ccsaIouy.s 			page 10


 292              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 293              		.align	1
 294              		.global	TIM2_IRQHandler
 295              		.syntax unified
 296              		.thumb
 297              		.thumb_func
 299              	TIM2_IRQHandler:
 300              	.LFB231:
 240:Core/Src/stm32f4xx_it.c **** 
 241:Core/Src/stm32f4xx_it.c **** /**
 242:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM2 global interrupt.
 243:Core/Src/stm32f4xx_it.c ****   */
 244:Core/Src/stm32f4xx_it.c **** void TIM2_IRQHandler(void)
 245:Core/Src/stm32f4xx_it.c **** {
 301              		.loc 1 245 1 is_stmt 1 view -0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 0
 304              		@ frame_needed = 0, uses_anonymous_args = 0
 305 0000 08B5     		push	{r3, lr}
 306              	.LCFI4:
 307              		.cfi_def_cfa_offset 8
 308              		.cfi_offset 3, -8
 309              		.cfi_offset 14, -4
 246:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 247:Core/Src/stm32f4xx_it.c **** 
 248:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM2_IRQn 0 */
 249:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim2);
 310              		.loc 1 249 3 view .LVU38
 311 0002 0248     		ldr	r0, .L27
 312 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 313              	.LVL5:
 250:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 251:Core/Src/stm32f4xx_it.c **** 
 252:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM2_IRQn 1 */
 253:Core/Src/stm32f4xx_it.c **** }
 314              		.loc 1 253 1 is_stmt 0 view .LVU39
 315 0008 08BD     		pop	{r3, pc}
 316              	.L28:
 317 000a 00BF     		.align	2
 318              	.L27:
 319 000c 00000000 		.word	htim2
 320              		.cfi_endproc
 321              	.LFE231:
 323              		.section	.text.TIM3_IRQHandler,"ax",%progbits
 324              		.align	1
 325              		.global	TIM3_IRQHandler
 326              		.syntax unified
 327              		.thumb
 328              		.thumb_func
 330              	TIM3_IRQHandler:
 331              	.LFB232:
 254:Core/Src/stm32f4xx_it.c **** 
 255:Core/Src/stm32f4xx_it.c **** /**
 256:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM3 global interrupt.
 257:Core/Src/stm32f4xx_it.c ****   */
 258:Core/Src/stm32f4xx_it.c **** void TIM3_IRQHandler(void)
 259:Core/Src/stm32f4xx_it.c **** {
ARM GAS  /tmp/ccsaIouy.s 			page 11


 332              		.loc 1 259 1 is_stmt 1 view -0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 0
 335              		@ frame_needed = 0, uses_anonymous_args = 0
 336 0000 08B5     		push	{r3, lr}
 337              	.LCFI5:
 338              		.cfi_def_cfa_offset 8
 339              		.cfi_offset 3, -8
 340              		.cfi_offset 14, -4
 260:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 0 */
 261:Core/Src/stm32f4xx_it.c **** 
 262:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM3_IRQn 0 */
 263:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim3);
 341              		.loc 1 263 3 view .LVU41
 342 0002 0248     		ldr	r0, .L31
 343 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 344              	.LVL6:
 264:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 1 */
 265:Core/Src/stm32f4xx_it.c **** 
 266:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM3_IRQn 1 */
 267:Core/Src/stm32f4xx_it.c **** }
 345              		.loc 1 267 1 is_stmt 0 view .LVU42
 346 0008 08BD     		pop	{r3, pc}
 347              	.L32:
 348 000a 00BF     		.align	2
 349              	.L31:
 350 000c 00000000 		.word	htim3
 351              		.cfi_endproc
 352              	.LFE232:
 354              		.section	.text.TIM4_IRQHandler,"ax",%progbits
 355              		.align	1
 356              		.global	TIM4_IRQHandler
 357              		.syntax unified
 358              		.thumb
 359              		.thumb_func
 361              	TIM4_IRQHandler:
 362              	.LFB233:
 268:Core/Src/stm32f4xx_it.c **** 
 269:Core/Src/stm32f4xx_it.c **** /**
 270:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM4 global interrupt.
 271:Core/Src/stm32f4xx_it.c ****   */
 272:Core/Src/stm32f4xx_it.c **** void TIM4_IRQHandler(void)
 273:Core/Src/stm32f4xx_it.c **** {
 363              		.loc 1 273 1 is_stmt 1 view -0
 364              		.cfi_startproc
 365              		@ args = 0, pretend = 0, frame = 0
 366              		@ frame_needed = 0, uses_anonymous_args = 0
 367 0000 08B5     		push	{r3, lr}
 368              	.LCFI6:
 369              		.cfi_def_cfa_offset 8
 370              		.cfi_offset 3, -8
 371              		.cfi_offset 14, -4
 274:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM4_IRQn 0 */
 275:Core/Src/stm32f4xx_it.c **** 
 276:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM4_IRQn 0 */
 277:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim4);
 372              		.loc 1 277 3 view .LVU44
ARM GAS  /tmp/ccsaIouy.s 			page 12


 373 0002 0248     		ldr	r0, .L35
 374 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 375              	.LVL7:
 278:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM4_IRQn 1 */
 279:Core/Src/stm32f4xx_it.c **** 
 280:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM4_IRQn 1 */
 281:Core/Src/stm32f4xx_it.c **** }
 376              		.loc 1 281 1 is_stmt 0 view .LVU45
 377 0008 08BD     		pop	{r3, pc}
 378              	.L36:
 379 000a 00BF     		.align	2
 380              	.L35:
 381 000c 00000000 		.word	htim4
 382              		.cfi_endproc
 383              	.LFE233:
 385              		.section	.text.I2C1_EV_IRQHandler,"ax",%progbits
 386              		.align	1
 387              		.global	I2C1_EV_IRQHandler
 388              		.syntax unified
 389              		.thumb
 390              		.thumb_func
 392              	I2C1_EV_IRQHandler:
 393              	.LFB234:
 282:Core/Src/stm32f4xx_it.c **** 
 283:Core/Src/stm32f4xx_it.c **** /**
 284:Core/Src/stm32f4xx_it.c ****   * @brief This function handles I2C1 event interrupt.
 285:Core/Src/stm32f4xx_it.c ****   */
 286:Core/Src/stm32f4xx_it.c **** void I2C1_EV_IRQHandler(void)
 287:Core/Src/stm32f4xx_it.c **** {
 394              		.loc 1 287 1 is_stmt 1 view -0
 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 0
 397              		@ frame_needed = 0, uses_anonymous_args = 0
 398 0000 08B5     		push	{r3, lr}
 399              	.LCFI7:
 400              		.cfi_def_cfa_offset 8
 401              		.cfi_offset 3, -8
 402              		.cfi_offset 14, -4
 288:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN I2C1_EV_IRQn 0 */
 289:Core/Src/stm32f4xx_it.c **** 
 290:Core/Src/stm32f4xx_it.c ****   /* USER CODE END I2C1_EV_IRQn 0 */
 291:Core/Src/stm32f4xx_it.c ****   HAL_I2C_EV_IRQHandler(&hi2c1);
 403              		.loc 1 291 3 view .LVU47
 404 0002 0248     		ldr	r0, .L39
 405 0004 FFF7FEFF 		bl	HAL_I2C_EV_IRQHandler
 406              	.LVL8:
 292:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN I2C1_EV_IRQn 1 */
 293:Core/Src/stm32f4xx_it.c **** 
 294:Core/Src/stm32f4xx_it.c ****   /* USER CODE END I2C1_EV_IRQn 1 */
 295:Core/Src/stm32f4xx_it.c **** }
 407              		.loc 1 295 1 is_stmt 0 view .LVU48
 408 0008 08BD     		pop	{r3, pc}
 409              	.L40:
 410 000a 00BF     		.align	2
 411              	.L39:
 412 000c 00000000 		.word	hi2c1
 413              		.cfi_endproc
ARM GAS  /tmp/ccsaIouy.s 			page 13


 414              	.LFE234:
 416              		.section	.text.I2C1_ER_IRQHandler,"ax",%progbits
 417              		.align	1
 418              		.global	I2C1_ER_IRQHandler
 419              		.syntax unified
 420              		.thumb
 421              		.thumb_func
 423              	I2C1_ER_IRQHandler:
 424              	.LFB235:
 296:Core/Src/stm32f4xx_it.c **** 
 297:Core/Src/stm32f4xx_it.c **** /**
 298:Core/Src/stm32f4xx_it.c ****   * @brief This function handles I2C1 error interrupt.
 299:Core/Src/stm32f4xx_it.c ****   */
 300:Core/Src/stm32f4xx_it.c **** void I2C1_ER_IRQHandler(void)
 301:Core/Src/stm32f4xx_it.c **** {
 425              		.loc 1 301 1 is_stmt 1 view -0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 0
 428              		@ frame_needed = 0, uses_anonymous_args = 0
 429 0000 08B5     		push	{r3, lr}
 430              	.LCFI8:
 431              		.cfi_def_cfa_offset 8
 432              		.cfi_offset 3, -8
 433              		.cfi_offset 14, -4
 302:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN I2C1_ER_IRQn 0 */
 303:Core/Src/stm32f4xx_it.c **** 
 304:Core/Src/stm32f4xx_it.c ****   /* USER CODE END I2C1_ER_IRQn 0 */
 305:Core/Src/stm32f4xx_it.c ****   HAL_I2C_ER_IRQHandler(&hi2c1);
 434              		.loc 1 305 3 view .LVU50
 435 0002 0248     		ldr	r0, .L43
 436 0004 FFF7FEFF 		bl	HAL_I2C_ER_IRQHandler
 437              	.LVL9:
 306:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN I2C1_ER_IRQn 1 */
 307:Core/Src/stm32f4xx_it.c **** 
 308:Core/Src/stm32f4xx_it.c ****   /* USER CODE END I2C1_ER_IRQn 1 */
 309:Core/Src/stm32f4xx_it.c **** }
 438              		.loc 1 309 1 is_stmt 0 view .LVU51
 439 0008 08BD     		pop	{r3, pc}
 440              	.L44:
 441 000a 00BF     		.align	2
 442              	.L43:
 443 000c 00000000 		.word	hi2c1
 444              		.cfi_endproc
 445              	.LFE235:
 447              		.section	.text.SPI1_IRQHandler,"ax",%progbits
 448              		.align	1
 449              		.global	SPI1_IRQHandler
 450              		.syntax unified
 451              		.thumb
 452              		.thumb_func
 454              	SPI1_IRQHandler:
 455              	.LFB236:
 310:Core/Src/stm32f4xx_it.c **** 
 311:Core/Src/stm32f4xx_it.c **** /**
 312:Core/Src/stm32f4xx_it.c ****   * @brief This function handles SPI1 global interrupt.
 313:Core/Src/stm32f4xx_it.c ****   */
 314:Core/Src/stm32f4xx_it.c **** void SPI1_IRQHandler(void)
ARM GAS  /tmp/ccsaIouy.s 			page 14


 315:Core/Src/stm32f4xx_it.c **** {
 456              		.loc 1 315 1 is_stmt 1 view -0
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 0
 459              		@ frame_needed = 0, uses_anonymous_args = 0
 460 0000 08B5     		push	{r3, lr}
 461              	.LCFI9:
 462              		.cfi_def_cfa_offset 8
 463              		.cfi_offset 3, -8
 464              		.cfi_offset 14, -4
 316:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SPI1_IRQn 0 */
 317:Core/Src/stm32f4xx_it.c **** 
 318:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SPI1_IRQn 0 */
 319:Core/Src/stm32f4xx_it.c ****   HAL_SPI_IRQHandler(&hspi1);
 465              		.loc 1 319 3 view .LVU53
 466 0002 0248     		ldr	r0, .L47
 467 0004 FFF7FEFF 		bl	HAL_SPI_IRQHandler
 468              	.LVL10:
 320:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SPI1_IRQn 1 */
 321:Core/Src/stm32f4xx_it.c **** 
 322:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SPI1_IRQn 1 */
 323:Core/Src/stm32f4xx_it.c **** }
 469              		.loc 1 323 1 is_stmt 0 view .LVU54
 470 0008 08BD     		pop	{r3, pc}
 471              	.L48:
 472 000a 00BF     		.align	2
 473              	.L47:
 474 000c 00000000 		.word	hspi1
 475              		.cfi_endproc
 476              	.LFE236:
 478              		.section	.text.USART2_IRQHandler,"ax",%progbits
 479              		.align	1
 480              		.global	USART2_IRQHandler
 481              		.syntax unified
 482              		.thumb
 483              		.thumb_func
 485              	USART2_IRQHandler:
 486              	.LFB237:
 324:Core/Src/stm32f4xx_it.c **** 
 325:Core/Src/stm32f4xx_it.c **** /**
 326:Core/Src/stm32f4xx_it.c ****   * @brief This function handles USART2 global interrupt.
 327:Core/Src/stm32f4xx_it.c ****   */
 328:Core/Src/stm32f4xx_it.c **** void USART2_IRQHandler(void)
 329:Core/Src/stm32f4xx_it.c **** {
 487              		.loc 1 329 1 is_stmt 1 view -0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 0
 490              		@ frame_needed = 0, uses_anonymous_args = 0
 491 0000 08B5     		push	{r3, lr}
 492              	.LCFI10:
 493              		.cfi_def_cfa_offset 8
 494              		.cfi_offset 3, -8
 495              		.cfi_offset 14, -4
 330:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 0 */
 331:Core/Src/stm32f4xx_it.c **** 
 332:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART2_IRQn 0 */
 333:Core/Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart2);
ARM GAS  /tmp/ccsaIouy.s 			page 15


 496              		.loc 1 333 3 view .LVU56
 497 0002 0248     		ldr	r0, .L51
 498 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 499              	.LVL11:
 334:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 1 */
 335:Core/Src/stm32f4xx_it.c **** 
 336:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART2_IRQn 1 */
 337:Core/Src/stm32f4xx_it.c **** }
 500              		.loc 1 337 1 is_stmt 0 view .LVU57
 501 0008 08BD     		pop	{r3, pc}
 502              	.L52:
 503 000a 00BF     		.align	2
 504              	.L51:
 505 000c 00000000 		.word	huart2
 506              		.cfi_endproc
 507              	.LFE237:
 509              		.section	.text.TIM5_IRQHandler,"ax",%progbits
 510              		.align	1
 511              		.global	TIM5_IRQHandler
 512              		.syntax unified
 513              		.thumb
 514              		.thumb_func
 516              	TIM5_IRQHandler:
 517              	.LFB238:
 338:Core/Src/stm32f4xx_it.c **** 
 339:Core/Src/stm32f4xx_it.c **** /**
 340:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM5 global interrupt.
 341:Core/Src/stm32f4xx_it.c ****   */
 342:Core/Src/stm32f4xx_it.c **** void TIM5_IRQHandler(void)
 343:Core/Src/stm32f4xx_it.c **** {
 518              		.loc 1 343 1 is_stmt 1 view -0
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 0
 521              		@ frame_needed = 0, uses_anonymous_args = 0
 522 0000 08B5     		push	{r3, lr}
 523              	.LCFI11:
 524              		.cfi_def_cfa_offset 8
 525              		.cfi_offset 3, -8
 526              		.cfi_offset 14, -4
 344:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM5_IRQn 0 */
 345:Core/Src/stm32f4xx_it.c **** 
 346:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM5_IRQn 0 */
 347:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim5);
 527              		.loc 1 347 3 view .LVU59
 528 0002 0248     		ldr	r0, .L55
 529 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 530              	.LVL12:
 348:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM5_IRQn 1 */
 349:Core/Src/stm32f4xx_it.c **** 
 350:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM5_IRQn 1 */
 351:Core/Src/stm32f4xx_it.c **** }
 531              		.loc 1 351 1 is_stmt 0 view .LVU60
 532 0008 08BD     		pop	{r3, pc}
 533              	.L56:
 534 000a 00BF     		.align	2
 535              	.L55:
 536 000c 00000000 		.word	htim5
ARM GAS  /tmp/ccsaIouy.s 			page 16


 537              		.cfi_endproc
 538              	.LFE238:
 540              		.text
 541              	.Letext0:
 542              		.file 2 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 543              		.file 3 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 544              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 545              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 546              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 547              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 548              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 549              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 550              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 551              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 552              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 553              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_flash.h"
 554              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pwr.h"
ARM GAS  /tmp/ccsaIouy.s 			page 17


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_it.c
     /tmp/ccsaIouy.s:21     .text.NMI_Handler:00000000 $t
     /tmp/ccsaIouy.s:27     .text.NMI_Handler:00000000 NMI_Handler
     /tmp/ccsaIouy.s:44     .text.HardFault_Handler:00000000 $t
     /tmp/ccsaIouy.s:50     .text.HardFault_Handler:00000000 HardFault_Handler
     /tmp/ccsaIouy.s:67     .text.MemManage_Handler:00000000 $t
     /tmp/ccsaIouy.s:73     .text.MemManage_Handler:00000000 MemManage_Handler
     /tmp/ccsaIouy.s:90     .text.BusFault_Handler:00000000 $t
     /tmp/ccsaIouy.s:96     .text.BusFault_Handler:00000000 BusFault_Handler
     /tmp/ccsaIouy.s:113    .text.UsageFault_Handler:00000000 $t
     /tmp/ccsaIouy.s:119    .text.UsageFault_Handler:00000000 UsageFault_Handler
     /tmp/ccsaIouy.s:136    .text.DebugMon_Handler:00000000 $t
     /tmp/ccsaIouy.s:142    .text.DebugMon_Handler:00000000 DebugMon_Handler
     /tmp/ccsaIouy.s:155    .text.PVD_IRQHandler:00000000 $t
     /tmp/ccsaIouy.s:161    .text.PVD_IRQHandler:00000000 PVD_IRQHandler
     /tmp/ccsaIouy.s:181    .text.FLASH_IRQHandler:00000000 $t
     /tmp/ccsaIouy.s:187    .text.FLASH_IRQHandler:00000000 FLASH_IRQHandler
     /tmp/ccsaIouy.s:207    .text.RCC_IRQHandler:00000000 $t
     /tmp/ccsaIouy.s:213    .text.RCC_IRQHandler:00000000 RCC_IRQHandler
     /tmp/ccsaIouy.s:226    .text.ADC_IRQHandler:00000000 $t
     /tmp/ccsaIouy.s:232    .text.ADC_IRQHandler:00000000 ADC_IRQHandler
     /tmp/ccsaIouy.s:252    .text.ADC_IRQHandler:0000000c $d
     /tmp/ccsaIouy.s:257    .text.TIM1_BRK_TIM9_IRQHandler:00000000 $t
     /tmp/ccsaIouy.s:263    .text.TIM1_BRK_TIM9_IRQHandler:00000000 TIM1_BRK_TIM9_IRQHandler
     /tmp/ccsaIouy.s:287    .text.TIM1_BRK_TIM9_IRQHandler:00000010 $d
     /tmp/ccsaIouy.s:293    .text.TIM2_IRQHandler:00000000 $t
     /tmp/ccsaIouy.s:299    .text.TIM2_IRQHandler:00000000 TIM2_IRQHandler
     /tmp/ccsaIouy.s:319    .text.TIM2_IRQHandler:0000000c $d
     /tmp/ccsaIouy.s:324    .text.TIM3_IRQHandler:00000000 $t
     /tmp/ccsaIouy.s:330    .text.TIM3_IRQHandler:00000000 TIM3_IRQHandler
     /tmp/ccsaIouy.s:350    .text.TIM3_IRQHandler:0000000c $d
     /tmp/ccsaIouy.s:355    .text.TIM4_IRQHandler:00000000 $t
     /tmp/ccsaIouy.s:361    .text.TIM4_IRQHandler:00000000 TIM4_IRQHandler
     /tmp/ccsaIouy.s:381    .text.TIM4_IRQHandler:0000000c $d
     /tmp/ccsaIouy.s:386    .text.I2C1_EV_IRQHandler:00000000 $t
     /tmp/ccsaIouy.s:392    .text.I2C1_EV_IRQHandler:00000000 I2C1_EV_IRQHandler
     /tmp/ccsaIouy.s:412    .text.I2C1_EV_IRQHandler:0000000c $d
     /tmp/ccsaIouy.s:417    .text.I2C1_ER_IRQHandler:00000000 $t
     /tmp/ccsaIouy.s:423    .text.I2C1_ER_IRQHandler:00000000 I2C1_ER_IRQHandler
     /tmp/ccsaIouy.s:443    .text.I2C1_ER_IRQHandler:0000000c $d
     /tmp/ccsaIouy.s:448    .text.SPI1_IRQHandler:00000000 $t
     /tmp/ccsaIouy.s:454    .text.SPI1_IRQHandler:00000000 SPI1_IRQHandler
     /tmp/ccsaIouy.s:474    .text.SPI1_IRQHandler:0000000c $d
     /tmp/ccsaIouy.s:479    .text.USART2_IRQHandler:00000000 $t
     /tmp/ccsaIouy.s:485    .text.USART2_IRQHandler:00000000 USART2_IRQHandler
     /tmp/ccsaIouy.s:505    .text.USART2_IRQHandler:0000000c $d
     /tmp/ccsaIouy.s:510    .text.TIM5_IRQHandler:00000000 $t
     /tmp/ccsaIouy.s:516    .text.TIM5_IRQHandler:00000000 TIM5_IRQHandler
     /tmp/ccsaIouy.s:536    .text.TIM5_IRQHandler:0000000c $d

UNDEFINED SYMBOLS
HAL_PWR_PVD_IRQHandler
HAL_FLASH_IRQHandler
HAL_ADC_IRQHandler
hadc1
HAL_TIM_IRQHandler
ARM GAS  /tmp/ccsaIouy.s 			page 18


htim1
htim9
htim2
htim3
htim4
HAL_I2C_EV_IRQHandler
hi2c1
HAL_I2C_ER_IRQHandler
HAL_SPI_IRQHandler
hspi1
HAL_UART_IRQHandler
huart2
htim5

ARM GAS  /tmp/ccsirKft.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"usart.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/Communication/usart.c"
  20              		.section	.text.__io_putchar,"ax",%progbits
  21              		.align	1
  22              		.global	__io_putchar
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	__io_putchar:
  28              	.LVL0:
  29              	.LFB224:
   1:Core/Src/Communication/usart.c **** /* USER CODE BEGIN Header */
   2:Core/Src/Communication/usart.c **** /**
   3:Core/Src/Communication/usart.c ****   ******************************************************************************
   4:Core/Src/Communication/usart.c ****   * @file    usart.c
   5:Core/Src/Communication/usart.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/Communication/usart.c ****   *          of the USART instances.
   7:Core/Src/Communication/usart.c ****   ******************************************************************************
   8:Core/Src/Communication/usart.c ****   * @attention
   9:Core/Src/Communication/usart.c ****   *
  10:Core/Src/Communication/usart.c ****   * Copyright (c) 2024 STMicroelectronics.
  11:Core/Src/Communication/usart.c ****   * All rights reserved.
  12:Core/Src/Communication/usart.c ****   *
  13:Core/Src/Communication/usart.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/Communication/usart.c ****   * in the root directory of this software component.
  15:Core/Src/Communication/usart.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/Communication/usart.c ****   *
  17:Core/Src/Communication/usart.c ****   ******************************************************************************
  18:Core/Src/Communication/usart.c ****   */
  19:Core/Src/Communication/usart.c **** #include "Communication/usart.h"
  20:Core/Src/Communication/usart.c **** 
  21:Core/Src/Communication/usart.c **** UART_HandleTypeDef huart2;
  22:Core/Src/Communication/usart.c **** 
  23:Core/Src/Communication/usart.c **** /* USART2 init function */
  24:Core/Src/Communication/usart.c **** void MX_USART2_UART_Init(void) {
  25:Core/Src/Communication/usart.c ****   huart2.Instance = USART2;
  26:Core/Src/Communication/usart.c ****   huart2.Init.BaudRate = 115200;
  27:Core/Src/Communication/usart.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
  28:Core/Src/Communication/usart.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
  29:Core/Src/Communication/usart.c ****   huart2.Init.Parity = UART_PARITY_NONE;
ARM GAS  /tmp/ccsirKft.s 			page 2


  30:Core/Src/Communication/usart.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
  31:Core/Src/Communication/usart.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  32:Core/Src/Communication/usart.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
  33:Core/Src/Communication/usart.c ****   if (HAL_UART_Init(&huart2) != HAL_OK) Error_Handler();
  34:Core/Src/Communication/usart.c ****   HAL_UART_MspInit(&huart2);
  35:Core/Src/Communication/usart.c **** }
  36:Core/Src/Communication/usart.c **** 
  37:Core/Src/Communication/usart.c **** PUTCHAR_PROTOTYPE {
  30              		.loc 1 37 19 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 37 19 is_stmt 0 view .LVU1
  35 0000 00B5     		push	{lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 4
  38              		.cfi_offset 14, -4
  39 0002 83B0     		sub	sp, sp, #12
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 16
  42 0004 0190     		str	r0, [sp, #4]
  38:Core/Src/Communication/usart.c ****   /* Place your implementation of fputc here */
  39:Core/Src/Communication/usart.c ****   /* e.g. write a character to the USART1 and Loop until the end of transmission */
  40:Core/Src/Communication/usart.c ****   HAL_UART_Transmit(&huart2, (uint8_t *)&ch, 1, 0xFFFF);
  43              		.loc 1 40 3 is_stmt 1 view .LVU2
  44 0006 4FF6FF73 		movw	r3, #65535
  45 000a 0122     		movs	r2, #1
  46 000c 01A9     		add	r1, sp, #4
  47 000e 0348     		ldr	r0, .L3
  48              	.LVL1:
  49              		.loc 1 40 3 is_stmt 0 view .LVU3
  50 0010 FFF7FEFF 		bl	HAL_UART_Transmit
  51              	.LVL2:
  41:Core/Src/Communication/usart.c **** 
  42:Core/Src/Communication/usart.c ****   return ch;
  52              		.loc 1 42 3 is_stmt 1 view .LVU4
  43:Core/Src/Communication/usart.c **** }
  53              		.loc 1 43 1 is_stmt 0 view .LVU5
  54 0014 0198     		ldr	r0, [sp, #4]
  55 0016 03B0     		add	sp, sp, #12
  56              	.LCFI2:
  57              		.cfi_def_cfa_offset 4
  58              		@ sp needed
  59 0018 5DF804FB 		ldr	pc, [sp], #4
  60              	.L4:
  61              		.align	2
  62              	.L3:
  63 001c 00000000 		.word	huart2
  64              		.cfi_endproc
  65              	.LFE224:
  67              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  68              		.align	1
  69              		.global	HAL_UART_MspInit
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  74              	HAL_UART_MspInit:
ARM GAS  /tmp/ccsirKft.s 			page 3


  75              	.LVL3:
  76              	.LFB225:
  44:Core/Src/Communication/usart.c **** 
  45:Core/Src/Communication/usart.c **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle) {
  77              		.loc 1 45 55 is_stmt 1 view -0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 32
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		.loc 1 45 55 is_stmt 0 view .LVU7
  82 0000 10B5     		push	{r4, lr}
  83              	.LCFI3:
  84              		.cfi_def_cfa_offset 8
  85              		.cfi_offset 4, -8
  86              		.cfi_offset 14, -4
  87 0002 88B0     		sub	sp, sp, #32
  88              	.LCFI4:
  89              		.cfi_def_cfa_offset 40
  46:Core/Src/Communication/usart.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  90              		.loc 1 46 3 is_stmt 1 view .LVU8
  91              		.loc 1 46 20 is_stmt 0 view .LVU9
  92 0004 0023     		movs	r3, #0
  93 0006 0393     		str	r3, [sp, #12]
  94 0008 0493     		str	r3, [sp, #16]
  95 000a 0593     		str	r3, [sp, #20]
  96 000c 0693     		str	r3, [sp, #24]
  97 000e 0793     		str	r3, [sp, #28]
  47:Core/Src/Communication/usart.c ****   if(uartHandle->Instance==USART2) {
  98              		.loc 1 47 3 is_stmt 1 view .LVU10
  99              		.loc 1 47 16 is_stmt 0 view .LVU11
 100 0010 0268     		ldr	r2, [r0]
 101              		.loc 1 47 5 view .LVU12
 102 0012 184B     		ldr	r3, .L9
 103 0014 9A42     		cmp	r2, r3
 104 0016 01D0     		beq	.L8
 105              	.LVL4:
 106              	.L5:
  48:Core/Src/Communication/usart.c ****     /* USART2 clock enable */
  49:Core/Src/Communication/usart.c ****     __HAL_RCC_USART2_CLK_ENABLE();
  50:Core/Src/Communication/usart.c **** 
  51:Core/Src/Communication/usart.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
  52:Core/Src/Communication/usart.c ****     /**USART2 GPIO Configuration
  53:Core/Src/Communication/usart.c ****     PA2     ------> USART2_TX
  54:Core/Src/Communication/usart.c ****     PA3     ------> USART2_RX
  55:Core/Src/Communication/usart.c ****     */
  56:Core/Src/Communication/usart.c ****     GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
  57:Core/Src/Communication/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  58:Core/Src/Communication/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  59:Core/Src/Communication/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  60:Core/Src/Communication/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
  61:Core/Src/Communication/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  62:Core/Src/Communication/usart.c **** 
  63:Core/Src/Communication/usart.c ****     /* USART2 interrupt Init */
  64:Core/Src/Communication/usart.c ****     HAL_NVIC_SetPriority(USART2_IRQn, 5, 0);
  65:Core/Src/Communication/usart.c ****     HAL_NVIC_EnableIRQ(USART2_IRQn);
  66:Core/Src/Communication/usart.c ****   }
  67:Core/Src/Communication/usart.c **** }
 107              		.loc 1 67 1 view .LVU13
ARM GAS  /tmp/ccsirKft.s 			page 4


 108 0018 08B0     		add	sp, sp, #32
 109              	.LCFI5:
 110              		.cfi_remember_state
 111              		.cfi_def_cfa_offset 8
 112              		@ sp needed
 113 001a 10BD     		pop	{r4, pc}
 114              	.LVL5:
 115              	.L8:
 116              	.LCFI6:
 117              		.cfi_restore_state
  49:Core/Src/Communication/usart.c **** 
 118              		.loc 1 49 5 is_stmt 1 view .LVU14
 119              	.LBB2:
  49:Core/Src/Communication/usart.c **** 
 120              		.loc 1 49 5 view .LVU15
 121 001c 0024     		movs	r4, #0
 122 001e 0194     		str	r4, [sp, #4]
  49:Core/Src/Communication/usart.c **** 
 123              		.loc 1 49 5 view .LVU16
 124 0020 03F5FA33 		add	r3, r3, #128000
 125 0024 1A6C     		ldr	r2, [r3, #64]
 126 0026 42F40032 		orr	r2, r2, #131072
 127 002a 1A64     		str	r2, [r3, #64]
  49:Core/Src/Communication/usart.c **** 
 128              		.loc 1 49 5 view .LVU17
 129 002c 1A6C     		ldr	r2, [r3, #64]
 130 002e 02F40032 		and	r2, r2, #131072
 131 0032 0192     		str	r2, [sp, #4]
  49:Core/Src/Communication/usart.c **** 
 132              		.loc 1 49 5 view .LVU18
 133 0034 019A     		ldr	r2, [sp, #4]
 134              	.LBE2:
  49:Core/Src/Communication/usart.c **** 
 135              		.loc 1 49 5 view .LVU19
  51:Core/Src/Communication/usart.c ****     /**USART2 GPIO Configuration
 136              		.loc 1 51 5 view .LVU20
 137              	.LBB3:
  51:Core/Src/Communication/usart.c ****     /**USART2 GPIO Configuration
 138              		.loc 1 51 5 view .LVU21
 139 0036 0294     		str	r4, [sp, #8]
  51:Core/Src/Communication/usart.c ****     /**USART2 GPIO Configuration
 140              		.loc 1 51 5 view .LVU22
 141 0038 1A6B     		ldr	r2, [r3, #48]
 142 003a 42F00102 		orr	r2, r2, #1
 143 003e 1A63     		str	r2, [r3, #48]
  51:Core/Src/Communication/usart.c ****     /**USART2 GPIO Configuration
 144              		.loc 1 51 5 view .LVU23
 145 0040 1B6B     		ldr	r3, [r3, #48]
 146 0042 03F00103 		and	r3, r3, #1
 147 0046 0293     		str	r3, [sp, #8]
  51:Core/Src/Communication/usart.c ****     /**USART2 GPIO Configuration
 148              		.loc 1 51 5 view .LVU24
 149 0048 029B     		ldr	r3, [sp, #8]
 150              	.LBE3:
  51:Core/Src/Communication/usart.c ****     /**USART2 GPIO Configuration
 151              		.loc 1 51 5 view .LVU25
  56:Core/Src/Communication/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
ARM GAS  /tmp/ccsirKft.s 			page 5


 152              		.loc 1 56 5 view .LVU26
  56:Core/Src/Communication/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 153              		.loc 1 56 25 is_stmt 0 view .LVU27
 154 004a 0C23     		movs	r3, #12
 155 004c 0393     		str	r3, [sp, #12]
  57:Core/Src/Communication/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 156              		.loc 1 57 5 is_stmt 1 view .LVU28
  57:Core/Src/Communication/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 157              		.loc 1 57 26 is_stmt 0 view .LVU29
 158 004e 0223     		movs	r3, #2
 159 0050 0493     		str	r3, [sp, #16]
  58:Core/Src/Communication/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 160              		.loc 1 58 5 is_stmt 1 view .LVU30
  59:Core/Src/Communication/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 161              		.loc 1 59 5 view .LVU31
  59:Core/Src/Communication/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 162              		.loc 1 59 27 is_stmt 0 view .LVU32
 163 0052 0323     		movs	r3, #3
 164 0054 0693     		str	r3, [sp, #24]
  60:Core/Src/Communication/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 165              		.loc 1 60 5 is_stmt 1 view .LVU33
  60:Core/Src/Communication/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 166              		.loc 1 60 31 is_stmt 0 view .LVU34
 167 0056 0723     		movs	r3, #7
 168 0058 0793     		str	r3, [sp, #28]
  61:Core/Src/Communication/usart.c **** 
 169              		.loc 1 61 5 is_stmt 1 view .LVU35
 170 005a 03A9     		add	r1, sp, #12
 171 005c 0648     		ldr	r0, .L9+4
 172              	.LVL6:
  61:Core/Src/Communication/usart.c **** 
 173              		.loc 1 61 5 is_stmt 0 view .LVU36
 174 005e FFF7FEFF 		bl	HAL_GPIO_Init
 175              	.LVL7:
  64:Core/Src/Communication/usart.c ****     HAL_NVIC_EnableIRQ(USART2_IRQn);
 176              		.loc 1 64 5 is_stmt 1 view .LVU37
 177 0062 2246     		mov	r2, r4
 178 0064 0521     		movs	r1, #5
 179 0066 2620     		movs	r0, #38
 180 0068 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 181              	.LVL8:
  65:Core/Src/Communication/usart.c ****   }
 182              		.loc 1 65 5 view .LVU38
 183 006c 2620     		movs	r0, #38
 184 006e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 185              	.LVL9:
 186              		.loc 1 67 1 is_stmt 0 view .LVU39
 187 0072 D1E7     		b	.L5
 188              	.L10:
 189              		.align	2
 190              	.L9:
 191 0074 00440040 		.word	1073759232
 192 0078 00000240 		.word	1073872896
 193              		.cfi_endproc
 194              	.LFE225:
 196              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 197              		.align	1
ARM GAS  /tmp/ccsirKft.s 			page 6


 198              		.global	MX_USART2_UART_Init
 199              		.syntax unified
 200              		.thumb
 201              		.thumb_func
 203              	MX_USART2_UART_Init:
 204              	.LFB223:
  24:Core/Src/Communication/usart.c ****   huart2.Instance = USART2;
 205              		.loc 1 24 32 is_stmt 1 view -0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209 0000 08B5     		push	{r3, lr}
 210              	.LCFI7:
 211              		.cfi_def_cfa_offset 8
 212              		.cfi_offset 3, -8
 213              		.cfi_offset 14, -4
  25:Core/Src/Communication/usart.c ****   huart2.Init.BaudRate = 115200;
 214              		.loc 1 25 3 view .LVU41
  25:Core/Src/Communication/usart.c ****   huart2.Init.BaudRate = 115200;
 215              		.loc 1 25 19 is_stmt 0 view .LVU42
 216 0002 0C48     		ldr	r0, .L15
 217 0004 0C4B     		ldr	r3, .L15+4
 218 0006 0360     		str	r3, [r0]
  26:Core/Src/Communication/usart.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 219              		.loc 1 26 3 is_stmt 1 view .LVU43
  26:Core/Src/Communication/usart.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 220              		.loc 1 26 24 is_stmt 0 view .LVU44
 221 0008 4FF4E133 		mov	r3, #115200
 222 000c 4360     		str	r3, [r0, #4]
  27:Core/Src/Communication/usart.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 223              		.loc 1 27 3 is_stmt 1 view .LVU45
  27:Core/Src/Communication/usart.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 224              		.loc 1 27 26 is_stmt 0 view .LVU46
 225 000e 0023     		movs	r3, #0
 226 0010 8360     		str	r3, [r0, #8]
  28:Core/Src/Communication/usart.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 227              		.loc 1 28 3 is_stmt 1 view .LVU47
  28:Core/Src/Communication/usart.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 228              		.loc 1 28 24 is_stmt 0 view .LVU48
 229 0012 C360     		str	r3, [r0, #12]
  29:Core/Src/Communication/usart.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 230              		.loc 1 29 3 is_stmt 1 view .LVU49
  29:Core/Src/Communication/usart.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 231              		.loc 1 29 22 is_stmt 0 view .LVU50
 232 0014 0361     		str	r3, [r0, #16]
  30:Core/Src/Communication/usart.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 233              		.loc 1 30 3 is_stmt 1 view .LVU51
  30:Core/Src/Communication/usart.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 234              		.loc 1 30 20 is_stmt 0 view .LVU52
 235 0016 0C22     		movs	r2, #12
 236 0018 4261     		str	r2, [r0, #20]
  31:Core/Src/Communication/usart.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 237              		.loc 1 31 3 is_stmt 1 view .LVU53
  31:Core/Src/Communication/usart.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 238              		.loc 1 31 25 is_stmt 0 view .LVU54
 239 001a 8361     		str	r3, [r0, #24]
  32:Core/Src/Communication/usart.c ****   if (HAL_UART_Init(&huart2) != HAL_OK) Error_Handler();
ARM GAS  /tmp/ccsirKft.s 			page 7


 240              		.loc 1 32 3 is_stmt 1 view .LVU55
  32:Core/Src/Communication/usart.c ****   if (HAL_UART_Init(&huart2) != HAL_OK) Error_Handler();
 241              		.loc 1 32 28 is_stmt 0 view .LVU56
 242 001c C361     		str	r3, [r0, #28]
  33:Core/Src/Communication/usart.c ****   HAL_UART_MspInit(&huart2);
 243              		.loc 1 33 3 is_stmt 1 view .LVU57
  33:Core/Src/Communication/usart.c ****   HAL_UART_MspInit(&huart2);
 244              		.loc 1 33 7 is_stmt 0 view .LVU58
 245 001e FFF7FEFF 		bl	HAL_UART_Init
 246              	.LVL10:
  33:Core/Src/Communication/usart.c ****   HAL_UART_MspInit(&huart2);
 247              		.loc 1 33 6 view .LVU59
 248 0022 18B9     		cbnz	r0, .L14
 249              	.L12:
  34:Core/Src/Communication/usart.c **** }
 250              		.loc 1 34 3 is_stmt 1 view .LVU60
 251 0024 0348     		ldr	r0, .L15
 252 0026 FFF7FEFF 		bl	HAL_UART_MspInit
 253              	.LVL11:
  35:Core/Src/Communication/usart.c **** 
 254              		.loc 1 35 1 is_stmt 0 view .LVU61
 255 002a 08BD     		pop	{r3, pc}
 256              	.L14:
  33:Core/Src/Communication/usart.c ****   HAL_UART_MspInit(&huart2);
 257              		.loc 1 33 41 is_stmt 1 discriminator 1 view .LVU62
 258 002c FFF7FEFF 		bl	Error_Handler
 259              	.LVL12:
 260 0030 F8E7     		b	.L12
 261              	.L16:
 262 0032 00BF     		.align	2
 263              	.L15:
 264 0034 00000000 		.word	huart2
 265 0038 00440040 		.word	1073759232
 266              		.cfi_endproc
 267              	.LFE223:
 269              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 270              		.align	1
 271              		.global	HAL_UART_MspDeInit
 272              		.syntax unified
 273              		.thumb
 274              		.thumb_func
 276              	HAL_UART_MspDeInit:
 277              	.LVL13:
 278              	.LFB226:
  68:Core/Src/Communication/usart.c **** 
  69:Core/Src/Communication/usart.c **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle) {
 279              		.loc 1 69 57 view -0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              		.loc 1 69 57 is_stmt 0 view .LVU64
 284 0000 08B5     		push	{r3, lr}
 285              	.LCFI8:
 286              		.cfi_def_cfa_offset 8
 287              		.cfi_offset 3, -8
 288              		.cfi_offset 14, -4
  70:Core/Src/Communication/usart.c ****   if(uartHandle->Instance==USART2) {
ARM GAS  /tmp/ccsirKft.s 			page 8


 289              		.loc 1 70 3 is_stmt 1 view .LVU65
 290              		.loc 1 70 16 is_stmt 0 view .LVU66
 291 0002 0268     		ldr	r2, [r0]
 292              		.loc 1 70 5 view .LVU67
 293 0004 084B     		ldr	r3, .L21
 294 0006 9A42     		cmp	r2, r3
 295 0008 00D0     		beq	.L20
 296              	.LVL14:
 297              	.L17:
  71:Core/Src/Communication/usart.c ****     /* Peripheral clock disable */
  72:Core/Src/Communication/usart.c ****     __HAL_RCC_USART2_CLK_DISABLE();
  73:Core/Src/Communication/usart.c **** 
  74:Core/Src/Communication/usart.c ****     /**USART2 GPIO Configuration
  75:Core/Src/Communication/usart.c ****     PA2     ------> USART2_TX
  76:Core/Src/Communication/usart.c ****     PA3     ------> USART2_RX
  77:Core/Src/Communication/usart.c ****     */
  78:Core/Src/Communication/usart.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2|GPIO_PIN_3);
  79:Core/Src/Communication/usart.c **** 
  80:Core/Src/Communication/usart.c ****     /* USART2 interrupt Deinit */
  81:Core/Src/Communication/usart.c ****      HAL_NVIC_DisableIRQ(USART2_IRQn);
  82:Core/Src/Communication/usart.c ****   }
  83:Core/Src/Communication/usart.c **** }
 298              		.loc 1 83 1 view .LVU68
 299 000a 08BD     		pop	{r3, pc}
 300              	.LVL15:
 301              	.L20:
  72:Core/Src/Communication/usart.c **** 
 302              		.loc 1 72 5 is_stmt 1 view .LVU69
 303 000c 074A     		ldr	r2, .L21+4
 304 000e 136C     		ldr	r3, [r2, #64]
 305 0010 23F40033 		bic	r3, r3, #131072
 306 0014 1364     		str	r3, [r2, #64]
  78:Core/Src/Communication/usart.c **** 
 307              		.loc 1 78 5 view .LVU70
 308 0016 0C21     		movs	r1, #12
 309 0018 0548     		ldr	r0, .L21+8
 310              	.LVL16:
  78:Core/Src/Communication/usart.c **** 
 311              		.loc 1 78 5 is_stmt 0 view .LVU71
 312 001a FFF7FEFF 		bl	HAL_GPIO_DeInit
 313              	.LVL17:
  81:Core/Src/Communication/usart.c ****   }
 314              		.loc 1 81 6 is_stmt 1 view .LVU72
 315 001e 2620     		movs	r0, #38
 316 0020 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 317              	.LVL18:
 318              		.loc 1 83 1 is_stmt 0 view .LVU73
 319 0024 F1E7     		b	.L17
 320              	.L22:
 321 0026 00BF     		.align	2
 322              	.L21:
 323 0028 00440040 		.word	1073759232
 324 002c 00380240 		.word	1073887232
 325 0030 00000240 		.word	1073872896
 326              		.cfi_endproc
 327              	.LFE226:
 329              		.global	huart2
ARM GAS  /tmp/ccsirKft.s 			page 9


 330              		.section	.bss.huart2,"aw",%nobits
 331              		.align	2
 334              	huart2:
 335 0000 00000000 		.space	72
 335      00000000 
 335      00000000 
 335      00000000 
 335      00000000 
 336              		.text
 337              	.Letext0:
 338              		.file 2 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 339              		.file 3 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 340              		.file 4 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 341              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 342              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 343              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 344              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 345              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 346              		.file 10 "Core/Inc/Communication/usart.h"
 347              		.file 11 "Core/Inc/main.h"
ARM GAS  /tmp/ccsirKft.s 			page 10


DEFINED SYMBOLS
                            *ABS*:00000000 usart.c
     /tmp/ccsirKft.s:21     .text.__io_putchar:00000000 $t
     /tmp/ccsirKft.s:27     .text.__io_putchar:00000000 __io_putchar
     /tmp/ccsirKft.s:63     .text.__io_putchar:0000001c $d
     /tmp/ccsirKft.s:334    .bss.huart2:00000000 huart2
     /tmp/ccsirKft.s:68     .text.HAL_UART_MspInit:00000000 $t
     /tmp/ccsirKft.s:74     .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
     /tmp/ccsirKft.s:191    .text.HAL_UART_MspInit:00000074 $d
     /tmp/ccsirKft.s:197    .text.MX_USART2_UART_Init:00000000 $t
     /tmp/ccsirKft.s:203    .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
     /tmp/ccsirKft.s:264    .text.MX_USART2_UART_Init:00000034 $d
     /tmp/ccsirKft.s:270    .text.HAL_UART_MspDeInit:00000000 $t
     /tmp/ccsirKft.s:276    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
     /tmp/ccsirKft.s:323    .text.HAL_UART_MspDeInit:00000028 $d
     /tmp/ccsirKft.s:331    .bss.huart2:00000000 $d

UNDEFINED SYMBOLS
HAL_UART_Transmit
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_UART_Init
Error_Handler
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
